release_tracks: [ALPHA, BETA, GA]
help_text:
  brief: Remove IAM policy binding of a Cloud Spanner database.
  description: |
    Remove an IAM policy binding of a Cloud Spanner database.

  examples: |
    To Remove an IAM policy binding for the role of 'roles/editor' for the user 'test-user@gmail.com'
    with database 'my-database' and instance 'my-instance', run:

      $ {command} my-database --instance='my-instance' --member='user:test-user@gmail.com' --role='roles/editor'

    See https://cloud.google.com/iam/docs/managing-policies for details of
    policy role and member types.

request:
  collection: spanner.projects.instances.databases

arguments:
  resource:
    help_text: The Cloud Spanner database to remove the IAM policy binding from.
    spec: !REF googlecloudsdk.command_lib.spanner.resources:database

iam:
  policy_version: 3
  get_iam_policy_version_path: getIamPolicyRequest.options.requestedPolicyVersion

ALPHA:
  help_text:
    brief: Remove IAM policy binding of a Cloud Spanner database.
    description: |
      Remove an IAM policy binding from the IAM policy of a Cloud Spanner database. One binding consists of a member,
      a role, and an optional condition.

    examples: |
      To remove an IAM policy binding for the role of 'roles/editor' for the user 'test-user@gmail.com'
      with database 'my-database' and instance 'my-instance', run:

        $ {command} my-database --instance='my-instance' --member='user:test-user@gmail.com' --role='roles/editor'

      To remove an IAM policy binding which expires at the end of the year 2018 for the role of
      'roles/spanner.databaseAdmin' and the user 'test-user@gmail.com' with database 'my-database' and instance 'my-instance', run:

        $ {command} my-database --instance='my-instance' --member='user:test-user@gmail.com' --role='roles/spanner.databaseAdmin' --condition='expression=request.time < timestamp("2019-01-01T00:00:00Z"),title=expires_end_of_2018,description=Expires at midnight on 2018-12-31'

      See https://cloud.google.com/iam/docs/managing-policies for details of
      policy role and member types.

  iam:
    enable_condition: true
    policy_version: 3
    get_iam_policy_version_path: getIamPolicyRequest.options.requestedPolicyVersion
