/*  ~ Copyright (C) 2021 Google Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License. You may obtain a copy of
  ~ the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under
  ~ the License.
*/

plugins {
    id 'java'
    id 'maven-publish'
    id "com.google.protobuf" version "0.8.15"
    id "com.commercehub.gradle.plugin.avro" version "0.9.1"
}

repositories {
    mavenCentral()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.apache.beam:beam-sdks-java-core:2.26.0'
    implementation 'org.apache.beam:beam-sdks-java-io-google-cloud-platform:2.26.0'
    implementation 'org.threeten:threetenbp:1.4.4'
    implementation 'org.apache.beam:beam-sdks-java-extensions-google-cloud-platform-core:2.26.0'
    implementation 'org.apache.beam:beam-sdks-java-extensions-protobuf:2.26.0'
    implementation 'org.apache.beam:beam-runners-google-cloud-dataflow-java:2.26.0'
    implementation 'org.apache.beam:beam-runners-direct-java:2.26.0'
    implementation 'org.apache.beam:beam-sdks-java-io-jdbc:2.26.0'
    implementation 'org.apache.beam:beam-vendor-guava-20_0:0.1'
    implementation 'org.apache.beam:beam-sdks-java-io-cassandra:2.26.0'
    implementation 'com.datastax.cassandra:cassandra-driver-core:3.6.0'
    implementation 'org.apache.hadoop:hadoop-mapreduce-client-core:2.8.5'
    implementation 'org.apache.hadoop:hadoop-common:2.8.5'
    implementation 'com.google.http-client:google-http-client-apache-v2:1.31.0'
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'com.google.cloud:google-cloud-core:1.92.2'
    implementation 'com.google.cloud:google-cloud-bigquery:1.108.0'
    implementation 'joda-time:joda-time:2.10.5'
    implementation 'com.google.apis:google-api-services-storage:v1-rev20200611-1.30.10'
    implementation 'com.google.api.grpc:proto-google-cloud-datastore-v1:0.85.0'
    implementation 'com.google.cloud:google-cloud-spanner:1.49.1'
    implementation 'com.google.api.grpc:proto-google-cloud-spanner-admin-database-v1:1.49.1'
    implementation 'com.google.api.grpc:proto-google-cloud-bigtable-v2:1.9.1'
    implementation 'com.google.apis:google-api-services-bigquery:v2-rev20200719-1.30.10'
    implementation 'com.google.protobuf:protobuf-java:3.11.1'
    implementation 'com.google.protobuf:protobuf-java-util:3.11.1'
    implementation 'com.google.code.findbugs:jsr305:3.0.1'
    implementation 'com.google.guava:guava:26.0-jre'
    implementation 'org.json:json:20200518'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.google.auto.value:auto-value-annotations:1.7.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.2'
    implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'
    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    implementation 'org.apache.commons:commons-pool2:2.8.1'
    implementation 'org.apache.commons:commons-dbcp2:2.7.0'
    implementation 'org.apache.commons:commons-csv:1.8'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'commons-codec:commons-codec:1.14'
    implementation 'org.apache.avro:avro:1.8.2'
    implementation 'org.apache.beam:beam-sdks-java-io-parquet:2.26.0'
    implementation 'org.apache.kafka:kafka-clients:1.0.0'
    implementation 'org.springframework:spring-expression:5.2.8.RELEASE'
    implementation 'com.google.api:gax:1.54.0'
    implementation 'io.opencensus:opencensus-api:0.24.0'
    implementation 'com.google.cloud:google-cloud-dlp:2.1.0'
    implementation 'com.google.cloud:google-cloud-kms:1.40.0'
    implementation 'com.google.api.grpc:proto-google-cloud-kms-v1:0.87.0'
    implementation 'org.tensorflow:proto:1.15.0'
    implementation 'org.apache.hbase:hbase-common:1.4.5'
    runtimeOnly 'com.google.cloud.bigtable:bigtable-beam-import:1.15.0'
    runtimeOnly 'com.google.cloud.bigtable:bigtable-hbase-1.x-shaded:1.15.0'
    runtimeOnly 'com.google.cloud.bigtable:bigtable-client-core:1.15.0'
    testImplementation 'org.hamcrest:hamcrest-core:2.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    testImplementation 'junit:junit-dep:4.10'
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'org.apache.derby:derby:10.15.2.0'
    testImplementation 'org.apache.derby:derbyclient:10.15.2.0'
    testImplementation 'org.apache.derby:derbynet:10.15.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
    testImplementation 'com.google.truth:truth:1.0.1'
    testImplementation 'org.mock-server:mockserver-netty:5.11.1'
    testImplementation 'org.mock-server:mockserver-junit-rule:5.11.1'
    testImplementation 'org.scassandra:java-client:1.1.2'
    testImplementation 'org.scassandra:cql-antlr:1.1.2'
    testImplementation 'junit:junit:4.13'
    testAnnotationProcessor 'com.google.auto.value:auto-value:1.7.4'
    annotationProcessor 'com.google.auto.value:auto-value:1.7.4'
}


group = 'com.google.cloud.teleport'
version = '0.1-SNAPSHOT'
description = 'Google Cloud Teleport'
java.sourceCompatibility = JavaVersion.VERSION_1_8

java {
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

generateAvroProtocol {
    source("src/main/resources/schema/avro")
}
generateAvroJava {
    source("src/main/resources/schema/avro")
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

task execute (type:JavaExec) {
    main = System.getProperty("mainClass")
    classpath = sourceSets.main.runtimeClasspath
    systemProperties System.getProperties()
    args System.getProperty("exec.args", "").split()
}