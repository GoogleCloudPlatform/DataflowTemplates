{
  "services": [
    {
      "serviceName": "accessapproval.googleapis.com",
      "displayName": "Access Approval",
      "methods": [
        {
          "methodName": "google.cloud.accessapproval.v1.AccessApproval.ApproveApprovalRequest"
        },
        {
          "methodName": "google.cloud.accessapproval.v1.AccessApproval.DeleteAccessApprovalSettings"
        },
        {
          "methodName": "google.cloud.accessapproval.v1.AccessApproval.DismissApprovalRequest"
        },
        {
          "methodName": "google.cloud.accessapproval.v1.AccessApproval.UpdateAccessApprovalSettings"
        }
      ]
    },
    {
      "serviceName": "apigee.googleapis.com",
      "displayName": "Apigee",
      "methods": [
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsCustomReport.CreateCustomReport"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsCustomReport.DeleteCustomReport"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsCustomReport.GetCustomReport"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsCustomReport.ListCustomReports"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsCustomReport.UpdateCustomReport"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsDatastore.DeleteDatastore"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsInteractiveQuery.GetOptimizedStats"
        },
        {
          "methodName": "google.cloud.apigee.v1.AnalyticsSchema.GetSchema"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.CreateApiDoc"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.DeleteApiDoc"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.GetApiDoc"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.ListApiDocs"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.ListPublishableProducts"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.PostSnapshot"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiDocs.UpdateApiDoc"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.CreateApiProduct"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.DeleteApiProduct"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.DeleteApiProductAttribute"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.GetApiProduct"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.ListApiProductAttributes"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.ListApiProducts"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.UpdateApiProduct"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProducts.UpdateApiProductAttributes"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.CreateApiProxyRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.DeleteApiProxy"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.DeleteApiProxyRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.GetApiProxy"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.GetApiProxyRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.ListApiProxies"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.ListApiProxyRevisions"
        },
        {
          "methodName": "google.cloud.apigee.v1.ApiProxyService.UpdateApiProxyRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.Apps.GetApp"
        },
        {
          "methodName": "google.cloud.apigee.v1.Apps.ListApps"
        },
        {
          "methodName": "google.cloud.apigee.v1.AsyncQueryService.CreateAsyncQuery"
        },
        {
          "methodName": "google.cloud.apigee.v1.AsyncQueryService.GetAsyncQueryResultView"
        },
        {
          "methodName": "google.cloud.apigee.v1.AsyncQueryService.ListAsyncQueries"
        },
        {
          "methodName": "google.cloud.apigee.v1.CacheService.DeleteCache"
        },
        {
          "methodName": "google.cloud.apigee.v1.CacheService.ListCaches"
        },
        {
          "methodName": "google.cloud.apigee.v1.CollectionService.GetDataLocation"
        },
        {
          "methodName": "google.cloud.apigee.v1.Consumer.DeleteConsumerUser"
        },
        {
          "methodName": "google.cloud.apigee.v1.Consumer.GetConsumerUser"
        },
        {
          "methodName": "google.cloud.apigee.v1.Consumer.ListConsumerUsers"
        },
        {
          "methodName": "google.cloud.apigee.v1.Consumer.UpdateConsumerUser"
        },
        {
          "methodName": "google.cloud.apigee.v1.Customcss.GetCustomCss"
        },
        {
          "methodName": "google.cloud.apigee.v1.Customcss.GetEditorSchema"
        },
        {
          "methodName": "google.cloud.apigee.v1.Customcss.PublishCustomCss"
        },
        {
          "methodName": "google.cloud.apigee.v1.Customcss.UpdateCustomCss"
        },
        {
          "methodName": "google.cloud.apigee.v1.DataMaskService.GetEnvironmentDebugMask"
        },
        {
          "methodName": "google.cloud.apigee.v1.DataMaskService.UpdateEnvironmentDebugMask"
        },
        {
          "methodName": "google.cloud.apigee.v1.DebugSessionService.CreateDebugSession"
        },
        {
          "methodName": "google.cloud.apigee.v1.DebugSessionService.DeleteDebugSessionData"
        },
        {
          "methodName": "google.cloud.apigee.v1.DebugSessionService.GetDebugSessionTransaction"
        },
        {
          "methodName": "google.cloud.apigee.v1.DebugSessionService.ListDebugSessionTransactions"
        },
        {
          "methodName": "google.cloud.apigee.v1.DebugSessionService.ListDebugSessions"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.AttachSharedFlowToFlowHook"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.DeployApiProxy"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.DeploySharedFlow"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.DetachSharedFlowFromFlowHook"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.GetApiDeployment"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.GetFlowHook"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.GetSharedFlowDeployment"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListApiDeployments"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListApiDeploymentsInEnvironment"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListApiRevisionDeployments"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListOrganizationDeployments"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListSharedFlowDeployments"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListSharedFlowDeploymentsInEnvironment"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.ListSharedFlowRevisionDeployments"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.UndeployApiProxy"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeploymentService.UndeploySharedFlow"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperAppKeys.CreateDeveloperAppKey"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperAppKeys.DeleteApiProduct"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperAppKeys.DeleteDeveloperAppKey"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperAppKeys.ReplaceDeveloperAppKey"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperAppKeys.UpdateDeveloperAppKey"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperAppKeys.UpdateDeveloperAppKeyApiProduct"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.CreateDeveloperApp"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.DeleteDeveloperApp"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.DeleteDeveloperAppAttribute"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.GenerateKeyPairOrUpdateDeveloperAppStatus"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.GetDeveloperApp"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.ListDeveloperApps"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.UpdateDeveloperApp"
        },
        {
          "methodName": "google.cloud.apigee.v1.DeveloperApps.UpdateDeveloperAppAttributes"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.CreateDeveloper"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.DeleteDeveloper"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.DeleteDeveloperAttribute"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.GetDeveloper"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.ListDevelopers"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.SetDeveloperStatus"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.UpdateDeveloper"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.UpdateDeveloperAttribute"
        },
        {
          "methodName": "google.cloud.apigee.v1.Developers.UpdateDeveloperAttributes"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupAttachmentService.CreateEnvironmentGroupAttachment"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupAttachmentService.DeleteEnvironmentGroupAttachment"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupAttachmentService.ListEnvironmentGroupAttachments"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupService.CreateEnvironmentGroup"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupService.DeleteEnvironmentGroup"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupService.GetEnvironmentGroup"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupService.ListEnvironmentGroups"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentGroupService.UpdateEnvironmentGroup"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.CreateEnvironment"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.DeleteEnvironment"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.GetDeployedConfig"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.GetEnvironment"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.ListEnvironments"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.Subscribe"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.Unsubscribe"
        },
        {
          "methodName": "google.cloud.apigee.v1.EnvironmentService.UpdateEnvironment"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceAttachmentService.CreateInstanceAttachment"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceAttachmentService.DeleteInstanceAttachment"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceAttachmentService.ListInstanceAttachments"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceService.CreateInstance"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceService.DeleteInstance"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceService.GetInstance"
        },
        {
          "methodName": "google.cloud.apigee.v1.InstanceService.ListInstances"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.CreateApiProxyKeyValueMap"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.CreateEnvironmentKeyValueMap"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.CreateOrganizationKeyValueMap"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.DeleteApiProxyKeyValueMap"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.DeleteEnvironmentKeyValueMap"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.DeleteOrganizationKeyValueMap"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.ListApiProxyKeyValueMaps"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.ListEnvironmentKeyValueMaps"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeyValueMapService.ListOrganizationKeyValueMaps"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeystoreService.CreateAlias"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeystoreService.CreateKeystore"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeystoreService.DeleteKeystore"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeystoreService.GetAlias"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeystoreService.ListAliases"
        },
        {
          "methodName": "google.cloud.apigee.v1.KeystoreService.ListKeystores"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.CreateMenuItem"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.DeleteMenuItem"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.ListMenuItems"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.PublishMenuItem"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.ToggleNested"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.UpdateMenuItem"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuItems.UpdatePriorities"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuTypes.ListMenuTypes"
        },
        {
          "methodName": "google.cloud.apigee.v1.MenuTypes.ListMenuTypesByPage"
        },
        {
          "methodName": "google.cloud.apigee.v1.OrganizationService.CreateOrganization"
        },
        {
          "methodName": "google.cloud.apigee.v1.OrganizationService.GetOrganization"
        },
        {
          "methodName": "google.cloud.apigee.v1.OrganizationService.GetSyncAuthorization"
        },
        {
          "methodName": "google.cloud.apigee.v1.OrganizationService.SetSyncAuthorization"
        },
        {
          "methodName": "google.cloud.apigee.v1.OrganizationService.UpdateOrganization"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.CreatePage"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.DeletePage"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.GetPage"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.ListPages"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.PublishPage"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.SetPageContent"
        },
        {
          "methodName": "google.cloud.apigee.v1.Pages.UpdatePage"
        },
        {
          "methodName": "google.cloud.apigee.v1.ProjectService.GetEntitlement"
        },
        {
          "methodName": "google.cloud.apigee.v1.ProjectService.GetProjectOrganization"
        },
        {
          "methodName": "google.cloud.apigee.v1.ProjectService.GetSetupContext"
        },
        {
          "methodName": "google.cloud.apigee.v1.ProjectService.UpdateSetupContext"
        },
        {
          "methodName": "google.cloud.apigee.v1.ProjectService.ValidateSetupConfig"
        },
        {
          "methodName": "google.cloud.apigee.v1.ReferenceService.CreateReference"
        },
        {
          "methodName": "google.cloud.apigee.v1.ReferenceService.DeleteReference"
        },
        {
          "methodName": "google.cloud.apigee.v1.ReferenceService.GetReference"
        },
        {
          "methodName": "google.cloud.apigee.v1.ReferenceService.ListReferences"
        },
        {
          "methodName": "google.cloud.apigee.v1.ReferenceService.UpdateReference"
        },
        {
          "methodName": "google.cloud.apigee.v1.ResourceFileService.CreateEnvironmentResource"
        },
        {
          "methodName": "google.cloud.apigee.v1.ResourceFileService.DeleteEnvironmentResource"
        },
        {
          "methodName": "google.cloud.apigee.v1.ResourceFileService.UpdateEnvironmentResource"
        },
        {
          "methodName": "google.cloud.apigee.v1.RuntimeService.GetDeployedIngressConfig"
        },
        {
          "methodName": "google.cloud.apigee.v1.RuntimeService.ReportInstanceStatus"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.CreateSharedFlowRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.DeleteSharedFlow"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.DeleteSharedFlowRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.GetSharedFlow"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.GetSharedFlowRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.ListSharedFlowRevisions"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.ListSharedFlows"
        },
        {
          "methodName": "google.cloud.apigee.v1.SharedFlowService.UpdateSharedFlowRevision"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteDomain.DisableCustomDomain"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteDomain.EnableCustomDomain"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteDomain.GetCustomDomainConfig"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteEmail.GetEmailTemplate"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteFile.DeleteFile"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteFile.ListFiles"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteFile.UploadFile"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteOperation.GetDefaultAnonAllowed"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteOperation.GetDraftToken"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteOperation.GetOrgType"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteOperation.ResetSmtp"
        },
        {
          "methodName": "google.cloud.apigee.v1.SiteOperation.TrashSite"
        },
        {
          "methodName": "google.cloud.apigee.v1.Sites.CreateSite"
        },
        {
          "methodName": "google.cloud.apigee.v1.Sites.GetAllInOrgOrSingleWithDomain"
        },
        {
          "methodName": "google.cloud.apigee.v1.Sites.GetSite"
        },
        {
          "methodName": "google.cloud.apigee.v1.Sites.GetSmtp"
        },
        {
          "methodName": "google.cloud.apigee.v1.Sites.ListProxySpecs"
        },
        {
          "methodName": "google.cloud.apigee.v1.Sites.UpdateSmtp"
        },
        {
          "methodName": "google.cloud.apigee.v1.System.GetAnnouncement"
        },
        {
          "methodName": "google.cloud.apigee.v1.System.GetConfig"
        },
        {
          "methodName": "google.cloud.apigee.v1.System.GetSystemState"
        },
        {
          "methodName": "google.cloud.apigee.v1.TargetServerService.CreateTargetServer"
        },
        {
          "methodName": "google.cloud.apigee.v1.TargetServerService.DeleteTargetServer"
        },
        {
          "methodName": "google.cloud.apigee.v1.TargetServerService.GetTargetServer"
        },
        {
          "methodName": "google.cloud.apigee.v1.TargetServerService.ListTargetServers"
        },
        {
          "methodName": "google.cloud.apigee.v1.TargetServerService.UpdateTargetServer"
        },
        {
          "methodName": "google.cloud.apigee.v1.Zones.GetAudiencesEnabled"
        },
        {
          "methodName": "google.cloud.apigee.v1.Zones.GetZone"
        },
        {
          "methodName": "google.cloud.apigee.v1.Zones.GetZoneAudiencesEnabledForZone"
        },
        {
          "methodName": "google.cloud.apigee.v1.Zones.ListIdentityProviders"
        },
        {
          "methodName": "google.cloud.apigee.v1.Zones.ListZones"
        },
        {
          "methodName": "google.cloud.apigee.v1.Zones.UpdateZone"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "apigeeconnect.googleapis.com",
      "displayName": "Apigee Connect",
      "methods": [
        {
          "methodName": "google.cloud.apigeeconnect.v1.ConnectionService.ListConnections"
        },
        {
          "methodName": "google.cloud.apigeeconnect.v1.Tether.Egress"
        }
      ]
    },
    {
      "serviceName": "apikeys.googleapis.com",
      "displayName": "API Keys",
      "methods": [
        {
          "methodName": "google.api.apikeys.v1.ApiKeys.CreateApiKey"
        },
        {
          "methodName": "google.api.apikeys.v1.ApiKeys.DeleteApiKey"
        },
        {
          "methodName": "google.api.apikeys.v1.ApiKeys.DeleteApiKeys"
        },
        {
          "methodName": "google.api.apikeys.v1.ApiKeys.PatchApiKey"
        },
        {
          "methodName": "google.api.apikeys.v1.ApiKeys.RegenerateApiKey"
        },
        {
          "methodName": "google.api.apikeys.v1.ApiKeys.RevertApiKey"
        },
        {
          "methodName": "google.api.apikeys.v2beta1.ApiKeys.CreateKey"
        },
        {
          "methodName": "google.api.apikeys.v2beta1.ApiKeys.DeleteKey"
        },
        {
          "methodName": "google.api.apikeys.v2beta1.ApiKeys.UpdateKey"
        }
      ]
    },
    {
      "serviceName": "appengine.googleapis.com",
      "displayName": "App Engine",
      "methods": [
        {
          "methodName": "apphosting.admin.ApphostingPrivateAdmin.UpdateVersion"
        },
        {
          "methodName": "apphosting.admin.DatastoreWriteController.SetDatastoreWritePermission"
        },
        {
          "methodName": "apphosting.admin.proto.E2ETestService.SetServingStatus"
        },
        {
          "methodName": "apphosting.admin.proto.GooglerSettings.SetGooglerSettings"
        },
        {
          "methodName": "apphosting.admin.proto.LatchKeySettings.SetLatchKeySettings"
        },
        {
          "methodName": "apphosting.admin.proto.MemcacheConfigService.SetMemcacheConfig"
        },
        {
          "methodName": "apphosting.admin.proto.RuntimeWhitelisting.SetAllowsDeprecatedJava"
        },
        {
          "methodName": "apphosting.admin.proto.RuntimeWhitelisting.SetAllowsPython25"
        },
        {
          "methodName": "com.google.appengine.legacy.conf_updated"
        },
        {
          "methodName": "com.google.appengine.legacy.cron_created"
        },
        {
          "methodName": "com.google.appengine.legacy.cron_deleted"
        },
        {
          "methodName": "com.google.appengine.legacy.dos_configuration_changed"
        },
        {
          "methodName": "com.google.appengine.legacy.dos_enforcement_disabled"
        },
        {
          "methodName": "com.google.appengine.legacy.dos_enforcement_enabled"
        },
        {
          "methodName": "com.google.appengine.legacy.index_created"
        },
        {
          "methodName": "com.google.appengine.legacy.index_deleted"
        },
        {
          "methodName": "com.google.appengine.legacy.queue_created"
        },
        {
          "methodName": "com.google.appengine.legacy.queue_updated"
        },
        {
          "methodName": "com.google.appengine.legacy.version_deleted"
        },
        {
          "methodName": "com.google.appengine.legacy.version_made_default"
        },
        {
          "methodName": "google.appengine.v1.Applications.CreateApplication"
        },
        {
          "methodName": "google.appengine.v1.Applications.RepairApplication"
        },
        {
          "methodName": "google.appengine.v1.Applications.SetIamPolicy"
        },
        {
          "methodName": "google.appengine.v1.Applications.UpdateApplication"
        },
        {
          "methodName": "google.appengine.v1.AuthorizedCertificates.CreateAuthorizedCertificate"
        },
        {
          "methodName": "google.appengine.v1.AuthorizedCertificates.DeleteAuthorizedCertificate"
        },
        {
          "methodName": "google.appengine.v1.AuthorizedCertificates.UpdateAuthorizedCertificate"
        },
        {
          "methodName": "google.appengine.v1.DomainMappings.CreateDomainMapping"
        },
        {
          "methodName": "google.appengine.v1.DomainMappings.DeleteDomainMapping"
        },
        {
          "methodName": "google.appengine.v1.DomainMappings.UpdateDomainMapping"
        },
        {
          "methodName": "google.appengine.v1.EmailSenders.CreateEmailSender"
        },
        {
          "methodName": "google.appengine.v1.EmailSenders.DeleteEmailSender"
        },
        {
          "methodName": "google.appengine.v1.Firewall.BatchUpdateIngressRules"
        },
        {
          "methodName": "google.appengine.v1.Firewall.CreateIngressRule"
        },
        {
          "methodName": "google.appengine.v1.Firewall.DeleteIngressRule"
        },
        {
          "methodName": "google.appengine.v1.Firewall.UpdateIngressRule"
        },
        {
          "methodName": "google.appengine.v1.Instances.DebugInstance"
        },
        {
          "methodName": "google.appengine.v1.Instances.DeleteInstance"
        },
        {
          "methodName": "google.appengine.v1.Services.DeleteService"
        },
        {
          "methodName": "google.appengine.v1.Services.SetIamPolicy"
        },
        {
          "methodName": "google.appengine.v1.Services.UpdateService"
        },
        {
          "methodName": "google.appengine.v1.Versions.CreateVersion"
        },
        {
          "methodName": "google.appengine.v1.Versions.DeleteVersion"
        },
        {
          "methodName": "google.appengine.v1.Versions.UpdateVersion"
        },
        {
          "methodName": "google.appengine.v1beta.Applications.CreateApplication"
        },
        {
          "methodName": "google.appengine.v1beta.Applications.RepairApplication"
        },
        {
          "methodName": "google.appengine.v1beta.Applications.UpdateApplication"
        },
        {
          "methodName": "google.appengine.v1beta.AuthorizedCertificates.CreateAuthorizedCertificate"
        },
        {
          "methodName": "google.appengine.v1beta.AuthorizedCertificates.DeleteAuthorizedCertificate"
        },
        {
          "methodName": "google.appengine.v1beta.AuthorizedCertificates.UpdateAuthorizedCertificate"
        },
        {
          "methodName": "google.appengine.v1beta.DomainMappings.CreateDomainMapping"
        },
        {
          "methodName": "google.appengine.v1beta.DomainMappings.DeleteDomainMapping"
        },
        {
          "methodName": "google.appengine.v1beta.DomainMappings.UpdateDomainMapping"
        },
        {
          "methodName": "google.appengine.v1beta.Firewall.BatchUpdateIngressRules"
        },
        {
          "methodName": "google.appengine.v1beta.Firewall.CreateIngressRule"
        },
        {
          "methodName": "google.appengine.v1beta.Firewall.DeleteIngressRule"
        },
        {
          "methodName": "google.appengine.v1beta.Firewall.UpdateIngressRule"
        },
        {
          "methodName": "google.appengine.v1beta.Instances.DebugInstance"
        },
        {
          "methodName": "google.appengine.v1beta.Instances.DeleteInstance"
        },
        {
          "methodName": "google.appengine.v1beta.Services.DeleteService"
        },
        {
          "methodName": "google.appengine.v1beta.Services.UpdateService"
        },
        {
          "methodName": "google.appengine.v1beta.Versions.CreateVersion"
        },
        {
          "methodName": "google.appengine.v1beta.Versions.DeleteVersion"
        },
        {
          "methodName": "google.appengine.v1beta.Versions.UpdateVersion"
        }
      ]
    },
    {
      "serviceName": "automl.googleapis.com",
      "displayName": "Cloud AutoML",
      "methods": [
        {
          "methodName": "google.cloud.automl.v1.AutoMl.CreateDataset"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.CreateModel"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.DeleteDataset"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.DeleteModel"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.DeployModel"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.ExportData"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.ExportModel"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.GetModel"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.ImportData"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.ListDatasets"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.ListModelEvaluations"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.ListModels"
        },
        {
          "methodName": "google.cloud.automl.v1.AutoMl.UndeployModel"
        },
        {
          "methodName": "google.cloud.automl.v1.PredictionService.BatchPredict"
        },
        {
          "methodName": "google.cloud.automl.v1.PredictionService.Predict"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.BatchDeleteExamples"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.BatchManipulateAnnotations"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.CreateAndStartHumanAnnotationTask"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.CreateAnnotationSpec"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.CreateDataset"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.CreateModel"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.DeleteAnnotationSpec"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.DeleteDataset"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.DeleteHumanAnnotationTask"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.DeleteModel"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.DeployModel"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.EstimateDatasetTrainCost"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.EvaluateTranslationModels"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ExportData"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ExportEvaluatedExamples"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ExportModel"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetColumnSpec"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetDataset"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetExample"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetModel"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetModelEvaluation"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetProject"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.GetTableSpec"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ImportData"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListAnnotationSpecs"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListAnnotations"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListColumnSpecs"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListDatasets"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListExamples"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListModelEvaluations"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListModels"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.ListTableSpecs"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.SearchEvaluatedAnnotations"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.SearchExamples"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.UndeployModel"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.UpdateColumnSpec"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.UpdateDataset"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.AutoMl.UpdateTableSpec"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.PredictionService.BatchPredict"
        },
        {
          "methodName": "google.cloud.automl.v1beta1.PredictionService.Predict"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.CreateDataset"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.CreateModel"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.DeleteDataset"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.DeleteModel"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.DeployModel"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.GetModel"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.ImportData"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.ListDatasets"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.ListModels"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.UndeployModel"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.AutoMl.UpdateDataset"
        },
        {
          "methodName": "google.cloud.automl.v1p1beta.PredictionService.Predict"
        },
        {
          "methodName": "google.cloud.location.Locations.GetLocation"
        },
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "bigquery.googleapis.com",
      "displayName": "BigQuery",
      "methods": [
        {
          "methodName": "google.cloud.bigquery.storage.v1.BigQueryRead.CreateReadSession"
        },
        {
          "methodName": "google.cloud.bigquery.storage.v1beta1.BigQueryStorage.CreateReadSession"
        },
        {
          "methodName": "google.cloud.bigquery.storage.v1beta2.BigQueryRead.CreateReadSession"
        },
        {
          "methodName": "google.cloud.bigquery.v2.DatasetService.DeleteDataset"
        },
        {
          "methodName": "google.cloud.bigquery.v2.DatasetService.InsertDataset"
        },
        {
          "methodName": "google.cloud.bigquery.v2.DatasetService.PatchDataset"
        },
        {
          "methodName": "google.cloud.bigquery.v2.DatasetService.UpdateDataset"
        },
        {
          "methodName": "google.cloud.bigquery.v2.JobService.GetQueryResults"
        },
        {
          "methodName": "google.cloud.bigquery.v2.JobService.InsertJob"
        },
        {
          "methodName": "google.cloud.bigquery.v2.JobService.Query"
        },
        {
          "methodName": "google.cloud.bigquery.v2.ModelService.DeleteModel"
        },
        {
          "methodName": "google.cloud.bigquery.v2.ModelService.PatchModel"
        },
        {
          "methodName": "google.cloud.bigquery.v2.RoutineService.DeleteRoutine"
        },
        {
          "methodName": "google.cloud.bigquery.v2.RoutineService.InsertRoutine"
        },
        {
          "methodName": "google.cloud.bigquery.v2.RoutineService.UpdateRoutine"
        },
        {
          "methodName": "google.cloud.bigquery.v2.TableDataService.List"
        },
        {
          "methodName": "google.cloud.bigquery.v2.TableService.DeleteTable"
        },
        {
          "methodName": "google.cloud.bigquery.v2.TableService.InsertTable"
        },
        {
          "methodName": "google.cloud.bigquery.v2.TableService.PatchTable"
        },
        {
          "methodName": "google.cloud.bigquery.v2.TableService.UpdateTable"
        }
      ]
    },
    {
      "serviceName": "bigquerybiengine.googleapis.com",
      "displayName": "BigQuery BI Engine",
      "methods": [
        {
          "methodName": "ExecutionService.Query"
        },
        {
          "methodName": "MetadataService.BatchCreateModel"
        },
        {
          "methodName": "MetadataService.DeleteModel"
        },
        {
          "methodName": "ReservationService.CreateReservation"
        },
        {
          "methodName": "ReservationService.DeleteReservation"
        },
        {
          "methodName": "ReservationService.GetReservation"
        },
        {
          "methodName": "ReservationService.UpdateReservation"
        }
      ]
    },
    {
      "serviceName": "bigqueryconnection.googleapis.com",
      "displayName": "BigQuery Connection",
      "methods": [
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.CreateConnection"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.DeleteConnection"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.GetConnection"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.ListConnections"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.UpdateConnection"
        },
        {
          "methodName": "google.cloud.bigquery.connection.v1.ConnectionService.UpdateConnectionCredential"
        }
      ]
    },
    {
      "serviceName": "bigqueryreservation.googleapis.com",
      "displayName": "BigQuery Reservation",
      "methods": [
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.CreateAssignment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.CreateCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.CreateReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.DeleteAssignment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.DeleteCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.DeleteReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.MergeCapacityCommitments"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.MoveAssignment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.SplitCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.UpdateBiReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.UpdateCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1.ReservationService.UpdateReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.CreateAssignment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.CreateCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.CreateReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.DeleteAssignment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.DeleteCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.DeleteReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.MergeCapacityCommitments"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.MoveAssignment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.SplitCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.UpdateBiReservation"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.UpdateCapacityCommitment"
        },
        {
          "methodName": "google.cloud.bigquery.reservation.v1beta1.ReservationService.UpdateReservation"
        }
      ]
    },
    {
      "serviceName": "bigtable.googleapis.com",
      "displayName": "Cloud Bigtable",
      "methods": [
        {
          "methodName": "google.bigtable.v2.Bigtable.MutateRow"
        },
        {
          "methodName": "google.bigtable.v2.Bigtable.ReadRows"
        }
      ]
    },
    {
      "serviceName": "bigtableadmin.googleapis.com",
      "displayName": "Cloud Bigtable Admin",
      "methods": [
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.CreateAppProfile"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.CreateCluster"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.CreateInstance"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.DeleteAppProfile"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.DeleteCluster"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.DeleteInstance"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.GetAppProfile"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.GetCluster"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.GetIamPolicy"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.GetInstance"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.ListAppProfiles"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.ListClusters"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.ListInstances"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.PartialUpdateInstance"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.SetIamPolicy"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.UpdateAppProfile"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.UpdateCluster"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableInstanceAdmin.UpdateInstance"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.CreateBackup"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.CreateTable"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.CreateTableFromSnapshot"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.DeleteSnapshot"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.DeleteTable"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.GetIamPolicy"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.GetSnapshot"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.GetTable"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.ListSnapshots"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.ListTables"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.RestoreTable"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.SetIamPolicy"
        },
        {
          "methodName": "google.bigtable.admin.v2.BigtableTableAdmin.SnapshotTable"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "bigtabletableadmin.googleapis.com",
      "methods": [
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.BulkDeleteRows"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.CreateColumnFamily"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.CreateTable"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.DeleteColumnFamily"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.DeleteTable"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.GetTable"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.ListTables"
        },
        {
          "methodName": "google.bigtable.admin.table.v1.BigtableTableService.UpdateColumnFamily"
        }
      ]
    },
    {
      "serviceName": "binaryauthorization.googleapis.com",
      "displayName": "Binary Authorization",
      "methods": [
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinaryAuthorizationUiHelpersV1.SearchAvailableAttestors"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.CreateAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.DeleteAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.GetAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.GetPolicy"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.ListAttestors"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.UpdateAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1.BinauthzManagementServiceV1.UpdatePolicy"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.CreateAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.DeleteAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.GetAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.GetPolicy"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.ListAttestors"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.UpdateAttestor"
        },
        {
          "methodName": "google.cloud.binaryauthorization.v1beta1.BinauthzManagementServiceV1Beta1.UpdatePolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.GetIamPolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        }
      ]
    },
    {
      "serviceName": "clientauthconfig.googleapis.com",
      "displayName": "Identity-Aware Proxy (IAP)",
      "methods": [
        {
          "methodName": "CreateBrand"
        },
        {
          "methodName": "CreateClient"
        },
        {
          "methodName": "CreateClientSecret"
        },
        {
          "methodName": "DeleteBrand"
        },
        {
          "methodName": "DeleteClient"
        },
        {
          "methodName": "SubmitBrandReview"
        },
        {
          "methodName": "UndeleteClient"
        },
        {
          "methodName": "UpdateBrand"
        },
        {
          "methodName": "UpdateBrandWithMask"
        },
        {
          "methodName": "UpdateClient"
        },
        {
          "methodName": "UpdateClientWithMask"
        },
        {
          "methodName": "UpdateIcon"
        }
      ]
    },
    {
      "serviceName": "cloudasset.googleapis.com",
      "displayName": "Cloud Asset",
      "methods": [
        {
          "methodName": "google.cloud.asset.v1.AssetService.BatchGetAssetsHistory"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.CreateFeed"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.DeleteFeed"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.ExportAssets"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.GetFeed"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.ListFeeds"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.SearchAllIamPolicies"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.SearchAllResources"
        },
        {
          "methodName": "google.cloud.asset.v1.AssetService.UpdateFeed"
        },
        {
          "methodName": "google.cloud.asset.v1beta1.AssetService.BatchGetAssetsHistory"
        },
        {
          "methodName": "google.cloud.asset.v1beta1.AssetService.ExportAssets"
        },
        {
          "methodName": "google.cloud.asset.v1p1beta1.AssetService.SearchAllIamPolicies"
        },
        {
          "methodName": "google.cloud.asset.v1p1beta1.AssetService.SearchAllResources"
        },
        {
          "methodName": "google.cloud.asset.v1p2beta1.AssetService.CreateFeed"
        },
        {
          "methodName": "google.cloud.asset.v1p2beta1.AssetService.DeleteFeed"
        },
        {
          "methodName": "google.cloud.asset.v1p2beta1.AssetService.ListFeeds"
        },
        {
          "methodName": "google.cloud.asset.v1p2beta1.AssetService.UpdateFeed"
        },
        {
          "methodName": "google.cloud.asset.v1p4beta1.AssetService.AnalyzeIamPolicy"
        },
        {
          "methodName": "google.cloud.asset.v1p4beta1.AssetService.ExportIamPolicyAnalysis"
        },
        {
          "methodName": "google.cloud.asset.v1p5beta1.AssetService.ListAssets"
        }
      ]
    },
    {
      "serviceName": "cloudbilling.googleapis.com",
      "displayName": "Cloud Billing",
      "methods": [
        {
          "methodName": "AssignProjectToBillingAccount"
        },
        {
          "methodName": "AssignResourceToBillingAccount"
        },
        {
          "methodName": "DisableResourceBilling"
        },
        {
          "methodName": "GetProjectBillingInfo"
        },
        {
          "methodName": "GetResourceBillingInfo"
        },
        {
          "methodName": "GetResourceBillingInfoBatch"
        }
      ]
    },
    {
      "serviceName": "cloudbuild.googleapis.com",
      "displayName": "Cloud Build",
      "methods": [
        {
          "methodName": "CloudBuildClusterProxy.CreateBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ArgoAdminV1.CreateBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ArgoAdminV1.GetBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ArgoAdminV1.ListBuilds"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.CancelBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.CreateBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.CreateBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.DeleteBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.GetBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.GetBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.ListBuildTriggers"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.ListBuilds"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.RetryBuild"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.RunBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.CloudBuild.UpdateBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.ConstructAppManifest"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.CreateBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.CreateGitHubEnterpriseConfig"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.CreateGitHubInstallation"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.DeleteBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.DeleteGitHubEnterpriseConfig"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.DeleteGitHubInstallation"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.GetBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.GetGlobalTriggerSettings"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.ListBuildTriggers"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.ListGitHubInstallationsForProject"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.ListGitHubRefs"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.ProcessAppManifestCallback"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.RunBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.UpdateBuildTrigger"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.UpdateGitHubInstallation"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1.ProctorAdminService.UpdateGlobalTriggerSettings"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1beta1.CloudBuild.CreateWorkerPool"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1beta1.CloudBuild.DeleteWorkerPool"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1beta1.CloudBuild.GetWorkerPool"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1beta1.CloudBuild.ListWorkerPools"
        },
        {
          "methodName": "google.devtools.cloudbuild.v1beta1.CloudBuild.UpdateWorkerPool"
        }
      ]
    },
    {
      "serviceName": "clouddebugger.googleapis.com",
      "displayName": "Cloud Debugger",
      "methods": [
        {
          "methodName": "DeleteBreakpoint"
        },
        {
          "methodName": "GetBreakpoint"
        },
        {
          "methodName": "ListBreakpoints"
        },
        {
          "methodName": "ListDebuggees"
        },
        {
          "methodName": "SetBreakpoint"
        }
      ]
    },
    {
      "serviceName": "clouderrorreporting.googleapis.com",
      "displayName": "Cloud Error Reporting",
      "methods": [
        {
          "methodName": "google.devtools.clouderrorreporting.v1.ErrorGroupService.GetGroup"
        },
        {
          "methodName": "google.devtools.clouderrorreporting.v1.ErrorGroupService.UpdateGroup"
        },
        {
          "methodName": "google.devtools.clouderrorreporting.v1.ErrorStatsService.DeleteEvents"
        },
        {
          "methodName": "google.devtools.clouderrorreporting.v1.ErrorStatsService.ListEvents"
        },
        {
          "methodName": "google.devtools.clouderrorreporting.v1.ErrorStatsService.ListGroupStats"
        },
        {
          "methodName": "google.devtools.clouderrorreporting.v1.ErrorStatsService.ListServices"
        }
      ]
    },
    {
      "serviceName": "cloudfunctions.googleapis.com",
      "displayName": "Cloud Functions",
      "methods": [
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.CallFunction"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.CreateFunction"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.DeleteFunction"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.GenerateDownloadUrl"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.GenerateUploadUrl"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.GetFunction"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.ListFunctions"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.functions.v1.CloudFunctionsService.UpdateFunction"
        },
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "cloudiot.googleapis.com",
      "displayName": "Cloud IoT",
      "methods": [
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.AddDeviceToGroup"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.BatchGetGroupMembershipsForDevice"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.BindDeviceToGateway"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.CreateDevice"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.CreateDeviceRegistry"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.CreateGroup"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.DeleteDevice"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.DeleteDeviceRegistry"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.DeleteGroup"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.GetDevice"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.GetDeviceRegistry"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.GetGroup"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ListDeviceConfigVersions"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ListDeviceIdsForGateway"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ListDeviceRegistries"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ListDeviceStates"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ListDevices"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ListGroups"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.ModifyCloudToDeviceConfig"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.RemoveDeviceFromGroup"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.SendCommandToDevice"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.UnbindDeviceFromGateway"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.UpdateDevice"
        },
        {
          "methodName": "google.cloud.iot.v1.DeviceManager.UpdateDeviceRegistry"
        }
      ]
    },
    {
      "serviceName": "cloudkms.googleapis.com",
      "displayName": "Cloud Key Management Service (KMS)",
      "methods": [
        {
          "methodName": "AsymmetricDecrypt"
        },
        {
          "methodName": "AsymmetricSign"
        },
        {
          "methodName": "CreateCryptoKey"
        },
        {
          "methodName": "CreateCryptoKeyVersion"
        },
        {
          "methodName": "CreateImportJob"
        },
        {
          "methodName": "CreateKeyRing"
        },
        {
          "methodName": "Decrypt"
        },
        {
          "methodName": "DestroyCryptoKeyVersion"
        },
        {
          "methodName": "Encrypt"
        },
        {
          "methodName": "GetCryptoKey"
        },
        {
          "methodName": "GetCryptoKeyVersion"
        },
        {
          "methodName": "GetIamPolicy"
        },
        {
          "methodName": "GetImportJob"
        },
        {
          "methodName": "GetKeyRing"
        },
        {
          "methodName": "GetPublicKey"
        },
        {
          "methodName": "ImportCryptoKeyVersion"
        },
        {
          "methodName": "ListCryptoKeyVersions"
        },
        {
          "methodName": "ListCryptoKeys"
        },
        {
          "methodName": "ListImportJobs"
        },
        {
          "methodName": "ListKeyRings"
        },
        {
          "methodName": "RestoreCryptoKeyVersion"
        },
        {
          "methodName": "SetIamPolicy"
        },
        {
          "methodName": "TestIamPermissions"
        },
        {
          "methodName": "UpdateCryptoKey"
        },
        {
          "methodName": "UpdateCryptoKeyPrimaryVersion"
        },
        {
          "methodName": "UpdateCryptoKeyVersion"
        }
      ]
    },
    {
      "serviceName": "cloudprofiler.googleapis.com",
      "displayName": "Cloud Profiler",
      "methods": [
        {
          "methodName": "google.devtools.cloudprofiler.v2.ProfilerService.CreateOfflineProfile"
        },
        {
          "methodName": "google.devtools.cloudprofiler.v2.ProfilerService.CreateProfile"
        },
        {
          "methodName": "google.devtools.cloudprofiler.v2.ProfilerService.UpdateProfile"
        }
      ]
    },
    {
      "serviceName": "cloudresourcemanager.googleapis.com",
      "displayName": "Cloud Resource Manager",
      "methods": [
        {
          "methodName": "AcceptProjectOwnership"
        },
        {
          "methodName": "CheckInvitationRequired"
        },
        {
          "methodName": "ClearOrgPolicy"
        },
        {
          "methodName": "CreateProject"
        },
        {
          "methodName": "DeleteProject"
        },
        {
          "methodName": "DeleteProjectOwnershipInvite"
        },
        {
          "methodName": "GetContactInfo"
        },
        {
          "methodName": "GetEffectiveOrgPolicy"
        },
        {
          "methodName": "GetIamPolicy"
        },
        {
          "methodName": "GetOrgPolicy"
        },
        {
          "methodName": "GetProject"
        },
        {
          "methodName": "InsertProjectOwnershipInvite"
        },
        {
          "methodName": "InsertProjectOwnershipInviteForPantheon"
        },
        {
          "methodName": "ListAvailableOrgPolicyConstraints"
        },
        {
          "methodName": "ListOrgPolicies"
        },
        {
          "methodName": "ListProjectOwnershipInvites"
        },
        {
          "methodName": "SetIamPolicy"
        },
        {
          "methodName": "SetOrgPolicy"
        },
        {
          "methodName": "UndeleteProject"
        },
        {
          "methodName": "UpdateContactInfo"
        },
        {
          "methodName": "UpdateProject"
        },
        {
          "methodName": "google.cloud.lien.v1.Liens.CreateLien"
        },
        {
          "methodName": "google.cloud.lien.v1.Liens.DeleteLien"
        },
        {
          "methodName": "google.cloud.lien.v1.Liens.GetLien"
        },
        {
          "methodName": "google.cloud.lien.v1.Liens.ListLiens"
        }
      ]
    },
    {
      "serviceName": "cloudscheduler.googleapis.com",
      "displayName": "Cloud Scheduler",
      "methods": [
        {
          "methodName": "google.cloud.scheduler.v1.CloudScheduler.CreateJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1.CloudScheduler.DeleteJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1.CloudScheduler.GetJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1.CloudScheduler.ListJobs"
        },
        {
          "methodName": "google.cloud.scheduler.v1.CloudScheduler.RunJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1beta1.CloudScheduler.CreateJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1beta1.CloudScheduler.DeleteJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1beta1.CloudScheduler.GetJob"
        },
        {
          "methodName": "google.cloud.scheduler.v1beta1.CloudScheduler.ListJobs"
        },
        {
          "methodName": "google.cloud.scheduler.v1beta1.CloudScheduler.RunJob"
        }
      ]
    },
    {
      "serviceName": "cloudsearch.googleapis.com",
      "displayName": "Cloud Search",
      "methods": [
        {
          "methodName": "google.apps.search.v1.ItemsService.DeleteItem"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.DeleteQueueItems"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.GetItem"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.IndexItem"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.ListItems"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.PollItems"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.PushItem"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.StartUploadItem"
        },
        {
          "methodName": "google.apps.search.v1.ItemsService.UnreserveItems"
        },
        {
          "methodName": "google.apps.search.v1.SchemaService.DeleteSchema"
        },
        {
          "methodName": "google.apps.search.v1.SchemaService.GetSchema"
        },
        {
          "methodName": "google.apps.search.v1.SchemaService.UpdateSchema"
        },
        {
          "methodName": "google.apps.search.v1.SearchApplicationsService.CreateSearchApplication"
        },
        {
          "methodName": "google.apps.search.v1.SearchApplicationsService.DeleteSearchApplication"
        },
        {
          "methodName": "google.apps.search.v1.SearchApplicationsService.GetSearchApplication"
        },
        {
          "methodName": "google.apps.search.v1.SearchApplicationsService.ListSearchApplications"
        },
        {
          "methodName": "google.apps.search.v1.SearchApplicationsService.ResetSearchApplication"
        },
        {
          "methodName": "google.apps.search.v1.SearchApplicationsService.UpdateSearchApplication"
        },
        {
          "methodName": "google.apps.search.v1.SettingsService.CreateDataSource"
        },
        {
          "methodName": "google.apps.search.v1.SettingsService.DeleteDataSource"
        },
        {
          "methodName": "google.apps.search.v1.SettingsService.GetDataSource"
        },
        {
          "methodName": "google.apps.search.v1.SettingsService.ListDataSource"
        },
        {
          "methodName": "google.apps.search.v1.SettingsService.UpdateDataSource"
        }
      ]
    },
    {
      "serviceName": "cloudsql.googleapis.com",
      "displayName": "Cloud SQL",
      "methods": [
        {
          "methodName": "cloudsql.backupRuns.create"
        },
        {
          "methodName": "cloudsql.backupRuns.delete"
        },
        {
          "methodName": "cloudsql.backupRuns.get"
        },
        {
          "methodName": "cloudsql.backupRuns.list"
        },
        {
          "methodName": "cloudsql.databases.create"
        },
        {
          "methodName": "cloudsql.databases.delete"
        },
        {
          "methodName": "cloudsql.databases.get"
        },
        {
          "methodName": "cloudsql.databases.list"
        },
        {
          "methodName": "cloudsql.databases.update"
        },
        {
          "methodName": "cloudsql.instances.addServerCa"
        },
        {
          "methodName": "cloudsql.instances.clone"
        },
        {
          "methodName": "cloudsql.instances.connect"
        },
        {
          "methodName": "cloudsql.instances.create"
        },
        {
          "methodName": "cloudsql.instances.delete"
        },
        {
          "methodName": "cloudsql.instances.demoteMaster"
        },
        {
          "methodName": "cloudsql.instances.export"
        },
        {
          "methodName": "cloudsql.instances.failover"
        },
        {
          "methodName": "cloudsql.instances.get"
        },
        {
          "methodName": "cloudsql.instances.import"
        },
        {
          "methodName": "cloudsql.instances.list"
        },
        {
          "methodName": "cloudsql.instances.listServerCas"
        },
        {
          "methodName": "cloudsql.instances.migrate"
        },
        {
          "methodName": "cloudsql.instances.promoteReplica"
        },
        {
          "methodName": "cloudsql.instances.resetSslConfig"
        },
        {
          "methodName": "cloudsql.instances.restart"
        },
        {
          "methodName": "cloudsql.instances.restoreBackup"
        },
        {
          "methodName": "cloudsql.instances.rotateServerCa"
        },
        {
          "methodName": "cloudsql.instances.startReplica"
        },
        {
          "methodName": "cloudsql.instances.stopReplica"
        },
        {
          "methodName": "cloudsql.instances.truncateLog"
        },
        {
          "methodName": "cloudsql.instances.update"
        },
        {
          "methodName": "cloudsql.sslCerts.create"
        },
        {
          "methodName": "cloudsql.sslCerts.delete"
        },
        {
          "methodName": "cloudsql.sslCerts.get"
        },
        {
          "methodName": "cloudsql.sslCerts.list"
        },
        {
          "methodName": "cloudsql.users.create"
        },
        {
          "methodName": "cloudsql.users.delete"
        },
        {
          "methodName": "cloudsql.users.list"
        },
        {
          "methodName": "cloudsql.users.update"
        },
        {
          "methodName": "postgres_query"
        }
      ]
    },
    {
      "serviceName": "cloudtasks.googleapis.com",
      "displayName": "Cloud Tasks",
      "methods": [
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.CreateQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.DeleteQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.DeleteTask"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.GetQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.GetTask"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.ListQueues"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.ListTasks"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.PauseQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.PurgeQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.ResumeQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.tasks.v2.CloudTasks.UpdateQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.CreateQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.DeleteQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.DeleteTask"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.GetTask"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.ListQueues"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.ListTasks"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.PauseQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.PurgeQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.ResumeQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta2.CloudTasks.UpdateQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.CreateQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.DeleteQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.DeleteTask"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.GetQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.GetTask"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.ListQueues"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.ListTasks"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.PauseQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.PurgeQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.ResumeQueue"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.RunTask"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.tasks.v2beta3.CloudTasks.UpdateQueue"
        }
      ]
    },
    {
      "serviceName": "cloudtrace.googleapis.com",
      "displayName": "Cloud Trace",
      "methods": [
        {
          "methodName": "google.devtools.cloudtrace.v1.TraceService.GetTrace"
        },
        {
          "methodName": "google.devtools.cloudtrace.v1.TraceService.ListTraces"
        },
        {
          "methodName": "google.devtools.cloudtrace.v2.TraceService.ListSpans"
        },
        {
          "methodName": "google.devtools.cloudtrace.v2.TraceService.ListTraces"
        }
      ]
    },
    {
      "serviceName": "composer.googleapis.com",
      "displayName": "Cloud Composer",
      "methods": [
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1.Environments.CreateEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1.Environments.DeleteEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1.Environments.GetEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1.Environments.ListEnvironments"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1.Environments.UpdateEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1.ImageVersions.ListImageVersions"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1beta1.Environments.CreateEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1beta1.Environments.DeleteEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1beta1.Environments.GetEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1beta1.Environments.ListEnvironments"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1beta1.Environments.UpdateEnvironment"
        },
        {
          "methodName": "google.cloud.orchestration.airflow.service.v1beta1.ImageVersions.ListImageVersions"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        }
      ]
    },
    {
      "serviceName": "compute.googleapis.com",
      "displayName": "Compute Engine",
      "methods": [
        {
          "methodName": "beta.compute.acceleratorTypes.aggregatedList"
        },
        {
          "methodName": "beta.compute.acceleratorTypes.list"
        },
        {
          "methodName": "beta.compute.addresses.aggregatedList"
        },
        {
          "methodName": "beta.compute.addresses.delete"
        },
        {
          "methodName": "beta.compute.addresses.get"
        },
        {
          "methodName": "beta.compute.addresses.insert"
        },
        {
          "methodName": "beta.compute.addresses.list"
        },
        {
          "methodName": "beta.compute.addresses.setLabels"
        },
        {
          "methodName": "beta.compute.autoscalers.aggregatedList"
        },
        {
          "methodName": "beta.compute.autoscalers.delete"
        },
        {
          "methodName": "beta.compute.autoscalers.get"
        },
        {
          "methodName": "beta.compute.autoscalers.insert"
        },
        {
          "methodName": "beta.compute.autoscalers.list"
        },
        {
          "methodName": "beta.compute.autoscalers.patch"
        },
        {
          "methodName": "beta.compute.autoscalers.update"
        },
        {
          "methodName": "beta.compute.backendBuckets.addSignedUrlKey"
        },
        {
          "methodName": "beta.compute.backendBuckets.delete"
        },
        {
          "methodName": "beta.compute.backendBuckets.deleteSignedUrlKey"
        },
        {
          "methodName": "beta.compute.backendBuckets.get"
        },
        {
          "methodName": "beta.compute.backendBuckets.insert"
        },
        {
          "methodName": "beta.compute.backendBuckets.list"
        },
        {
          "methodName": "beta.compute.backendBuckets.patch"
        },
        {
          "methodName": "beta.compute.backendBuckets.update"
        },
        {
          "methodName": "beta.compute.backendServices.addSignedUrlKey"
        },
        {
          "methodName": "beta.compute.backendServices.aggregatedList"
        },
        {
          "methodName": "beta.compute.backendServices.delete"
        },
        {
          "methodName": "beta.compute.backendServices.deleteSignedUrlKey"
        },
        {
          "methodName": "beta.compute.backendServices.get"
        },
        {
          "methodName": "beta.compute.backendServices.getHealth"
        },
        {
          "methodName": "beta.compute.backendServices.insert"
        },
        {
          "methodName": "beta.compute.backendServices.list"
        },
        {
          "methodName": "beta.compute.backendServices.patch"
        },
        {
          "methodName": "beta.compute.backendServices.setSecurityPolicy"
        },
        {
          "methodName": "beta.compute.backendServices.update"
        },
        {
          "methodName": "beta.compute.diskTypes.aggregatedList"
        },
        {
          "methodName": "beta.compute.diskTypes.get"
        },
        {
          "methodName": "beta.compute.diskTypes.list"
        },
        {
          "methodName": "beta.compute.disks.addResourcePolicies"
        },
        {
          "methodName": "beta.compute.disks.aggregatedList"
        },
        {
          "methodName": "beta.compute.disks.createSnapshot"
        },
        {
          "methodName": "beta.compute.disks.delete"
        },
        {
          "methodName": "beta.compute.disks.get"
        },
        {
          "methodName": "beta.compute.disks.getIamPolicy"
        },
        {
          "methodName": "beta.compute.disks.insert"
        },
        {
          "methodName": "beta.compute.disks.list"
        },
        {
          "methodName": "beta.compute.disks.removeResourcePolicies"
        },
        {
          "methodName": "beta.compute.disks.resize"
        },
        {
          "methodName": "beta.compute.disks.setIamPolicy"
        },
        {
          "methodName": "beta.compute.disks.setLabels"
        },
        {
          "methodName": "beta.compute.disks.testIamPermissions"
        },
        {
          "methodName": "beta.compute.externalVpnGateways.delete"
        },
        {
          "methodName": "beta.compute.externalVpnGateways.get"
        },
        {
          "methodName": "beta.compute.externalVpnGateways.insert"
        },
        {
          "methodName": "beta.compute.externalVpnGateways.list"
        },
        {
          "methodName": "beta.compute.firewalls.delete"
        },
        {
          "methodName": "beta.compute.firewalls.get"
        },
        {
          "methodName": "beta.compute.firewalls.insert"
        },
        {
          "methodName": "beta.compute.firewalls.list"
        },
        {
          "methodName": "beta.compute.firewalls.patch"
        },
        {
          "methodName": "beta.compute.firewalls.update"
        },
        {
          "methodName": "beta.compute.forwardingRules.aggregatedList"
        },
        {
          "methodName": "beta.compute.forwardingRules.delete"
        },
        {
          "methodName": "beta.compute.forwardingRules.get"
        },
        {
          "methodName": "beta.compute.forwardingRules.insert"
        },
        {
          "methodName": "beta.compute.forwardingRules.list"
        },
        {
          "methodName": "beta.compute.forwardingRules.patch"
        },
        {
          "methodName": "beta.compute.forwardingRules.setLabels"
        },
        {
          "methodName": "beta.compute.forwardingRules.setTarget"
        },
        {
          "methodName": "beta.compute.globalAddresses.delete"
        },
        {
          "methodName": "beta.compute.globalAddresses.get"
        },
        {
          "methodName": "beta.compute.globalAddresses.insert"
        },
        {
          "methodName": "beta.compute.globalAddresses.list"
        },
        {
          "methodName": "beta.compute.globalAddresses.setLabels"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.delete"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.get"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.insert"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.list"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.patch"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.setLabels"
        },
        {
          "methodName": "beta.compute.globalForwardingRules.setTarget"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.attachNetworkEndpoints"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.delete"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.detachNetworkEndpoints"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.get"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.insert"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.list"
        },
        {
          "methodName": "beta.compute.globalNetworkEndpointGroups.listNetworkEndpoints"
        },
        {
          "methodName": "beta.compute.globalOperations.aggregatedList"
        },
        {
          "methodName": "beta.compute.globalOperations.get"
        },
        {
          "methodName": "beta.compute.globalOperations.list"
        },
        {
          "methodName": "beta.compute.globalOperations.wait"
        },
        {
          "methodName": "beta.compute.healthChecks.aggregatedList"
        },
        {
          "methodName": "beta.compute.healthChecks.delete"
        },
        {
          "methodName": "beta.compute.healthChecks.get"
        },
        {
          "methodName": "beta.compute.healthChecks.insert"
        },
        {
          "methodName": "beta.compute.healthChecks.list"
        },
        {
          "methodName": "beta.compute.healthChecks.patch"
        },
        {
          "methodName": "beta.compute.healthChecks.update"
        },
        {
          "methodName": "beta.compute.httpHealthChecks.delete"
        },
        {
          "methodName": "beta.compute.httpHealthChecks.get"
        },
        {
          "methodName": "beta.compute.httpHealthChecks.insert"
        },
        {
          "methodName": "beta.compute.httpHealthChecks.list"
        },
        {
          "methodName": "beta.compute.httpHealthChecks.update"
        },
        {
          "methodName": "beta.compute.httpsHealthChecks.delete"
        },
        {
          "methodName": "beta.compute.httpsHealthChecks.get"
        },
        {
          "methodName": "beta.compute.httpsHealthChecks.insert"
        },
        {
          "methodName": "beta.compute.httpsHealthChecks.list"
        },
        {
          "methodName": "beta.compute.httpsHealthChecks.update"
        },
        {
          "methodName": "beta.compute.images.delete"
        },
        {
          "methodName": "beta.compute.images.deprecate"
        },
        {
          "methodName": "beta.compute.images.get"
        },
        {
          "methodName": "beta.compute.images.getFromFamily"
        },
        {
          "methodName": "beta.compute.images.getIamPolicy"
        },
        {
          "methodName": "beta.compute.images.insert"
        },
        {
          "methodName": "beta.compute.images.list"
        },
        {
          "methodName": "beta.compute.images.patch"
        },
        {
          "methodName": "beta.compute.images.setIamPolicy"
        },
        {
          "methodName": "beta.compute.images.setLabels"
        },
        {
          "methodName": "beta.compute.images.testIamPermissions"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.abandonInstances"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.aggregatedList"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.applyUpdatesToInstances"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.createInstances"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.delete"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.deleteInstances"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.deletePerInstanceConfigs"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.get"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.insert"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.list"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.listErrors"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.listManagedInstances"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.listPerInstanceConfigs"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.patch"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.recreateInstances"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.resize"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.resizeAdvanced"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.setAutoHealingPolicies"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.setInstanceTemplate"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.setTargetPools"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.update"
        },
        {
          "methodName": "beta.compute.instanceGroupManagers.updatePerInstanceConfigs"
        },
        {
          "methodName": "beta.compute.instanceGroups.addInstances"
        },
        {
          "methodName": "beta.compute.instanceGroups.aggregatedList"
        },
        {
          "methodName": "beta.compute.instanceGroups.delete"
        },
        {
          "methodName": "beta.compute.instanceGroups.get"
        },
        {
          "methodName": "beta.compute.instanceGroups.insert"
        },
        {
          "methodName": "beta.compute.instanceGroups.list"
        },
        {
          "methodName": "beta.compute.instanceGroups.listInstances"
        },
        {
          "methodName": "beta.compute.instanceGroups.removeInstances"
        },
        {
          "methodName": "beta.compute.instanceGroups.setNamedPorts"
        },
        {
          "methodName": "beta.compute.instanceTemplates.delete"
        },
        {
          "methodName": "beta.compute.instanceTemplates.get"
        },
        {
          "methodName": "beta.compute.instanceTemplates.getIamPolicy"
        },
        {
          "methodName": "beta.compute.instanceTemplates.insert"
        },
        {
          "methodName": "beta.compute.instanceTemplates.list"
        },
        {
          "methodName": "beta.compute.instanceTemplates.setIamPolicy"
        },
        {
          "methodName": "beta.compute.instanceTemplates.testIamPermissions"
        },
        {
          "methodName": "beta.compute.instances.addAccessConfig"
        },
        {
          "methodName": "beta.compute.instances.aggregatedList"
        },
        {
          "methodName": "beta.compute.instances.attachDisk"
        },
        {
          "methodName": "beta.compute.instances.delete"
        },
        {
          "methodName": "beta.compute.instances.deleteAccessConfig"
        },
        {
          "methodName": "beta.compute.instances.detachDisk"
        },
        {
          "methodName": "beta.compute.instances.get"
        },
        {
          "methodName": "beta.compute.instances.getEffectiveFirewalls"
        },
        {
          "methodName": "beta.compute.instances.getGuestAttributes"
        },
        {
          "methodName": "beta.compute.instances.getIamPolicy"
        },
        {
          "methodName": "beta.compute.instances.getScreenshot"
        },
        {
          "methodName": "beta.compute.instances.getSerialPortOutput"
        },
        {
          "methodName": "beta.compute.instances.getShieldedVmIdentity"
        },
        {
          "methodName": "beta.compute.instances.insert"
        },
        {
          "methodName": "beta.compute.instances.list"
        },
        {
          "methodName": "beta.compute.instances.listReferrers"
        },
        {
          "methodName": "beta.compute.instances.reset"
        },
        {
          "methodName": "beta.compute.instances.resume"
        },
        {
          "methodName": "beta.compute.instances.setDeletionProtection"
        },
        {
          "methodName": "beta.compute.instances.setDiskAutoDelete"
        },
        {
          "methodName": "beta.compute.instances.setIamPolicy"
        },
        {
          "methodName": "beta.compute.instances.setLabels"
        },
        {
          "methodName": "beta.compute.instances.setMachineResources"
        },
        {
          "methodName": "beta.compute.instances.setMachineType"
        },
        {
          "methodName": "beta.compute.instances.setMetadata"
        },
        {
          "methodName": "beta.compute.instances.setMinCpuPlatform"
        },
        {
          "methodName": "beta.compute.instances.setScheduling"
        },
        {
          "methodName": "beta.compute.instances.setServiceAccount"
        },
        {
          "methodName": "beta.compute.instances.setTags"
        },
        {
          "methodName": "beta.compute.instances.simulateMaintenanceEvent"
        },
        {
          "methodName": "beta.compute.instances.start"
        },
        {
          "methodName": "beta.compute.instances.startWithEncryptionKey"
        },
        {
          "methodName": "beta.compute.instances.stop"
        },
        {
          "methodName": "beta.compute.instances.suspend"
        },
        {
          "methodName": "beta.compute.instances.testIamPermissions"
        },
        {
          "methodName": "beta.compute.instances.update"
        },
        {
          "methodName": "beta.compute.instances.updateAccessConfig"
        },
        {
          "methodName": "beta.compute.instances.updateDisplayDevice"
        },
        {
          "methodName": "beta.compute.instances.updateNetworkInterface"
        },
        {
          "methodName": "beta.compute.instances.updateShieldedInstanceConfig"
        },
        {
          "methodName": "beta.compute.instances.updateShieldedVmConfig"
        },
        {
          "methodName": "beta.compute.interconnectAttachments.aggregatedList"
        },
        {
          "methodName": "beta.compute.interconnectAttachments.delete"
        },
        {
          "methodName": "beta.compute.interconnectAttachments.get"
        },
        {
          "methodName": "beta.compute.interconnectAttachments.insert"
        },
        {
          "methodName": "beta.compute.interconnectAttachments.patch"
        },
        {
          "methodName": "beta.compute.interconnectAttachments.setLabels"
        },
        {
          "methodName": "beta.compute.interconnectLocations.list"
        },
        {
          "methodName": "beta.compute.interconnects.delete"
        },
        {
          "methodName": "beta.compute.interconnects.get"
        },
        {
          "methodName": "beta.compute.interconnects.getDiagnostics"
        },
        {
          "methodName": "beta.compute.interconnects.insert"
        },
        {
          "methodName": "beta.compute.interconnects.list"
        },
        {
          "methodName": "beta.compute.interconnects.patch"
        },
        {
          "methodName": "beta.compute.interconnects.setLabels"
        },
        {
          "methodName": "beta.compute.interconnects.testIamPermissions"
        },
        {
          "methodName": "beta.compute.licenses.delete"
        },
        {
          "methodName": "beta.compute.licenses.insert"
        },
        {
          "methodName": "beta.compute.licenses.list"
        },
        {
          "methodName": "beta.compute.machineImages.delete"
        },
        {
          "methodName": "beta.compute.machineImages.get"
        },
        {
          "methodName": "beta.compute.machineImages.getIamPolicy"
        },
        {
          "methodName": "beta.compute.machineImages.insert"
        },
        {
          "methodName": "beta.compute.machineImages.list"
        },
        {
          "methodName": "beta.compute.machineImages.setIamPolicy"
        },
        {
          "methodName": "beta.compute.machineTypes.aggregatedList"
        },
        {
          "methodName": "beta.compute.machineTypes.get"
        },
        {
          "methodName": "beta.compute.machineTypes.list"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.aggregatedList"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.attachNetworkEndpoints"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.delete"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.detachNetworkEndpoints"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.get"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.insert"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.list"
        },
        {
          "methodName": "beta.compute.networkEndpointGroups.listNetworkEndpoints"
        },
        {
          "methodName": "beta.compute.networks.addPeering"
        },
        {
          "methodName": "beta.compute.networks.delete"
        },
        {
          "methodName": "beta.compute.networks.get"
        },
        {
          "methodName": "beta.compute.networks.getEffectiveFirewalls"
        },
        {
          "methodName": "beta.compute.networks.insert"
        },
        {
          "methodName": "beta.compute.networks.list"
        },
        {
          "methodName": "beta.compute.networks.patch"
        },
        {
          "methodName": "beta.compute.networks.removePeering"
        },
        {
          "methodName": "beta.compute.networks.switchToCustomMode"
        },
        {
          "methodName": "beta.compute.networks.updatePeering"
        },
        {
          "methodName": "beta.compute.nodeGroups.aggregatedList"
        },
        {
          "methodName": "beta.compute.nodeGroups.delete"
        },
        {
          "methodName": "beta.compute.nodeGroups.deleteNodes"
        },
        {
          "methodName": "beta.compute.nodeGroups.get"
        },
        {
          "methodName": "beta.compute.nodeGroups.getIamPolicy"
        },
        {
          "methodName": "beta.compute.nodeGroups.insert"
        },
        {
          "methodName": "beta.compute.nodeGroups.list"
        },
        {
          "methodName": "beta.compute.nodeGroups.listNodes"
        },
        {
          "methodName": "beta.compute.nodeGroups.patch"
        },
        {
          "methodName": "beta.compute.nodeGroups.setIamPolicy"
        },
        {
          "methodName": "beta.compute.nodeGroups.setNodeTemplate"
        },
        {
          "methodName": "beta.compute.nodeGroups.testIamPermissions"
        },
        {
          "methodName": "beta.compute.nodeTemplates.aggregatedList"
        },
        {
          "methodName": "beta.compute.nodeTemplates.delete"
        },
        {
          "methodName": "beta.compute.nodeTemplates.get"
        },
        {
          "methodName": "beta.compute.nodeTemplates.getIamPolicy"
        },
        {
          "methodName": "beta.compute.nodeTemplates.insert"
        },
        {
          "methodName": "beta.compute.nodeTemplates.list"
        },
        {
          "methodName": "beta.compute.nodeTemplates.setIamPolicy"
        },
        {
          "methodName": "beta.compute.nodeTemplates.testIamPermissions"
        },
        {
          "methodName": "beta.compute.nodeTypes.aggregatedList"
        },
        {
          "methodName": "beta.compute.nodeTypes.get"
        },
        {
          "methodName": "beta.compute.nodeTypes.list"
        },
        {
          "methodName": "beta.compute.packetMirrorings.aggregatedList"
        },
        {
          "methodName": "beta.compute.packetMirrorings.delete"
        },
        {
          "methodName": "beta.compute.packetMirrorings.get"
        },
        {
          "methodName": "beta.compute.packetMirrorings.insert"
        },
        {
          "methodName": "beta.compute.packetMirrorings.patch"
        },
        {
          "methodName": "beta.compute.projects.disableXpnHost"
        },
        {
          "methodName": "beta.compute.projects.disableXpnResource"
        },
        {
          "methodName": "beta.compute.projects.enableXpnHost"
        },
        {
          "methodName": "beta.compute.projects.enableXpnResource"
        },
        {
          "methodName": "beta.compute.projects.get"
        },
        {
          "methodName": "beta.compute.projects.getXpnHost"
        },
        {
          "methodName": "beta.compute.projects.getXpnResources"
        },
        {
          "methodName": "beta.compute.projects.moveDisk"
        },
        {
          "methodName": "beta.compute.projects.moveInstance"
        },
        {
          "methodName": "beta.compute.projects.setCommonInstanceMetadata"
        },
        {
          "methodName": "beta.compute.projects.setDefaultNetworkTier"
        },
        {
          "methodName": "beta.compute.projects.setUsageExportBucket"
        },
        {
          "methodName": "beta.compute.regionAutoscalers.delete"
        },
        {
          "methodName": "beta.compute.regionAutoscalers.get"
        },
        {
          "methodName": "beta.compute.regionAutoscalers.insert"
        },
        {
          "methodName": "beta.compute.regionAutoscalers.list"
        },
        {
          "methodName": "beta.compute.regionAutoscalers.patch"
        },
        {
          "methodName": "beta.compute.regionAutoscalers.update"
        },
        {
          "methodName": "beta.compute.regionBackendServices.delete"
        },
        {
          "methodName": "beta.compute.regionBackendServices.get"
        },
        {
          "methodName": "beta.compute.regionBackendServices.getHealth"
        },
        {
          "methodName": "beta.compute.regionBackendServices.insert"
        },
        {
          "methodName": "beta.compute.regionBackendServices.list"
        },
        {
          "methodName": "beta.compute.regionBackendServices.patch"
        },
        {
          "methodName": "beta.compute.regionBackendServices.update"
        },
        {
          "methodName": "beta.compute.regionCommitments.aggregatedList"
        },
        {
          "methodName": "beta.compute.regionCommitments.get"
        },
        {
          "methodName": "beta.compute.regionCommitments.insert"
        },
        {
          "methodName": "beta.compute.regionCommitments.updateReservations"
        },
        {
          "methodName": "beta.compute.regionDiskTypes.list"
        },
        {
          "methodName": "beta.compute.regionDisks.addResourcePolicies"
        },
        {
          "methodName": "beta.compute.regionDisks.createSnapshot"
        },
        {
          "methodName": "beta.compute.regionDisks.delete"
        },
        {
          "methodName": "beta.compute.regionDisks.get"
        },
        {
          "methodName": "beta.compute.regionDisks.insert"
        },
        {
          "methodName": "beta.compute.regionDisks.list"
        },
        {
          "methodName": "beta.compute.regionDisks.removeResourcePolicies"
        },
        {
          "methodName": "beta.compute.regionDisks.resize"
        },
        {
          "methodName": "beta.compute.regionDisks.setIamPolicy"
        },
        {
          "methodName": "beta.compute.regionDisks.setLabels"
        },
        {
          "methodName": "beta.compute.regionHealthCheckServices.delete"
        },
        {
          "methodName": "beta.compute.regionHealthCheckServices.get"
        },
        {
          "methodName": "beta.compute.regionHealthCheckServices.insert"
        },
        {
          "methodName": "beta.compute.regionHealthCheckServices.list"
        },
        {
          "methodName": "beta.compute.regionHealthCheckServices.patch"
        },
        {
          "methodName": "beta.compute.regionHealthChecks.delete"
        },
        {
          "methodName": "beta.compute.regionHealthChecks.get"
        },
        {
          "methodName": "beta.compute.regionHealthChecks.insert"
        },
        {
          "methodName": "beta.compute.regionHealthChecks.list"
        },
        {
          "methodName": "beta.compute.regionHealthChecks.patch"
        },
        {
          "methodName": "beta.compute.regionHealthChecks.update"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.abandonInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.applyUpdatesToInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.createInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.delete"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.deleteInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.deletePerInstanceConfigs"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.get"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.insert"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.list"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.listErrors"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.listManagedInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.listPerInstanceConfigs"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.patch"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.recreateInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.resize"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.setAutoHealingPolicies"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.setInstanceTemplate"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.setTargetPools"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.update"
        },
        {
          "methodName": "beta.compute.regionInstanceGroupManagers.updatePerInstanceConfigs"
        },
        {
          "methodName": "beta.compute.regionInstanceGroups.get"
        },
        {
          "methodName": "beta.compute.regionInstanceGroups.list"
        },
        {
          "methodName": "beta.compute.regionInstanceGroups.listInstances"
        },
        {
          "methodName": "beta.compute.regionInstanceGroups.setNamedPorts"
        },
        {
          "methodName": "beta.compute.regionNetworkEndpointGroups.delete"
        },
        {
          "methodName": "beta.compute.regionNetworkEndpointGroups.get"
        },
        {
          "methodName": "beta.compute.regionNetworkEndpointGroups.insert"
        },
        {
          "methodName": "beta.compute.regionNetworkEndpointGroups.list"
        },
        {
          "methodName": "beta.compute.regionNotificationEndpoints.delete"
        },
        {
          "methodName": "beta.compute.regionNotificationEndpoints.get"
        },
        {
          "methodName": "beta.compute.regionNotificationEndpoints.insert"
        },
        {
          "methodName": "beta.compute.regionNotificationEndpoints.list"
        },
        {
          "methodName": "beta.compute.regionOperations.get"
        },
        {
          "methodName": "beta.compute.regionOperations.wait"
        },
        {
          "methodName": "beta.compute.regionSslCertificates.delete"
        },
        {
          "methodName": "beta.compute.regionSslCertificates.get"
        },
        {
          "methodName": "beta.compute.regionSslCertificates.insert"
        },
        {
          "methodName": "beta.compute.regionSslCertificates.list"
        },
        {
          "methodName": "beta.compute.regionTargetHttpProxies.delete"
        },
        {
          "methodName": "beta.compute.regionTargetHttpProxies.get"
        },
        {
          "methodName": "beta.compute.regionTargetHttpProxies.insert"
        },
        {
          "methodName": "beta.compute.regionTargetHttpProxies.list"
        },
        {
          "methodName": "beta.compute.regionTargetHttpProxies.setUrlMap"
        },
        {
          "methodName": "beta.compute.regionTargetHttpsProxies.delete"
        },
        {
          "methodName": "beta.compute.regionTargetHttpsProxies.get"
        },
        {
          "methodName": "beta.compute.regionTargetHttpsProxies.insert"
        },
        {
          "methodName": "beta.compute.regionTargetHttpsProxies.list"
        },
        {
          "methodName": "beta.compute.regionTargetHttpsProxies.setSslCertificates"
        },
        {
          "methodName": "beta.compute.regionTargetHttpsProxies.setUrlMap"
        },
        {
          "methodName": "beta.compute.regionUrlMaps.delete"
        },
        {
          "methodName": "beta.compute.regionUrlMaps.get"
        },
        {
          "methodName": "beta.compute.regionUrlMaps.insert"
        },
        {
          "methodName": "beta.compute.regionUrlMaps.list"
        },
        {
          "methodName": "beta.compute.regionUrlMaps.patch"
        },
        {
          "methodName": "beta.compute.regionUrlMaps.update"
        },
        {
          "methodName": "beta.compute.regions.get"
        },
        {
          "methodName": "beta.compute.regions.list"
        },
        {
          "methodName": "beta.compute.reservations.aggregatedList"
        },
        {
          "methodName": "beta.compute.reservations.delete"
        },
        {
          "methodName": "beta.compute.reservations.get"
        },
        {
          "methodName": "beta.compute.reservations.insert"
        },
        {
          "methodName": "beta.compute.reservations.list"
        },
        {
          "methodName": "beta.compute.reservations.resize"
        },
        {
          "methodName": "beta.compute.resourcePolicies.aggregatedList"
        },
        {
          "methodName": "beta.compute.resourcePolicies.delete"
        },
        {
          "methodName": "beta.compute.resourcePolicies.get"
        },
        {
          "methodName": "beta.compute.resourcePolicies.insert"
        },
        {
          "methodName": "beta.compute.resourcePolicies.list"
        },
        {
          "methodName": "beta.compute.routers.aggregatedList"
        },
        {
          "methodName": "beta.compute.routers.delete"
        },
        {
          "methodName": "beta.compute.routers.get"
        },
        {
          "methodName": "beta.compute.routers.getNatMappingInfo"
        },
        {
          "methodName": "beta.compute.routers.getRouterStatus"
        },
        {
          "methodName": "beta.compute.routers.insert"
        },
        {
          "methodName": "beta.compute.routers.list"
        },
        {
          "methodName": "beta.compute.routers.patch"
        },
        {
          "methodName": "beta.compute.routers.update"
        },
        {
          "methodName": "beta.compute.routes.delete"
        },
        {
          "methodName": "beta.compute.routes.get"
        },
        {
          "methodName": "beta.compute.routes.insert"
        },
        {
          "methodName": "beta.compute.routes.list"
        },
        {
          "methodName": "beta.compute.securityPolicies.addRule"
        },
        {
          "methodName": "beta.compute.securityPolicies.delete"
        },
        {
          "methodName": "beta.compute.securityPolicies.get"
        },
        {
          "methodName": "beta.compute.securityPolicies.getRule"
        },
        {
          "methodName": "beta.compute.securityPolicies.insert"
        },
        {
          "methodName": "beta.compute.securityPolicies.list"
        },
        {
          "methodName": "beta.compute.securityPolicies.listPreconfiguredExpressionSets"
        },
        {
          "methodName": "beta.compute.securityPolicies.patch"
        },
        {
          "methodName": "beta.compute.securityPolicies.patchRule"
        },
        {
          "methodName": "beta.compute.securityPolicies.removeRule"
        },
        {
          "methodName": "beta.compute.securityPolicies.setLabels"
        },
        {
          "methodName": "beta.compute.snapshots.delete"
        },
        {
          "methodName": "beta.compute.snapshots.get"
        },
        {
          "methodName": "beta.compute.snapshots.list"
        },
        {
          "methodName": "beta.compute.snapshots.setIamPolicy"
        },
        {
          "methodName": "beta.compute.snapshots.setLabels"
        },
        {
          "methodName": "beta.compute.snapshots.testIamPermissions"
        },
        {
          "methodName": "beta.compute.sslCertificates.aggregatedList"
        },
        {
          "methodName": "beta.compute.sslCertificates.delete"
        },
        {
          "methodName": "beta.compute.sslCertificates.get"
        },
        {
          "methodName": "beta.compute.sslCertificates.insert"
        },
        {
          "methodName": "beta.compute.sslCertificates.list"
        },
        {
          "methodName": "beta.compute.sslPolicies.delete"
        },
        {
          "methodName": "beta.compute.sslPolicies.get"
        },
        {
          "methodName": "beta.compute.sslPolicies.insert"
        },
        {
          "methodName": "beta.compute.sslPolicies.list"
        },
        {
          "methodName": "beta.compute.sslPolicies.patch"
        },
        {
          "methodName": "beta.compute.subnetworks.aggregatedList"
        },
        {
          "methodName": "beta.compute.subnetworks.delete"
        },
        {
          "methodName": "beta.compute.subnetworks.expandIpCidrRange"
        },
        {
          "methodName": "beta.compute.subnetworks.get"
        },
        {
          "methodName": "beta.compute.subnetworks.getIamPolicy"
        },
        {
          "methodName": "beta.compute.subnetworks.insert"
        },
        {
          "methodName": "beta.compute.subnetworks.list"
        },
        {
          "methodName": "beta.compute.subnetworks.patch"
        },
        {
          "methodName": "beta.compute.subnetworks.setIamPolicy"
        },
        {
          "methodName": "beta.compute.subnetworks.setPrivateIpGoogleAccess"
        },
        {
          "methodName": "beta.compute.subnetworks.testIamPermissions"
        },
        {
          "methodName": "beta.compute.targetGrpcProxies.insert"
        },
        {
          "methodName": "beta.compute.targetHttpProxies.aggregatedList"
        },
        {
          "methodName": "beta.compute.targetHttpProxies.delete"
        },
        {
          "methodName": "beta.compute.targetHttpProxies.get"
        },
        {
          "methodName": "beta.compute.targetHttpProxies.insert"
        },
        {
          "methodName": "beta.compute.targetHttpProxies.list"
        },
        {
          "methodName": "beta.compute.targetHttpProxies.setUrlMap"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.aggregatedList"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.delete"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.get"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.insert"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.list"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.setQuicOverride"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.setSslCertificates"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.setSslPolicy"
        },
        {
          "methodName": "beta.compute.targetHttpsProxies.setUrlMap"
        },
        {
          "methodName": "beta.compute.targetInstances.aggregatedList"
        },
        {
          "methodName": "beta.compute.targetInstances.delete"
        },
        {
          "methodName": "beta.compute.targetInstances.get"
        },
        {
          "methodName": "beta.compute.targetInstances.insert"
        },
        {
          "methodName": "beta.compute.targetInstances.list"
        },
        {
          "methodName": "beta.compute.targetPools.addHealthCheck"
        },
        {
          "methodName": "beta.compute.targetPools.addInstance"
        },
        {
          "methodName": "beta.compute.targetPools.aggregatedList"
        },
        {
          "methodName": "beta.compute.targetPools.delete"
        },
        {
          "methodName": "beta.compute.targetPools.get"
        },
        {
          "methodName": "beta.compute.targetPools.getHealth"
        },
        {
          "methodName": "beta.compute.targetPools.insert"
        },
        {
          "methodName": "beta.compute.targetPools.list"
        },
        {
          "methodName": "beta.compute.targetPools.removeHealthCheck"
        },
        {
          "methodName": "beta.compute.targetPools.removeInstance"
        },
        {
          "methodName": "beta.compute.targetSslProxies.delete"
        },
        {
          "methodName": "beta.compute.targetSslProxies.get"
        },
        {
          "methodName": "beta.compute.targetSslProxies.insert"
        },
        {
          "methodName": "beta.compute.targetSslProxies.list"
        },
        {
          "methodName": "beta.compute.targetSslProxies.setBackendService"
        },
        {
          "methodName": "beta.compute.targetSslProxies.setProxyHeader"
        },
        {
          "methodName": "beta.compute.targetSslProxies.setSslCertificates"
        },
        {
          "methodName": "beta.compute.targetSslProxies.setSslPolicy"
        },
        {
          "methodName": "beta.compute.targetTcpProxies.delete"
        },
        {
          "methodName": "beta.compute.targetTcpProxies.get"
        },
        {
          "methodName": "beta.compute.targetTcpProxies.insert"
        },
        {
          "methodName": "beta.compute.targetTcpProxies.list"
        },
        {
          "methodName": "beta.compute.targetTcpProxies.setProxyHeader"
        },
        {
          "methodName": "beta.compute.targetVpnGateways.aggregatedList"
        },
        {
          "methodName": "beta.compute.targetVpnGateways.delete"
        },
        {
          "methodName": "beta.compute.targetVpnGateways.get"
        },
        {
          "methodName": "beta.compute.targetVpnGateways.insert"
        },
        {
          "methodName": "beta.compute.targetVpnGateways.list"
        },
        {
          "methodName": "beta.compute.targetVpnGateways.setLabels"
        },
        {
          "methodName": "beta.compute.urlMaps.aggregatedList"
        },
        {
          "methodName": "beta.compute.urlMaps.delete"
        },
        {
          "methodName": "beta.compute.urlMaps.get"
        },
        {
          "methodName": "beta.compute.urlMaps.insert"
        },
        {
          "methodName": "beta.compute.urlMaps.invalidateCache"
        },
        {
          "methodName": "beta.compute.urlMaps.list"
        },
        {
          "methodName": "beta.compute.urlMaps.patch"
        },
        {
          "methodName": "beta.compute.urlMaps.update"
        },
        {
          "methodName": "beta.compute.vpnGateways.delete"
        },
        {
          "methodName": "beta.compute.vpnGateways.insert"
        },
        {
          "methodName": "beta.compute.vpnGateways.setLabels"
        },
        {
          "methodName": "beta.compute.vpnTunnels.aggregatedList"
        },
        {
          "methodName": "beta.compute.vpnTunnels.delete"
        },
        {
          "methodName": "beta.compute.vpnTunnels.get"
        },
        {
          "methodName": "beta.compute.vpnTunnels.insert"
        },
        {
          "methodName": "beta.compute.vpnTunnels.list"
        },
        {
          "methodName": "beta.compute.vpnTunnels.setLabels"
        },
        {
          "methodName": "beta.compute.zoneOperations.delete"
        },
        {
          "methodName": "beta.compute.zoneOperations.get"
        },
        {
          "methodName": "beta.compute.zoneOperations.list"
        },
        {
          "methodName": "beta.compute.zoneOperations.wait"
        },
        {
          "methodName": "beta.compute.zones.get"
        },
        {
          "methodName": "beta.compute.zones.list"
        },
        {
          "methodName": "compute.images.insert"
        },
        {
          "methodName": "compute.instances.insert"
        },
        {
          "methodName": "compute.instances.setMetadata"
        },
        {
          "methodName": "compute.subnetworks.delete"
        },
        {
          "methodName": "compute.subnetworks.insert"
        },
        {
          "methodName": "v1"
        },
        {
          "methodName": "v1.compute.acceleratorTypes.aggregatedList"
        },
        {
          "methodName": "v1.compute.acceleratorTypes.get"
        },
        {
          "methodName": "v1.compute.acceleratorTypes.list"
        },
        {
          "methodName": "v1.compute.addresses.aggregatedList"
        },
        {
          "methodName": "v1.compute.addresses.delete"
        },
        {
          "methodName": "v1.compute.addresses.get"
        },
        {
          "methodName": "v1.compute.addresses.insert"
        },
        {
          "methodName": "v1.compute.addresses.list"
        },
        {
          "methodName": "v1.compute.autoscalers.aggregatedList"
        },
        {
          "methodName": "v1.compute.autoscalers.delete"
        },
        {
          "methodName": "v1.compute.autoscalers.get"
        },
        {
          "methodName": "v1.compute.autoscalers.insert"
        },
        {
          "methodName": "v1.compute.autoscalers.list"
        },
        {
          "methodName": "v1.compute.autoscalers.patch"
        },
        {
          "methodName": "v1.compute.autoscalers.update"
        },
        {
          "methodName": "v1.compute.backendBuckets.addSignedUrlKey"
        },
        {
          "methodName": "v1.compute.backendBuckets.delete"
        },
        {
          "methodName": "v1.compute.backendBuckets.deleteSignedUrlKey"
        },
        {
          "methodName": "v1.compute.backendBuckets.get"
        },
        {
          "methodName": "v1.compute.backendBuckets.insert"
        },
        {
          "methodName": "v1.compute.backendBuckets.list"
        },
        {
          "methodName": "v1.compute.backendBuckets.patch"
        },
        {
          "methodName": "v1.compute.backendBuckets.update"
        },
        {
          "methodName": "v1.compute.backendServices.addSignedUrlKey"
        },
        {
          "methodName": "v1.compute.backendServices.aggregatedList"
        },
        {
          "methodName": "v1.compute.backendServices.delete"
        },
        {
          "methodName": "v1.compute.backendServices.deleteSignedUrlKey"
        },
        {
          "methodName": "v1.compute.backendServices.get"
        },
        {
          "methodName": "v1.compute.backendServices.getHealth"
        },
        {
          "methodName": "v1.compute.backendServices.insert"
        },
        {
          "methodName": "v1.compute.backendServices.list"
        },
        {
          "methodName": "v1.compute.backendServices.patch"
        },
        {
          "methodName": "v1.compute.backendServices.setSecurityPolicy"
        },
        {
          "methodName": "v1.compute.backendServices.update"
        },
        {
          "methodName": "v1.compute.diskTypes.aggregatedList"
        },
        {
          "methodName": "v1.compute.diskTypes.get"
        },
        {
          "methodName": "v1.compute.diskTypes.list"
        },
        {
          "methodName": "v1.compute.disks.addResourcePolicies"
        },
        {
          "methodName": "v1.compute.disks.aggregatedList"
        },
        {
          "methodName": "v1.compute.disks.createSnapshot"
        },
        {
          "methodName": "v1.compute.disks.delete"
        },
        {
          "methodName": "v1.compute.disks.get"
        },
        {
          "methodName": "v1.compute.disks.getIamPolicy"
        },
        {
          "methodName": "v1.compute.disks.insert"
        },
        {
          "methodName": "v1.compute.disks.list"
        },
        {
          "methodName": "v1.compute.disks.removeResourcePolicies"
        },
        {
          "methodName": "v1.compute.disks.resize"
        },
        {
          "methodName": "v1.compute.disks.setIamPolicy"
        },
        {
          "methodName": "v1.compute.disks.setLabels"
        },
        {
          "methodName": "v1.compute.disks.testIamPermissions"
        },
        {
          "methodName": "v1.compute.externalVpnGateways.delete"
        },
        {
          "methodName": "v1.compute.externalVpnGateways.get"
        },
        {
          "methodName": "v1.compute.externalVpnGateways.insert"
        },
        {
          "methodName": "v1.compute.externalVpnGateways.list"
        },
        {
          "methodName": "v1.compute.externalVpnGateways.setLabels"
        },
        {
          "methodName": "v1.compute.externalVpnGateways.testIamPermissions"
        },
        {
          "methodName": "v1.compute.firewalls.delete"
        },
        {
          "methodName": "v1.compute.firewalls.get"
        },
        {
          "methodName": "v1.compute.firewalls.insert"
        },
        {
          "methodName": "v1.compute.firewalls.list"
        },
        {
          "methodName": "v1.compute.firewalls.patch"
        },
        {
          "methodName": "v1.compute.firewalls.update"
        },
        {
          "methodName": "v1.compute.forwardingRules.aggregatedList"
        },
        {
          "methodName": "v1.compute.forwardingRules.delete"
        },
        {
          "methodName": "v1.compute.forwardingRules.get"
        },
        {
          "methodName": "v1.compute.forwardingRules.insert"
        },
        {
          "methodName": "v1.compute.forwardingRules.list"
        },
        {
          "methodName": "v1.compute.forwardingRules.patch"
        },
        {
          "methodName": "v1.compute.forwardingRules.setTarget"
        },
        {
          "methodName": "v1.compute.globalAddresses.delete"
        },
        {
          "methodName": "v1.compute.globalAddresses.get"
        },
        {
          "methodName": "v1.compute.globalAddresses.insert"
        },
        {
          "methodName": "v1.compute.globalAddresses.list"
        },
        {
          "methodName": "v1.compute.globalForwardingRules.delete"
        },
        {
          "methodName": "v1.compute.globalForwardingRules.get"
        },
        {
          "methodName": "v1.compute.globalForwardingRules.insert"
        },
        {
          "methodName": "v1.compute.globalForwardingRules.list"
        },
        {
          "methodName": "v1.compute.globalForwardingRules.patch"
        },
        {
          "methodName": "v1.compute.globalForwardingRules.setTarget"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.attachNetworkEndpoints"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.delete"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.detachNetworkEndpoints"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.get"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.insert"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.list"
        },
        {
          "methodName": "v1.compute.globalNetworkEndpointGroups.listNetworkEndpoints"
        },
        {
          "methodName": "v1.compute.globalOperations.aggregatedList"
        },
        {
          "methodName": "v1.compute.globalOperations.delete"
        },
        {
          "methodName": "v1.compute.globalOperations.get"
        },
        {
          "methodName": "v1.compute.globalOperations.list"
        },
        {
          "methodName": "v1.compute.globalOperations.wait"
        },
        {
          "methodName": "v1.compute.healthChecks.aggregatedList"
        },
        {
          "methodName": "v1.compute.healthChecks.delete"
        },
        {
          "methodName": "v1.compute.healthChecks.get"
        },
        {
          "methodName": "v1.compute.healthChecks.insert"
        },
        {
          "methodName": "v1.compute.healthChecks.list"
        },
        {
          "methodName": "v1.compute.healthChecks.patch"
        },
        {
          "methodName": "v1.compute.healthChecks.update"
        },
        {
          "methodName": "v1.compute.httpHealthChecks.delete"
        },
        {
          "methodName": "v1.compute.httpHealthChecks.get"
        },
        {
          "methodName": "v1.compute.httpHealthChecks.insert"
        },
        {
          "methodName": "v1.compute.httpHealthChecks.list"
        },
        {
          "methodName": "v1.compute.httpHealthChecks.patch"
        },
        {
          "methodName": "v1.compute.httpHealthChecks.update"
        },
        {
          "methodName": "v1.compute.httpsHealthChecks.delete"
        },
        {
          "methodName": "v1.compute.httpsHealthChecks.get"
        },
        {
          "methodName": "v1.compute.httpsHealthChecks.insert"
        },
        {
          "methodName": "v1.compute.httpsHealthChecks.list"
        },
        {
          "methodName": "v1.compute.httpsHealthChecks.patch"
        },
        {
          "methodName": "v1.compute.httpsHealthChecks.update"
        },
        {
          "methodName": "v1.compute.images.delete"
        },
        {
          "methodName": "v1.compute.images.deprecate"
        },
        {
          "methodName": "v1.compute.images.get"
        },
        {
          "methodName": "v1.compute.images.getFromFamily"
        },
        {
          "methodName": "v1.compute.images.getIamPolicy"
        },
        {
          "methodName": "v1.compute.images.insert"
        },
        {
          "methodName": "v1.compute.images.list"
        },
        {
          "methodName": "v1.compute.images.setIamPolicy"
        },
        {
          "methodName": "v1.compute.images.setLabels"
        },
        {
          "methodName": "v1.compute.images.testIamPermissions"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.abandonInstances"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.aggregatedList"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.applyUpdatesToInstances"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.createInstances"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.delete"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.deleteInstances"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.deletePerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.get"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.insert"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.list"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.listErrors"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.listManagedInstances"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.listPerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.patch"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.patchPerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.recreateInstances"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.resize"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.setInstanceTemplate"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.setTargetPools"
        },
        {
          "methodName": "v1.compute.instanceGroupManagers.updatePerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.instanceGroups.addInstances"
        },
        {
          "methodName": "v1.compute.instanceGroups.aggregatedList"
        },
        {
          "methodName": "v1.compute.instanceGroups.delete"
        },
        {
          "methodName": "v1.compute.instanceGroups.get"
        },
        {
          "methodName": "v1.compute.instanceGroups.insert"
        },
        {
          "methodName": "v1.compute.instanceGroups.list"
        },
        {
          "methodName": "v1.compute.instanceGroups.listInstances"
        },
        {
          "methodName": "v1.compute.instanceGroups.removeInstances"
        },
        {
          "methodName": "v1.compute.instanceGroups.setNamedPorts"
        },
        {
          "methodName": "v1.compute.instanceTemplates.delete"
        },
        {
          "methodName": "v1.compute.instanceTemplates.get"
        },
        {
          "methodName": "v1.compute.instanceTemplates.getIamPolicy"
        },
        {
          "methodName": "v1.compute.instanceTemplates.insert"
        },
        {
          "methodName": "v1.compute.instanceTemplates.list"
        },
        {
          "methodName": "v1.compute.instanceTemplates.setIamPolicy"
        },
        {
          "methodName": "v1.compute.instanceTemplates.testIamPermissions"
        },
        {
          "methodName": "v1.compute.instances.addAccessConfig"
        },
        {
          "methodName": "v1.compute.instances.addResourcePolicies"
        },
        {
          "methodName": "v1.compute.instances.aggregatedList"
        },
        {
          "methodName": "v1.compute.instances.attachDisk"
        },
        {
          "methodName": "v1.compute.instances.delete"
        },
        {
          "methodName": "v1.compute.instances.deleteAccessConfig"
        },
        {
          "methodName": "v1.compute.instances.detachDisk"
        },
        {
          "methodName": "v1.compute.instances.get"
        },
        {
          "methodName": "v1.compute.instances.getGuestAttributes"
        },
        {
          "methodName": "v1.compute.instances.getIamPolicy"
        },
        {
          "methodName": "v1.compute.instances.getScreenshot"
        },
        {
          "methodName": "v1.compute.instances.getSerialPortOutput"
        },
        {
          "methodName": "v1.compute.instances.getShieldedInstanceIdentity"
        },
        {
          "methodName": "v1.compute.instances.insert"
        },
        {
          "methodName": "v1.compute.instances.list"
        },
        {
          "methodName": "v1.compute.instances.listReferrers"
        },
        {
          "methodName": "v1.compute.instances.removeResourcePolicies"
        },
        {
          "methodName": "v1.compute.instances.reset"
        },
        {
          "methodName": "v1.compute.instances.setDeletionProtection"
        },
        {
          "methodName": "v1.compute.instances.setDiskAutoDelete"
        },
        {
          "methodName": "v1.compute.instances.setIamPolicy"
        },
        {
          "methodName": "v1.compute.instances.setLabels"
        },
        {
          "methodName": "v1.compute.instances.setMachineResources"
        },
        {
          "methodName": "v1.compute.instances.setMachineType"
        },
        {
          "methodName": "v1.compute.instances.setMetadata"
        },
        {
          "methodName": "v1.compute.instances.setMinCpuPlatform"
        },
        {
          "methodName": "v1.compute.instances.setScheduling"
        },
        {
          "methodName": "v1.compute.instances.setServiceAccount"
        },
        {
          "methodName": "v1.compute.instances.setShieldedInstanceIntegrityPolicy"
        },
        {
          "methodName": "v1.compute.instances.setTags"
        },
        {
          "methodName": "v1.compute.instances.simulateMaintenanceEvent"
        },
        {
          "methodName": "v1.compute.instances.start"
        },
        {
          "methodName": "v1.compute.instances.startWithEncryptionKey"
        },
        {
          "methodName": "v1.compute.instances.stop"
        },
        {
          "methodName": "v1.compute.instances.testIamPermissions"
        },
        {
          "methodName": "v1.compute.instances.update"
        },
        {
          "methodName": "v1.compute.instances.updateAccessConfig"
        },
        {
          "methodName": "v1.compute.instances.updateDisplayDevice"
        },
        {
          "methodName": "v1.compute.instances.updateNetworkInterface"
        },
        {
          "methodName": "v1.compute.instances.updateShieldedInstanceConfig"
        },
        {
          "methodName": "v1.compute.interconnectAttachments.aggregatedList"
        },
        {
          "methodName": "v1.compute.interconnectAttachments.delete"
        },
        {
          "methodName": "v1.compute.interconnectAttachments.get"
        },
        {
          "methodName": "v1.compute.interconnectAttachments.insert"
        },
        {
          "methodName": "v1.compute.interconnectAttachments.list"
        },
        {
          "methodName": "v1.compute.interconnectAttachments.patch"
        },
        {
          "methodName": "v1.compute.interconnectLocations.list"
        },
        {
          "methodName": "v1.compute.interconnects.delete"
        },
        {
          "methodName": "v1.compute.interconnects.get"
        },
        {
          "methodName": "v1.compute.interconnects.getDiagnostics"
        },
        {
          "methodName": "v1.compute.interconnects.insert"
        },
        {
          "methodName": "v1.compute.interconnects.list"
        },
        {
          "methodName": "v1.compute.interconnects.patch"
        },
        {
          "methodName": "v1.compute.licenseCodes.get"
        },
        {
          "methodName": "v1.compute.licenses.delete"
        },
        {
          "methodName": "v1.compute.licenses.get"
        },
        {
          "methodName": "v1.compute.licenses.getIamPolicy"
        },
        {
          "methodName": "v1.compute.licenses.insert"
        },
        {
          "methodName": "v1.compute.licenses.list"
        },
        {
          "methodName": "v1.compute.machineTypes.aggregatedList"
        },
        {
          "methodName": "v1.compute.machineTypes.get"
        },
        {
          "methodName": "v1.compute.machineTypes.list"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.aggregatedList"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.attachNetworkEndpoints"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.delete"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.detachNetworkEndpoints"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.get"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.insert"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.list"
        },
        {
          "methodName": "v1.compute.networkEndpointGroups.listNetworkEndpoints"
        },
        {
          "methodName": "v1.compute.networks.addPeering"
        },
        {
          "methodName": "v1.compute.networks.delete"
        },
        {
          "methodName": "v1.compute.networks.get"
        },
        {
          "methodName": "v1.compute.networks.insert"
        },
        {
          "methodName": "v1.compute.networks.list"
        },
        {
          "methodName": "v1.compute.networks.patch"
        },
        {
          "methodName": "v1.compute.networks.removePeering"
        },
        {
          "methodName": "v1.compute.networks.switchToCustomMode"
        },
        {
          "methodName": "v1.compute.networks.updatePeering"
        },
        {
          "methodName": "v1.compute.nodeGroups.addNodes"
        },
        {
          "methodName": "v1.compute.nodeGroups.aggregatedList"
        },
        {
          "methodName": "v1.compute.nodeGroups.delete"
        },
        {
          "methodName": "v1.compute.nodeGroups.deleteNodes"
        },
        {
          "methodName": "v1.compute.nodeGroups.get"
        },
        {
          "methodName": "v1.compute.nodeGroups.getIamPolicy"
        },
        {
          "methodName": "v1.compute.nodeGroups.insert"
        },
        {
          "methodName": "v1.compute.nodeGroups.list"
        },
        {
          "methodName": "v1.compute.nodeGroups.listNodes"
        },
        {
          "methodName": "v1.compute.nodeGroups.patch"
        },
        {
          "methodName": "v1.compute.nodeGroups.setIamPolicy"
        },
        {
          "methodName": "v1.compute.nodeGroups.setNodeTemplate"
        },
        {
          "methodName": "v1.compute.nodeTemplates.aggregatedList"
        },
        {
          "methodName": "v1.compute.nodeTemplates.delete"
        },
        {
          "methodName": "v1.compute.nodeTemplates.get"
        },
        {
          "methodName": "v1.compute.nodeTemplates.getIamPolicy"
        },
        {
          "methodName": "v1.compute.nodeTemplates.insert"
        },
        {
          "methodName": "v1.compute.nodeTemplates.list"
        },
        {
          "methodName": "v1.compute.nodeTemplates.setIamPolicy"
        },
        {
          "methodName": "v1.compute.nodeTemplates.testIamPermissions"
        },
        {
          "methodName": "v1.compute.nodeTypes.aggregatedList"
        },
        {
          "methodName": "v1.compute.nodeTypes.get"
        },
        {
          "methodName": "v1.compute.nodeTypes.list"
        },
        {
          "methodName": "v1.compute.packetMirrorings.aggregatedList"
        },
        {
          "methodName": "v1.compute.packetMirrorings.delete"
        },
        {
          "methodName": "v1.compute.packetMirrorings.get"
        },
        {
          "methodName": "v1.compute.packetMirrorings.insert"
        },
        {
          "methodName": "v1.compute.packetMirrorings.list"
        },
        {
          "methodName": "v1.compute.packetMirrorings.patch"
        },
        {
          "methodName": "v1.compute.projects.disableXpnHost"
        },
        {
          "methodName": "v1.compute.projects.disableXpnResource"
        },
        {
          "methodName": "v1.compute.projects.enableXpnHost"
        },
        {
          "methodName": "v1.compute.projects.enableXpnResource"
        },
        {
          "methodName": "v1.compute.projects.get"
        },
        {
          "methodName": "v1.compute.projects.getXpnHost"
        },
        {
          "methodName": "v1.compute.projects.getXpnResources"
        },
        {
          "methodName": "v1.compute.projects.listXpnHosts"
        },
        {
          "methodName": "v1.compute.projects.moveDisk"
        },
        {
          "methodName": "v1.compute.projects.moveInstance"
        },
        {
          "methodName": "v1.compute.projects.setCommonInstanceMetadata"
        },
        {
          "methodName": "v1.compute.projects.setDefaultNetworkTier"
        },
        {
          "methodName": "v1.compute.projects.setUsageExportBucket"
        },
        {
          "methodName": "v1.compute.regionAutoscalers.delete"
        },
        {
          "methodName": "v1.compute.regionAutoscalers.get"
        },
        {
          "methodName": "v1.compute.regionAutoscalers.insert"
        },
        {
          "methodName": "v1.compute.regionAutoscalers.list"
        },
        {
          "methodName": "v1.compute.regionAutoscalers.patch"
        },
        {
          "methodName": "v1.compute.regionAutoscalers.update"
        },
        {
          "methodName": "v1.compute.regionBackendServices.delete"
        },
        {
          "methodName": "v1.compute.regionBackendServices.get"
        },
        {
          "methodName": "v1.compute.regionBackendServices.getHealth"
        },
        {
          "methodName": "v1.compute.regionBackendServices.insert"
        },
        {
          "methodName": "v1.compute.regionBackendServices.list"
        },
        {
          "methodName": "v1.compute.regionBackendServices.patch"
        },
        {
          "methodName": "v1.compute.regionBackendServices.update"
        },
        {
          "methodName": "v1.compute.regionCommitments.aggregatedList"
        },
        {
          "methodName": "v1.compute.regionCommitments.get"
        },
        {
          "methodName": "v1.compute.regionCommitments.insert"
        },
        {
          "methodName": "v1.compute.regionCommitments.list"
        },
        {
          "methodName": "v1.compute.regionDiskTypes.list"
        },
        {
          "methodName": "v1.compute.regionDisks.addResourcePolicies"
        },
        {
          "methodName": "v1.compute.regionDisks.createSnapshot"
        },
        {
          "methodName": "v1.compute.regionDisks.delete"
        },
        {
          "methodName": "v1.compute.regionDisks.get"
        },
        {
          "methodName": "v1.compute.regionDisks.getIamPolicy"
        },
        {
          "methodName": "v1.compute.regionDisks.insert"
        },
        {
          "methodName": "v1.compute.regionDisks.list"
        },
        {
          "methodName": "v1.compute.regionDisks.removeResourcePolicies"
        },
        {
          "methodName": "v1.compute.regionDisks.resize"
        },
        {
          "methodName": "v1.compute.regionDisks.setIamPolicy"
        },
        {
          "methodName": "v1.compute.regionDisks.setLabels"
        },
        {
          "methodName": "v1.compute.regionHealthCheckServices.delete"
        },
        {
          "methodName": "v1.compute.regionHealthCheckServices.get"
        },
        {
          "methodName": "v1.compute.regionHealthCheckServices.insert"
        },
        {
          "methodName": "v1.compute.regionHealthCheckServices.list"
        },
        {
          "methodName": "v1.compute.regionHealthCheckServices.patch"
        },
        {
          "methodName": "v1.compute.regionHealthChecks.delete"
        },
        {
          "methodName": "v1.compute.regionHealthChecks.get"
        },
        {
          "methodName": "v1.compute.regionHealthChecks.insert"
        },
        {
          "methodName": "v1.compute.regionHealthChecks.list"
        },
        {
          "methodName": "v1.compute.regionHealthChecks.patch"
        },
        {
          "methodName": "v1.compute.regionHealthChecks.update"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.abandonInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.applyUpdatesToInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.createInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.delete"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.deleteInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.deletePerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.get"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.insert"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.list"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.listErrors"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.listManagedInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.listPerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.patch"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.recreateInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.resize"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.setInstanceTemplate"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.setTargetPools"
        },
        {
          "methodName": "v1.compute.regionInstanceGroupManagers.updatePerInstanceConfigs"
        },
        {
          "methodName": "v1.compute.regionInstanceGroups.get"
        },
        {
          "methodName": "v1.compute.regionInstanceGroups.insert"
        },
        {
          "methodName": "v1.compute.regionInstanceGroups.list"
        },
        {
          "methodName": "v1.compute.regionInstanceGroups.listInstances"
        },
        {
          "methodName": "v1.compute.regionInstanceGroups.setNamedPorts"
        },
        {
          "methodName": "v1.compute.regionNetworkEndpointGroups.delete"
        },
        {
          "methodName": "v1.compute.regionNetworkEndpointGroups.get"
        },
        {
          "methodName": "v1.compute.regionNetworkEndpointGroups.insert"
        },
        {
          "methodName": "v1.compute.regionNetworkEndpointGroups.list"
        },
        {
          "methodName": "v1.compute.regionNotificationEndpoints.delete"
        },
        {
          "methodName": "v1.compute.regionNotificationEndpoints.get"
        },
        {
          "methodName": "v1.compute.regionNotificationEndpoints.insert"
        },
        {
          "methodName": "v1.compute.regionNotificationEndpoints.list"
        },
        {
          "methodName": "v1.compute.regionOperations.delete"
        },
        {
          "methodName": "v1.compute.regionOperations.get"
        },
        {
          "methodName": "v1.compute.regionOperations.list"
        },
        {
          "methodName": "v1.compute.regionOperations.wait"
        },
        {
          "methodName": "v1.compute.regionSslCertificates.delete"
        },
        {
          "methodName": "v1.compute.regionSslCertificates.get"
        },
        {
          "methodName": "v1.compute.regionSslCertificates.insert"
        },
        {
          "methodName": "v1.compute.regionSslCertificates.list"
        },
        {
          "methodName": "v1.compute.regionTargetHttpProxies.delete"
        },
        {
          "methodName": "v1.compute.regionTargetHttpProxies.get"
        },
        {
          "methodName": "v1.compute.regionTargetHttpProxies.insert"
        },
        {
          "methodName": "v1.compute.regionTargetHttpProxies.list"
        },
        {
          "methodName": "v1.compute.regionTargetHttpProxies.setUrlMap"
        },
        {
          "methodName": "v1.compute.regionTargetHttpsProxies.delete"
        },
        {
          "methodName": "v1.compute.regionTargetHttpsProxies.get"
        },
        {
          "methodName": "v1.compute.regionTargetHttpsProxies.insert"
        },
        {
          "methodName": "v1.compute.regionTargetHttpsProxies.list"
        },
        {
          "methodName": "v1.compute.regionTargetHttpsProxies.setSslCertificates"
        },
        {
          "methodName": "v1.compute.regionTargetHttpsProxies.setUrlMap"
        },
        {
          "methodName": "v1.compute.regionUrlMaps.delete"
        },
        {
          "methodName": "v1.compute.regionUrlMaps.get"
        },
        {
          "methodName": "v1.compute.regionUrlMaps.insert"
        },
        {
          "methodName": "v1.compute.regionUrlMaps.list"
        },
        {
          "methodName": "v1.compute.regionUrlMaps.patch"
        },
        {
          "methodName": "v1.compute.regionUrlMaps.update"
        },
        {
          "methodName": "v1.compute.regions.get"
        },
        {
          "methodName": "v1.compute.regions.list"
        },
        {
          "methodName": "v1.compute.reservations.aggregatedList"
        },
        {
          "methodName": "v1.compute.reservations.delete"
        },
        {
          "methodName": "v1.compute.reservations.get"
        },
        {
          "methodName": "v1.compute.reservations.getIamPolicy"
        },
        {
          "methodName": "v1.compute.reservations.insert"
        },
        {
          "methodName": "v1.compute.reservations.list"
        },
        {
          "methodName": "v1.compute.reservations.resize"
        },
        {
          "methodName": "v1.compute.reservations.setIamPolicy"
        },
        {
          "methodName": "v1.compute.resourcePolicies.aggregatedList"
        },
        {
          "methodName": "v1.compute.resourcePolicies.delete"
        },
        {
          "methodName": "v1.compute.resourcePolicies.get"
        },
        {
          "methodName": "v1.compute.resourcePolicies.getIamPolicy"
        },
        {
          "methodName": "v1.compute.resourcePolicies.insert"
        },
        {
          "methodName": "v1.compute.resourcePolicies.list"
        },
        {
          "methodName": "v1.compute.resourcePolicies.setIamPolicy"
        },
        {
          "methodName": "v1.compute.resourcePolicies.testIamPermissions"
        },
        {
          "methodName": "v1.compute.routers.aggregatedList"
        },
        {
          "methodName": "v1.compute.routers.delete"
        },
        {
          "methodName": "v1.compute.routers.get"
        },
        {
          "methodName": "v1.compute.routers.getNatMappingInfo"
        },
        {
          "methodName": "v1.compute.routers.getRouterStatus"
        },
        {
          "methodName": "v1.compute.routers.insert"
        },
        {
          "methodName": "v1.compute.routers.list"
        },
        {
          "methodName": "v1.compute.routers.patch"
        },
        {
          "methodName": "v1.compute.routers.update"
        },
        {
          "methodName": "v1.compute.routes.delete"
        },
        {
          "methodName": "v1.compute.routes.get"
        },
        {
          "methodName": "v1.compute.routes.insert"
        },
        {
          "methodName": "v1.compute.routes.list"
        },
        {
          "methodName": "v1.compute.securityPolicies.addRule"
        },
        {
          "methodName": "v1.compute.securityPolicies.delete"
        },
        {
          "methodName": "v1.compute.securityPolicies.get"
        },
        {
          "methodName": "v1.compute.securityPolicies.getRule"
        },
        {
          "methodName": "v1.compute.securityPolicies.insert"
        },
        {
          "methodName": "v1.compute.securityPolicies.list"
        },
        {
          "methodName": "v1.compute.securityPolicies.listPreconfiguredExpressionSets"
        },
        {
          "methodName": "v1.compute.securityPolicies.patch"
        },
        {
          "methodName": "v1.compute.securityPolicies.patchRule"
        },
        {
          "methodName": "v1.compute.securityPolicies.removeRule"
        },
        {
          "methodName": "v1.compute.snapshots.delete"
        },
        {
          "methodName": "v1.compute.snapshots.get"
        },
        {
          "methodName": "v1.compute.snapshots.getIamPolicy"
        },
        {
          "methodName": "v1.compute.snapshots.list"
        },
        {
          "methodName": "v1.compute.snapshots.setIamPolicy"
        },
        {
          "methodName": "v1.compute.snapshots.setLabels"
        },
        {
          "methodName": "v1.compute.snapshots.testIamPermissions"
        },
        {
          "methodName": "v1.compute.sslCertificates.aggregatedList"
        },
        {
          "methodName": "v1.compute.sslCertificates.delete"
        },
        {
          "methodName": "v1.compute.sslCertificates.get"
        },
        {
          "methodName": "v1.compute.sslCertificates.insert"
        },
        {
          "methodName": "v1.compute.sslCertificates.list"
        },
        {
          "methodName": "v1.compute.sslPolicies.delete"
        },
        {
          "methodName": "v1.compute.sslPolicies.get"
        },
        {
          "methodName": "v1.compute.sslPolicies.insert"
        },
        {
          "methodName": "v1.compute.sslPolicies.list"
        },
        {
          "methodName": "v1.compute.sslPolicies.patch"
        },
        {
          "methodName": "v1.compute.subnetworks.aggregatedList"
        },
        {
          "methodName": "v1.compute.subnetworks.delete"
        },
        {
          "methodName": "v1.compute.subnetworks.expandIpCidrRange"
        },
        {
          "methodName": "v1.compute.subnetworks.get"
        },
        {
          "methodName": "v1.compute.subnetworks.getIamPolicy"
        },
        {
          "methodName": "v1.compute.subnetworks.insert"
        },
        {
          "methodName": "v1.compute.subnetworks.list"
        },
        {
          "methodName": "v1.compute.subnetworks.patch"
        },
        {
          "methodName": "v1.compute.subnetworks.setIamPolicy"
        },
        {
          "methodName": "v1.compute.subnetworks.setPrivateIpGoogleAccess"
        },
        {
          "methodName": "v1.compute.targetGrpcProxies.insert"
        },
        {
          "methodName": "v1.compute.targetHttpProxies.aggregatedList"
        },
        {
          "methodName": "v1.compute.targetHttpProxies.delete"
        },
        {
          "methodName": "v1.compute.targetHttpProxies.get"
        },
        {
          "methodName": "v1.compute.targetHttpProxies.insert"
        },
        {
          "methodName": "v1.compute.targetHttpProxies.list"
        },
        {
          "methodName": "v1.compute.targetHttpProxies.setUrlMap"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.aggregatedList"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.delete"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.get"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.insert"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.list"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.setQuicOverride"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.setSslCertificates"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.setSslPolicy"
        },
        {
          "methodName": "v1.compute.targetHttpsProxies.setUrlMap"
        },
        {
          "methodName": "v1.compute.targetInstances.aggregatedList"
        },
        {
          "methodName": "v1.compute.targetInstances.delete"
        },
        {
          "methodName": "v1.compute.targetInstances.get"
        },
        {
          "methodName": "v1.compute.targetInstances.insert"
        },
        {
          "methodName": "v1.compute.targetInstances.list"
        },
        {
          "methodName": "v1.compute.targetPools.addHealthCheck"
        },
        {
          "methodName": "v1.compute.targetPools.addInstance"
        },
        {
          "methodName": "v1.compute.targetPools.aggregatedList"
        },
        {
          "methodName": "v1.compute.targetPools.delete"
        },
        {
          "methodName": "v1.compute.targetPools.get"
        },
        {
          "methodName": "v1.compute.targetPools.getHealth"
        },
        {
          "methodName": "v1.compute.targetPools.insert"
        },
        {
          "methodName": "v1.compute.targetPools.list"
        },
        {
          "methodName": "v1.compute.targetPools.removeHealthCheck"
        },
        {
          "methodName": "v1.compute.targetPools.removeInstance"
        },
        {
          "methodName": "v1.compute.targetPools.setBackup"
        },
        {
          "methodName": "v1.compute.targetSslProxies.delete"
        },
        {
          "methodName": "v1.compute.targetSslProxies.get"
        },
        {
          "methodName": "v1.compute.targetSslProxies.insert"
        },
        {
          "methodName": "v1.compute.targetSslProxies.list"
        },
        {
          "methodName": "v1.compute.targetSslProxies.setBackendService"
        },
        {
          "methodName": "v1.compute.targetSslProxies.setProxyHeader"
        },
        {
          "methodName": "v1.compute.targetSslProxies.setSslCertificates"
        },
        {
          "methodName": "v1.compute.targetSslProxies.setSslPolicy"
        },
        {
          "methodName": "v1.compute.targetTcpProxies.delete"
        },
        {
          "methodName": "v1.compute.targetTcpProxies.get"
        },
        {
          "methodName": "v1.compute.targetTcpProxies.insert"
        },
        {
          "methodName": "v1.compute.targetTcpProxies.list"
        },
        {
          "methodName": "v1.compute.targetTcpProxies.setBackendService"
        },
        {
          "methodName": "v1.compute.targetTcpProxies.setProxyHeader"
        },
        {
          "methodName": "v1.compute.targetVpnGateways.aggregatedList"
        },
        {
          "methodName": "v1.compute.targetVpnGateways.delete"
        },
        {
          "methodName": "v1.compute.targetVpnGateways.get"
        },
        {
          "methodName": "v1.compute.targetVpnGateways.insert"
        },
        {
          "methodName": "v1.compute.targetVpnGateways.list"
        },
        {
          "methodName": "v1.compute.urlMaps.aggregatedList"
        },
        {
          "methodName": "v1.compute.urlMaps.delete"
        },
        {
          "methodName": "v1.compute.urlMaps.get"
        },
        {
          "methodName": "v1.compute.urlMaps.insert"
        },
        {
          "methodName": "v1.compute.urlMaps.invalidateCache"
        },
        {
          "methodName": "v1.compute.urlMaps.list"
        },
        {
          "methodName": "v1.compute.urlMaps.patch"
        },
        {
          "methodName": "v1.compute.urlMaps.update"
        },
        {
          "methodName": "v1.compute.urlMaps.validate"
        },
        {
          "methodName": "v1.compute.vpnGateways.delete"
        },
        {
          "methodName": "v1.compute.vpnGateways.insert"
        },
        {
          "methodName": "v1.compute.vpnGateways.setLabels"
        },
        {
          "methodName": "v1.compute.vpnTunnels.aggregatedList"
        },
        {
          "methodName": "v1.compute.vpnTunnels.delete"
        },
        {
          "methodName": "v1.compute.vpnTunnels.get"
        },
        {
          "methodName": "v1.compute.vpnTunnels.insert"
        },
        {
          "methodName": "v1.compute.vpnTunnels.list"
        },
        {
          "methodName": "v1.compute.zoneOperations.delete"
        },
        {
          "methodName": "v1.compute.zoneOperations.get"
        },
        {
          "methodName": "v1.compute.zoneOperations.list"
        },
        {
          "methodName": "v1.compute.zoneOperations.wait"
        },
        {
          "methodName": "v1.compute.zones.get"
        },
        {
          "methodName": "v1.compute.zones.list"
        }
      ]
    },
    {
      "serviceName": "containeranalysis.googleapis.com",
      "displayName": "Container Analysis",
      "methods": [
        {
          "methodName": "google.devtools.containeranalysis.v1.ContainerAnalysis.GetIamPolicy"
        },
        {
          "methodName": "google.devtools.containeranalysis.v1.ContainerAnalysis.GetUpgradeSummary"
        },
        {
          "methodName": "google.devtools.containeranalysis.v1.ContainerAnalysis.GetVulnerabilityOccurrencesSummary"
        },
        {
          "methodName": "google.devtools.containeranalysis.v1.ContainerAnalysis.ListResourceUpgradeSummaries"
        },
        {
          "methodName": "google.devtools.containeranalysis.v1.ContainerAnalysis.SetIamPolicy"
        },
        {
          "methodName": "google.devtools.containeranalysis.v1beta1.ContainerAnalysisV1Beta1.GetIamPolicy"
        },
        {
          "methodName": "google.devtools.containeranalysis.v1beta1.ContainerAnalysisV1Beta1.SetIamPolicy"
        },
        {
          "methodName": "grafeas.v1.Grafeas.BatchCreateNotes"
        },
        {
          "methodName": "grafeas.v1.Grafeas.BatchCreateOccurrences"
        },
        {
          "methodName": "grafeas.v1.Grafeas.CreateNote"
        },
        {
          "methodName": "grafeas.v1.Grafeas.CreateOccurrence"
        },
        {
          "methodName": "grafeas.v1.Grafeas.DeleteNote"
        },
        {
          "methodName": "grafeas.v1.Grafeas.DeleteOccurrence"
        },
        {
          "methodName": "grafeas.v1.Grafeas.GetNote"
        },
        {
          "methodName": "grafeas.v1.Grafeas.GetOccurrence"
        },
        {
          "methodName": "grafeas.v1.Grafeas.GetOccurrenceNote"
        },
        {
          "methodName": "grafeas.v1.Grafeas.ListNoteOccurrences"
        },
        {
          "methodName": "grafeas.v1.Grafeas.ListNotes"
        },
        {
          "methodName": "grafeas.v1.Grafeas.ListOccurrences"
        },
        {
          "methodName": "grafeas.v1.Grafeas.UpdateNote"
        },
        {
          "methodName": "grafeas.v1.Grafeas.UpdateOccurrence"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.CreateNote"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.CreateOccurrence"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.DeleteNote"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.DeleteOccurrence"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.GetNote"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.GetOccurrence"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.GetVulnerabilityOccurrencesSummary"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.ListNoteOccurrences"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.ListNotes"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.ListOccurrences"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.UpdateNote"
        },
        {
          "methodName": "grafeas.v1beta1.GrafeasV1Beta1.UpdateOccurrence"
        }
      ]
    },
    {
      "serviceName": "customerusagedataprocessing.googleapis.com",
      "displayName": "Transparency and Control Center Audit Logging",
      "methods": [
        {
          "methodName": "google.cloud.bi.customerusagedataprocessing.v1.DataProcessingGroupControlService.ListEffectiveDataProcessingGroupControls"
        },
        {
          "methodName": "google.cloud.bi.customerusagedataprocessing.v1beta.DataProcessingGroupControlService.ListEffectiveDataProcessingGroupControls"
        }
      ]
    },
    {
      "serviceName": "datacatalog.googleapis.com",
      "displayName": "Cloud Data Catalog",
      "methods": [
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.CreateEntry"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.CreateEntryGroup"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.CreateTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.CreateTagTemplate"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.CreateTagTemplateField"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.DeleteEntry"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.DeleteEntryGroup"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.DeleteTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.DeleteTagTemplate"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.DeleteTagTemplateField"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.GetEntry"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.GetEntryGroup"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.GetTagTemplate"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.ListEntries"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.ListEntryGroups"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.ListTags"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.LookupEntry"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.RenameTagTemplateField"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.RenameTagTemplateFieldEnumValue"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.TestUpdateTagPermission"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.UpdateEntry"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.UpdateEntryGroup"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.UpdateTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.UpdateTagTemplate"
        },
        {
          "methodName": "google.cloud.datacatalog.v1.DataCatalog.UpdateTagTemplateField"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.DataCatalog.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.DataCatalog.RenameTagTemplateFieldEnumValue"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.DataCatalog.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.CreatePolicyTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.CreateTaxonomy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.DeletePolicyTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.DeleteTaxonomy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.GetPolicyTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.GetTaxonomy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.ListPolicyTags"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.ListTaxonomies"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdatePolicyTag"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManager.UpdateTaxonomy"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ImportTaxonomies"
        },
        {
          "methodName": "google.cloud.datacatalog.v1beta1.PolicyTagManagerSerialization.ReplaceTaxonomy"
        }
      ]
    },
    {
      "serviceName": "dataflow.googleapis.com",
      "displayName": "Cloud Dataflow",
      "methods": [
        {
          "methodName": "resourcemanager.projects.get"
        }
      ]
    },
    {
      "serviceName": "datafusion.googleapis.com",
      "displayName": "Cloud Data Fusion",
      "methods": [
        {
          "methodName": "GetIamPolicy"
        },
        {
          "methodName": "SetIamPolicy"
        },
        {
          "methodName": "google.cloud.datafusion.v1.DataFusion.CreateInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1.DataFusion.DeleteInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1.DataFusion.GetInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1.DataFusion.ListInstances"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.CreateInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.DeleteInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.GetInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.ListAvailableVersions"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.ListInstances"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.RestartInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.UpdateInstance"
        },
        {
          "methodName": "google.cloud.datafusion.v1beta1.DataFusion.UpgradeInstance"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "datahub.googleapis.com",
      "methods": [
        {
          "methodName": "google.cloud.datahub.v2.Datahub2.TestUpdateAnnotationPermission"
        },
        {
          "methodName": "google.cloud.datahub.v2.Datahub2.UpdateEntryAnnotationGroups"
        }
      ]
    },
    {
      "serviceName": "datalabeling.googleapis.com",
      "displayName": "Cloud AI Data Labelling",
      "methods": [
        {
          "methodName": "google.cloud.datalabeling.v1beta1.DataLabelingService.CreateAnnotationSpecSet"
        },
        {
          "methodName": "google.cloud.datalabeling.v1beta1.DataLabelingService.CreateDataset"
        },
        {
          "methodName": "google.cloud.datalabeling.v1beta1.DataLabelingService.DeleteAnnotatedDataset"
        },
        {
          "methodName": "google.cloud.datalabeling.v1beta1.DataLabelingService.DeleteAnnotationSpecSet"
        },
        {
          "methodName": "google.cloud.datalabeling.v1beta1.DataLabelingService.DeleteDataset"
        },
        {
          "methodName": "google.cloud.datalabeling.v1beta1.DataLabelingService.ImportData"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "dataproc.googleapis.com",
      "displayName": "Cloud Dataproc",
      "methods": [
        {
          "methodName": "google.cloud.dataproc.control.v1.AgentService.CreateAgent"
        },
        {
          "methodName": "google.cloud.dataproc.control.v1.AgentService.GetAgent"
        },
        {
          "methodName": "google.cloud.dataproc.control.v1.AgentService.ListSecrets"
        },
        {
          "methodName": "google.cloud.dataproc.control.v1.AgentService.UpdateAgent"
        },
        {
          "methodName": "google.cloud.dataproc.v1.AutoscalingPolicyService.CreateAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1.AutoscalingPolicyService.DeleteAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1.AutoscalingPolicyService.GetAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1.AutoscalingPolicyService.ListAutoscalingPolicies"
        },
        {
          "methodName": "google.cloud.dataproc.v1.AutoscalingPolicyService.UpdateAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1.ClusterController.CreateCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1.ClusterController.DeleteCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1.ClusterController.DiagnoseCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1.ClusterController.GetCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1.ClusterController.ListClusters"
        },
        {
          "methodName": "google.cloud.dataproc.v1.ClusterController.UpdateCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.CancelJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.DeleteJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.GetJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.ListJobs"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.SubmitJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.SubmitJobAsOperation"
        },
        {
          "methodName": "google.cloud.dataproc.v1.JobController.UpdateJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.CreateWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.DeleteWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.GetWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.InstantiateInlineWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.InstantiateWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.ListWorkflowTemplates"
        },
        {
          "methodName": "google.cloud.dataproc.v1.WorkflowTemplateService.UpdateWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.AutoscalingPolicyService.CreateAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.AutoscalingPolicyService.DeleteAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.AutoscalingPolicyService.GetAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.AutoscalingPolicyService.ListAutoscalingPolicies"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.AutoscalingPolicyService.UpdateAutoscalingPolicy"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.CreateCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.DeleteCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.DiagnoseCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.GetCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.ListClusters"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.StartCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.StopCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.ClusterController.UpdateCluster"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.JobController.CancelJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.JobController.DeleteJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.JobController.GetJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.JobController.ListJobs"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.JobController.SubmitJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.JobController.UpdateJob"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.CreateWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.DeleteWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.GetWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.InstantiateInlineWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.InstantiateWorkflowTemplate"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.ListWorkflowTemplates"
        },
        {
          "methodName": "google.cloud.dataproc.v1beta2.WorkflowTemplateService.UpdateWorkflowTemplate"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.GetIamPolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "datastore.googleapis.com",
      "displayName": "Cloud Datastore",
      "methods": [
        {
          "methodName": "google.datastore.admin.v1.DatastoreAdmin.CreateIndex"
        },
        {
          "methodName": "google.datastore.admin.v1.DatastoreAdmin.DeleteIndex"
        },
        {
          "methodName": "google.datastore.admin.v1.DatastoreAdmin.ExportEntities"
        },
        {
          "methodName": "google.datastore.admin.v1.DatastoreAdmin.GetIndex"
        },
        {
          "methodName": "google.datastore.admin.v1.DatastoreAdmin.ImportEntities"
        },
        {
          "methodName": "google.datastore.admin.v1.DatastoreAdmin.ListIndexes"
        },
        {
          "methodName": "google.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities"
        },
        {
          "methodName": "google.datastore.admin.v1beta1.DatastoreAdmin.ImportEntities"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "deploymentmanager.googleapis.com",
      "displayName": "Cloud Deployment Manager",
      "methods": [
        {
          "methodName": "dogfood.deploymentmanager.deployments.delete"
        },
        {
          "methodName": "dogfood.deploymentmanager.deployments.insert"
        },
        {
          "methodName": "dogfood.deploymentmanager.deployments.setIamPolicy"
        },
        {
          "methodName": "dogfood.deploymentmanager.deployments.update"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.cancelPreview"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.delete"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.get"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.getIamPolicy"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.insert"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.list"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.patch"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.setIamPolicy"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.stop"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.testIamPermissions"
        },
        {
          "methodName": "v2.deploymentmanager.deployments.update"
        },
        {
          "methodName": "v2.deploymentmanager.manifests.get"
        },
        {
          "methodName": "v2.deploymentmanager.manifests.list"
        },
        {
          "methodName": "v2.deploymentmanager.operations.get"
        },
        {
          "methodName": "v2.deploymentmanager.operations.list"
        },
        {
          "methodName": "v2.deploymentmanager.resources.get"
        },
        {
          "methodName": "v2.deploymentmanager.resources.list"
        },
        {
          "methodName": "v2.deploymentmanager.types.list"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.delete"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.get"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.insert"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.list"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.patch"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.stop"
        },
        {
          "methodName": "v2beta.deploymentmanager.deployments.update"
        },
        {
          "methodName": "v2beta.deploymentmanager.manifests.get"
        },
        {
          "methodName": "v2beta.deploymentmanager.operations.get"
        },
        {
          "methodName": "v2beta.deploymentmanager.resources.list"
        }
      ]
    },
    {
      "serviceName": "dialogflow.googleapis.com",
      "displayName": "Cloud Dialogflow",
      "methods": [
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Agents.CreateAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Agents.DeleteAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Agents.RestoreAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Agents.UpdateAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.EntityTypes.GetEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.EntityTypes.ListEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Intents.CreateIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Intents.GetIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.cx.v3beta1.Sessions.DetectIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.DeleteAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.ExportAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.GetAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.GetValidationResult"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.ImportAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.RestoreAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.SearchAgents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.SetAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Agents.TrainAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.AnswerRecords.UpdateAnswerRecord"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Contexts.CreateContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Contexts.DeleteAllContexts"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Contexts.DeleteContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Contexts.GetContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Contexts.ListContexts"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Contexts.UpdateContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.ConversationProfiles.CreateConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.ConversationProfiles.DeleteConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.ConversationProfiles.GetConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.ConversationProfiles.ListConversationProfiles"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.ConversationProfiles.UpdateConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Conversations.CompleteConversation"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Conversations.CreateCallMatcher"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Conversations.CreateConversation"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.BatchCreateEntities"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.BatchDeleteEntities"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.BatchDeleteEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntities"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.BatchUpdateEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.CreateEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.DeleteEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.GetEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.ListEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.EntityTypes.UpdateEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Fulfillments.GetFulfillment"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Fulfillments.UpdateFulfillment"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.BatchDeleteIntents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.BatchUpdateIntents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.CreateIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.DeleteIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.GetIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.ListIntents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Intents.UpdateIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.KnowledgeBases.CreateKnowledgeBase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.KnowledgeBases.GetKnowledgeBase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Participants.AnalyzeContent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Participants.CreateParticipant"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Participants.StreamingAnalyzeContent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.PhoneNumbers.UpdatePhoneNumber"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.SessionEntityTypes.CreateSessionEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.SessionEntityTypes.GetSessionEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.SessionEntityTypes.ListSessionEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Sessions.DetectIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2.Sessions.StreamingDetectIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.DeleteAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.ExportAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.GetAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.GetAgentSettings"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.GetValidationResult"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.ImportAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.RestoreAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.SearchAgents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.SetAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.TrainAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.UpdateAgent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Agents.UpdateAgentSettings"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Analytics.ListAnalytics"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.AnswerRecords.UpdateAnswerRecord"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Contexts.CreateContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Contexts.DeleteAllContexts"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Contexts.DeleteContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Contexts.GetContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Contexts.ListContexts"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Contexts.UpdateContext"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.ClearSuggestionFeatureConfig"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.CreateConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.DeleteConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.GetConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.ListConversationProfiles"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.SetSuggestionFeatureConfig"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.ConversationProfiles.UpdateConversationProfile"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.AddConversationPhoneNumber"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.CompleteConversation"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.CreateCallMatcher"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.CreateConversation"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.ExportMessages"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.GetConversation"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.ListConversations"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Conversations.ListMessages"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.BatchUpdateQuestionAnswerEntries"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.CreateDocument"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.DeleteDocument"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.GenerateDocument"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.GetDocument"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.ListDocuments"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.ListQuestionAnswerEntries"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.ListSmartMessagingEntries"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.ReloadDocument"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Documents.UpdateDocument"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.BatchDeleteEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.BatchUpdateEntities"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.BatchUpdateEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.CreateEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.DeleteEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.GetEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.ListEntityTypes"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.EntityTypes.UpdateEntityType"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Environments.CreateEnvironment"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Environments.GetEnvironmentHistory"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Environments.ListEnvironments"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Environments.UpdateEnvironment"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Fulfillments.GetFulfillment"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Fulfillments.UpdateFulfillment"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.HumanAgentAssistants.CompileSuggestions"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.HumanAgentAssistants.GetHumanAgentAssistant"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.FinalizeIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.GetIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.ListIntegrations"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.RemoveIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.RevokeIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.SignupIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.StartIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Integrations.StopIntegration"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.AnnotateTrainingPhrase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.BatchDeleteIntents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.BatchUpdateIntents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.CreateIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.DeleteIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.GetIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.ListIntents"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.SearchKnowledgeBaseIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Intents.UpdateIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.KnowledgeBases.CreateKnowledgeBase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.KnowledgeBases.DeleteKnowledgeBase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.KnowledgeBases.GetKnowledgeBase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.KnowledgeBases.ListKnowledgeBases"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.KnowledgeBases.UpdateKnowledgeBase"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.AnalyzeContent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.CreateParticipant"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.GetParticipant"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.ListParticipants"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.StreamingAnalyzeContent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.SuggestFaqAnswers"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.SuggestSmartComposeAnswers"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Participants.SuggestSmartReplies"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumberOrders.CreatePhoneNumberLease"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumberOrders.CreatePhoneNumberOrder"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumberOrders.ListPhoneNumberOrders"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumberOrders.UpgradePhoneNumberLease"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumbers.DeletePhoneNumber"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumbers.ListPhoneNumbers"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.PhoneNumbers.UpdatePhoneNumber"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SecuritySettingsService.GetSecuritySettings"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SecuritySettingsService.UpdateSecuritySettings"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SessionHistory.DeleteSessionConversation"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SessionHistory.ListInteractions"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SessionHistory.SearchSessionConversations"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Sessions.DetectIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Sessions.StreamingDetectIntent"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SmallTalk.GetSmallTalkConfig"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SmallTalk.UpdateSmallTalkConfig"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SpecialistPools.CreateSpecialistPool"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.SpecialistPools.DeleteSpecialistPool"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Versions.CreateVersion"
        },
        {
          "methodName": "google.cloud.dialogflow.v2beta1.Versions.ListVersions"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "dlp.googleapis.com",
      "displayName": "Cloud Data Loss Prevention",
      "methods": [
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ActivateJobTrigger"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.CancelDlpJob"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.CreateDeidentifyTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.CreateDlpJob"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.CreateInspectTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.CreateJobTrigger"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.CreateStoredInfoType"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.DeidentifyContent"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.DeleteDeidentifyTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.DeleteDlpJob"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.DeleteInspectTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.DeleteJobTrigger"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.DeleteStoredInfoType"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.FinishDlpJob"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.GetDeidentifyTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.GetDlpJob"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.GetInspectTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.GetJobTrigger"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.GetStoredInfoType"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.HybridInspectDlpJob"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.HybridInspectJobTrigger"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.InspectContent"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ListDeidentifyTemplates"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ListDlpJobs"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ListInspectTemplates"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ListJobTriggers"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ListStoredInfoTypes"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.ReidentifyContent"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.UpdateDeidentifyTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.UpdateInspectTemplate"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.UpdateJobTrigger"
        },
        {
          "methodName": "google.privacy.dlp.v2.DlpService.UpdateStoredInfoType"
        }
      ]
    },
    {
      "serviceName": "dns.googleapis.com",
      "displayName": "Cloud DNS",
      "methods": [
        {
          "methodName": "dns.changes.create"
        },
        {
          "methodName": "dns.changes.get"
        },
        {
          "methodName": "dns.changes.list"
        },
        {
          "methodName": "dns.managedZones.create"
        },
        {
          "methodName": "dns.managedZones.delete"
        },
        {
          "methodName": "dns.managedZones.get"
        },
        {
          "methodName": "dns.managedZones.list"
        },
        {
          "methodName": "dns.managedZones.update"
        },
        {
          "methodName": "dns.policies.create"
        },
        {
          "methodName": "dns.policies.delete"
        },
        {
          "methodName": "dns.policies.get"
        },
        {
          "methodName": "dns.policies.list"
        },
        {
          "methodName": "dns.projects.get"
        },
        {
          "methodName": "dns.resourceRecordSets.create"
        },
        {
          "methodName": "dns.resourceRecordSets.delete"
        },
        {
          "methodName": "dns.resourceRecordSets.list"
        }
      ]
    },
    {
      "serviceName": "domains.googleapis.com",
      "displayName": "Google Domains",
      "methods": [
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.ConfigureContactSettings"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.ConfigureDnsSettings"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.ConfigureManagementSettings"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.DeleteRegistration"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.ExportRegistration"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.RegisterDomain"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.ResetAuthorizationCode"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.RetrieveAuthorizationCode"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.RetrieveRegisterParameters"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.SearchDomains"
        },
        {
          "methodName": "google.cloud.domains.v1beta1.Domains.UpdateRegistration"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "eventarc.googleapis.com",
      "methods": [
        {
          "methodName": "google.cloud.eventarc.v1beta1.Eventarc.CreateTrigger"
        },
        {
          "methodName": "google.cloud.eventarc.v1beta1.Eventarc.DeleteTrigger"
        },
        {
          "methodName": "google.cloud.eventarc.v1beta1.Eventarc.GetTrigger"
        },
        {
          "methodName": "google.cloud.eventarc.v1beta1.Eventarc.ListTriggers"
        },
        {
          "methodName": "google.cloud.eventarc.v1beta1.Eventarc.UpdateTrigger"
        }
      ]
    },
    {
      "serviceName": "file.googleapis.com",
      "displayName": "Cloud Filestore",
      "methods": [
        {
          "methodName": "google.cloud.filestore.v1.CloudFilestoreManager.CreateInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1.CloudFilestoreManager.DeleteInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1.CloudFilestoreManager.GetInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1.CloudFilestoreManager.ListInstances"
        },
        {
          "methodName": "google.cloud.filestore.v1.CloudFilestoreManager.UpdateInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.CreateBackup"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.CreateInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.DeleteBackup"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.DeleteInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.GetInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.ListInstances"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.RestoreInstance"
        },
        {
          "methodName": "google.cloud.filestore.v1beta1.CloudFilestoreManager.UpdateInstance"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        }
      ]
    },
    {
      "serviceName": "firebase.googleapis.com",
      "displayName": "Cloud Firebase",
      "methods": [
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.CreateAndroidApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.CreateShaCertificate"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.DeleteShaCertificate"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.GetAndroidApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.GetAndroidAppConfig"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.ListAndroidApps"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.ListShaCertificates"
        },
        {
          "methodName": "google.firebase.service.v1beta1.AndroidAppService.UpdateAndroidApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseAnalyticsService.AddGoogleAnalytics"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.AddFirebase"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.FinalizeDefaultLocation"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.GetAdminSdkConfig"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.GetFirebaseProject"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.ListAvailableLocations"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.SearchFirebaseApps"
        },
        {
          "methodName": "google.firebase.service.v1beta1.FirebaseProjectService.UpdateFirebaseProject"
        },
        {
          "methodName": "google.firebase.service.v1beta1.IosAppService.CreateIosApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.IosAppService.GetIosAppConfig"
        },
        {
          "methodName": "google.firebase.service.v1beta1.IosAppService.ListIosApps"
        },
        {
          "methodName": "google.firebase.service.v1beta1.IosAppService.UpdateIosApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.WebAppService.CreateWebApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.WebAppService.GetWebApp"
        },
        {
          "methodName": "google.firebase.service.v1beta1.WebAppService.GetWebAppConfig"
        },
        {
          "methodName": "google.firebase.service.v1beta1.WebAppService.ListWebApps"
        },
        {
          "methodName": "google.firebase.service.v1beta1.WebAppService.UpdateWebApp"
        },
        {
          "methodName": "google.longrunning.FiredataOperations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "firebasedatabase.googleapis.com",
      "displayName": "Firebase Realtime Database",
      "methods": [
        {
          "methodName": "google.firebase.database.v1beta.RealtimeDatabaseService.CreateDatabaseInstance"
        },
        {
          "methodName": "google.firebase.database.v1beta.RealtimeDatabaseService.DeleteDatabaseInstance"
        },
        {
          "methodName": "google.firebase.database.v1beta.RealtimeDatabaseService.DisableDatabaseInstance"
        },
        {
          "methodName": "google.firebase.database.v1beta.RealtimeDatabaseService.ReenableDatabaseInstance"
        }
      ]
    },
    {
      "serviceName": "firestore.googleapis.com",
      "displayName": "Cloud Firestore",
      "methods": [
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.CreateIndex"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.DeleteIndex"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.ExportDocuments"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.GetField"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.GetIndex"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.ImportDocuments"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.ListFields"
        },
        {
          "methodName": "google.firestore.admin.v1.FirestoreAdmin.ListIndexes"
        },
        {
          "methodName": "google.firestore.admin.v1beta1.FirestoreAdmin.CreateIndex"
        },
        {
          "methodName": "google.firestore.admin.v1beta1.FirestoreAdmin.DeleteIndex"
        },
        {
          "methodName": "google.firestore.admin.v1beta1.FirestoreAdmin.ExportDocuments"
        },
        {
          "methodName": "google.firestore.admin.v1beta1.FirestoreAdmin.ImportDocuments"
        },
        {
          "methodName": "google.firestore.admin.v1beta1.FirestoreAdmin.ListIndexes"
        },
        {
          "methodName": "google.firestore.admin.v1beta2.FirestoreAdmin.CreateIndex"
        },
        {
          "methodName": "google.firestore.admin.v1beta2.FirestoreAdmin.DeleteIndex"
        },
        {
          "methodName": "google.firestore.admin.v1beta2.FirestoreAdmin.ExportDocuments"
        },
        {
          "methodName": "google.firestore.admin.v1beta2.FirestoreAdmin.ImportDocuments"
        },
        {
          "methodName": "google.firestore.admin.v1beta2.FirestoreAdmin.ListFields"
        },
        {
          "methodName": "google.firestore.admin.v1beta2.FirestoreAdmin.ListIndexes"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "gameservices.googleapis.com",
      "displayName": "Cloud Gaming",
      "methods": [
        {
          "methodName": "google.cloud.gaming.v1.GameServerClustersService.CreateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerClustersService.DeleteGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerClustersService.GetGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerClustersService.ListGameServerClusters"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerClustersService.UpdateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerConfigsService.CreateGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerConfigsService.DeleteGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerConfigsService.GetGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerConfigsService.ListGameServerConfigs"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.CreateGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.DeleteGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.FetchDeploymentState"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.GetGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.GetGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.ListGameServerDeployments"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.PreviewGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.UpdateGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1.GameServerDeploymentsService.UpdateGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1.RealmsService.CreateRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1.RealmsService.DeleteRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1.RealmsService.GetRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1.RealmsService.ListRealms"
        },
        {
          "methodName": "google.cloud.gaming.v1.RealmsService.PreviewRealmUpdate"
        },
        {
          "methodName": "google.cloud.gaming.v1.RealmsService.UpdateRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerClustersService.CreateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerClustersService.DeleteGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerClustersService.GetGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerClustersService.ListGameServerClusters"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerClustersService.PreviewCreateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerClustersService.UpdateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerConfigsService.CreateGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerConfigsService.DeleteGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerConfigsService.GetGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerConfigsService.ListGameServerConfigs"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.CreateGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.DeleteGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.FetchDeploymentState"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.GetGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.GetGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.ListGameServerDeployments"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.PreviewGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.UpdateGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.GameServerDeploymentsService.UpdateGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.RealmsService.CreateRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.RealmsService.DeleteRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.RealmsService.GetRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.RealmsService.ListRealms"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.RealmsService.PreviewRealmUpdate"
        },
        {
          "methodName": "google.cloud.gaming.v1beta.RealmsService.UpdateRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerClustersService.CreateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerClustersService.DeleteGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerClustersService.GetGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerClustersService.ListGameServerClusters"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerClustersService.UpdateGameServerCluster"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerConfigsService.CreateGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerConfigsService.DeleteGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerConfigsService.GetGameServerConfig"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerConfigsService.ListGameServerConfigs"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.CreateGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.DeleteGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.FetchDeploymentState"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.GetGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.GetGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.ListGameServerDeployments"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.UpdateGameServerDeployment"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.GameServerDeploymentsService.UpdateGameServerDeploymentRollout"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.RealmsService.CreateRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.RealmsService.DeleteRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.RealmsService.GetRealm"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.RealmsService.ListRealms"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.RealmsService.PreviewRealmUpdate"
        },
        {
          "methodName": "google.cloud.gaming.v1dev.RealmsService.UpdateRealm"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "gkeconnect.googleapis.com",
      "displayName": "Google Kubernetes Engine (GKE)",
      "methods": [
        {
          "methodName": "google.cloud.gkeconnect.v1.EgressService.Egress"
        },
        {
          "methodName": "google.cloud.gkeconnect.v1beta1.EgressService.Egress"
        }
      ]
    },
    {
      "serviceName": "gkehub.googleapis.com",
      "methods": [
        {
          "methodName": "SetIamPolicy"
        },
        {
          "methodName": "google.cloud.gkehub.v1.GkeHub.CreateMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1.GkeHub.DeleteMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1.GkeHub.GenerateConnectManifest"
        },
        {
          "methodName": "google.cloud.gkehub.v1.GkeHub.GetMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1.GkeHub.ListMemberships"
        },
        {
          "methodName": "google.cloud.gkehub.v1.GkeHub.UpdateMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.CreateMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.DeleteMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.GenerateConnectManifest"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.GenerateExclusivityManifest"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.GetMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.ListMemberships"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.UpdateMembership"
        },
        {
          "methodName": "google.cloud.gkehub.v1beta1.GkeHubMembershipService.ValidateExclusivity"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        }
      ]
    },
    {
      "serviceName": "healthcare.googleapis.com",
      "displayName": "Cloud Healthcare",
      "methods": [
        {
          "methodName": "google.cloud.healthcare.v1.dataset.DatasetService.CreateDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dataset.DatasetService.DeidentifyDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dataset.DatasetService.DeleteDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dataset.DatasetService.GetDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dataset.DatasetService.ListDatasets"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dataset.DatasetService.UpdateDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1.deidentify.DeidentifyService.DeidentifyDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.deidentify.DeidentifyService.DeidentifyFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.CreateDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.DeleteDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.ExportDicomData"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.GetDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.ImportDicomData"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.ListDicomStores"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicom.DicomService.UpdateDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.DeleteInstance"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.DeleteSeries"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.DeleteStudy"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveFrames"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveInstance"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveInstanceMetadata"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveRenderedFrames"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveRenderedInstance"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveSeries"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveSeriesMetadata"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveStudy"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.RetrieveStudyMetadata"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.SearchForInstances"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.SearchForSeries"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.SearchForStudies"
        },
        {
          "methodName": "google.cloud.healthcare.v1.dicomweb.DicomWebService.StoreInstances"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.CreateFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.DeleteFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.GetFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.ListFhirStores"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.FhirStoreService.UpdateFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.CreateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.DeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.DeleteResourceVersions"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.ExecuteBundle"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.GetCapabilityStatement"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.GetPatientEverything"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.GetResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.GetResourceVersion"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.ListResourceVersions"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.PatchResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.SearchResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.rest.FhirService.UpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirGRPCService.CreateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirGRPCService.DeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirGRPCService.GetResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirGRPCService.UpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.CreateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.DeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.ExecuteBundle"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.GetPatientEverything"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.GetResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.GetResourceVersion"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.SearchResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhir.stu3.grpc.FhirService.UpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhirstore.FhirStoreService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1.fhirstore.FhirStoreService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.CreateHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.CreateMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.DeleteHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.DeleteMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.GetHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.GetMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.IngestMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.ListHl7V2Stores"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.ListMessages"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.UpdateHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1.hl7v2.Hl7V2Service.UpdateMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.CreateAnnotation"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.CreateAnnotationStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.DeleteAnnotation"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.DeleteAnnotationStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.EvaluateAnnotationStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.ExportAnnotations"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.GetAnnotation"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.GetAnnotationStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.ImportAnnotations"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.ListAnnotationStores"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.ListAnnotations"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.UpdateAnnotation"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.annotation.AnnotationService.UpdateAnnotationStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.CheckDataAccess"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.CreateAttributeDefinition"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.CreateConsent"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.CreateConsentArtifact"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.CreateConsentStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.CreateUserDataMapping"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.DeleteAttributeDefinition"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.DeleteConsent"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.DeleteConsentArtifact"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.DeleteConsentRevision"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.DeleteConsentStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.DeleteUserDataMapping"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.EvaluateUserConsents"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.GetAttributeDefinition"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.GetConsent"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.GetConsentArtifact"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.GetConsentStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.GetUserDataMapping"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.ListAttributeDefinitions"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.ListConsentArtifacts"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.ListConsentRevisions"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.ListConsentStores"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.ListConsents"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.ListUserDataMappings"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.QueryAccessibleData"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.RevokeConsent"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.UpdateAttributeDefinition"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.UpdateConsent"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.UpdateConsentStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.consent.ConsentService.UpdateUserDataMapping"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dataset.DatasetService.CreateDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dataset.DatasetService.DeidentifyDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dataset.DatasetService.DeleteDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dataset.DatasetService.GetDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dataset.DatasetService.ListDatasets"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dataset.DatasetService.UpdateDataset"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.deidentify.DeidentifyService.DeidentifyDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.deidentify.DeidentifyService.DeidentifyFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.CreateDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.DeleteDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.ExportDicomData"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.GetDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.ImportDicomData"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.ListDicomStores"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicom.DicomService.UpdateDicomStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.DeleteInstance"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.DeleteSeries"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.DeleteStudy"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveFrames"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveInstance"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveInstanceMetadata"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveRenderedFrames"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveRenderedInstance"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveSeries"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveSeriesMetadata"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveStudy"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.RetrieveStudyMetadata"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.SearchForInstances"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.SearchForSeries"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.SearchForStudies"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.dicomweb.DicomWebService.StoreInstances"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.CreateFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.DeleteFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.GetFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.ListFhirStores"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.FhirStoreService.UpdateFhirStore"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ConceptMapSearchTranslate"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ConceptMapTranslate"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ConditionalDeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ConditionalPatchResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ConditionalUpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.CreateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.DeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.DeleteResourceVersions"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ExecuteBundle"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.GetCapabilityStatement"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.GetLastNObservations"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.GetPatientEverything"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.GetResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.GetResourceVersion"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.ListResourceVersions"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.PatchResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.SearchResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.rest.FhirService.UpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirGRPCService.CreateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirGRPCService.DeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirGRPCService.GetResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirGRPCService.UpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ConditionalDeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ConditionalPatchResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ConditionalUpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.CreateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.DeleteResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.DeleteResourceVersions"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ExecuteBundle"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.GetCapabilityStatement"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.GetLastNObservations"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.GetPatientEverything"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.GetResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.GetResourceVersion"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.ListResourceVersions"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.PatchResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.SearchResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhir.stu3.grpc.FhirService.UpdateResource"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhirgrpc.FhirGRPCService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhirgrpc.FhirGRPCService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhirstore.FhirStoreService.ExportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.fhirstore.FhirStoreService.ImportResources"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.CreateHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.CreateMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.DeleteHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.DeleteMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.ExportMessages"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.GetHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.GetMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.ImportMessages"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.IngestMessage"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.ListHl7V2Stores"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.ListMessages"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.UpdateHl7V2Store"
        },
        {
          "methodName": "google.cloud.healthcare.v1beta1.hl7v2.Hl7V2Service.UpdateMessage"
        },
        {
          "methodName": "google.cloud.location.Locations.GetLocation"
        },
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.GetIamPolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        }
      ]
    },
    {
      "serviceName": "iam.googleapis.com",
      "displayName": "Cloud IAM",
      "methods": [
        {
          "methodName": "google.iam.admin.v1.CreateRole"
        },
        {
          "methodName": "google.iam.admin.v1.CreateServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.CreateServiceAccountKey"
        },
        {
          "methodName": "google.iam.admin.v1.DeleteRole"
        },
        {
          "methodName": "google.iam.admin.v1.DeleteServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.DeleteServiceAccountKey"
        },
        {
          "methodName": "google.iam.admin.v1.DisableServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.EnableServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.GetEffectivePolicy"
        },
        {
          "methodName": "google.iam.admin.v1.GetIAMPolicy"
        },
        {
          "methodName": "google.iam.admin.v1.GetPolicyDetails"
        },
        {
          "methodName": "google.iam.admin.v1.GetRole"
        },
        {
          "methodName": "google.iam.admin.v1.GetServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.GetServiceAccountKey"
        },
        {
          "methodName": "google.iam.admin.v1.ListRoles"
        },
        {
          "methodName": "google.iam.admin.v1.ListServiceAccountKeys"
        },
        {
          "methodName": "google.iam.admin.v1.ListServiceAccounts"
        },
        {
          "methodName": "google.iam.admin.v1.PatchServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.QueryGrantableRoles"
        },
        {
          "methodName": "google.iam.admin.v1.SetIAMPolicy"
        },
        {
          "methodName": "google.iam.admin.v1.SignBlob"
        },
        {
          "methodName": "google.iam.admin.v1.SignJwt"
        },
        {
          "methodName": "google.iam.admin.v1.TestIAMPermissions"
        },
        {
          "methodName": "google.iam.admin.v1.UndeleteRole"
        },
        {
          "methodName": "google.iam.admin.v1.UndeleteServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.UpdateRole"
        },
        {
          "methodName": "google.iam.admin.v1.UpdateServiceAccount"
        },
        {
          "methodName": "google.iam.admin.v1.UploadServiceAccountKey"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.CreateWorkloadIdentityPool"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.CreateWorkloadIdentityPoolProvider"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.DeleteWorkloadIdentityPool"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.DeleteWorkloadIdentityPoolProvider"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.GetWorkloadIdentityPool"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.GetWorkloadIdentityPoolProvider"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.ListWorkloadIdentityPoolProviders"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.ListWorkloadIdentityPools"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.UndeleteWorkloadIdentityPool"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.UndeleteWorkloadIdentityPoolProvider"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.UpdateWorkloadIdentityPool"
        },
        {
          "methodName": "google.iam.v1beta.WorkloadIdentityPools.UpdateWorkloadIdentityPoolProvider"
        }
      ]
    },
    {
      "serviceName": "iamcredentials.googleapis.com",
      "displayName": "Cloud IAM Service Account Credentials",
      "methods": [
        {
          "methodName": "GenerateAccessToken"
        },
        {
          "methodName": "GenerateIdToken"
        },
        {
          "methodName": "SignBlob"
        },
        {
          "methodName": "SignJwt"
        }
      ]
    },
    {
      "serviceName": "iap.googleapis.com",
      "displayName": "Identity-Aware Proxy (IAP)",
      "methods": [
        {
          "methodName": "AuthorizeUser"
        },
        {
          "methodName": "google.cloud.iap.v1.IdentityAwareProxyAdminService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.iap.v1.IdentityAwareProxyAdminService.GetIapSettings"
        },
        {
          "methodName": "google.cloud.iap.v1.IdentityAwareProxyAdminService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.iap.v1.IdentityAwareProxyAdminService.UpdateIapSettings"
        },
        {
          "methodName": "google.cloud.iap.v1beta1.IdentityAwareProxyAdminV1Beta1.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.iap.v1beta1.IdentityAwareProxyAdminV1Beta1.SetIamPolicy"
        }
      ]
    },
    {
      "serviceName": "identitytoolkit.googleapis.com",
      "displayName": "Identity Toolkit",
      "methods": [
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.CreateConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.CreateDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.CreateInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.CreateOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.DeleteDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.DeleteInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.DeleteOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.EnableIdentityPlatform"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.GetConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.GetDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.GetInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.GetOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.ListDefaultSupportedIdpConfigs"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.ListInboundSamlConfigs"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.ListOAuthIdpConfigs"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.UpdateConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.UpdateDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.UpdateInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.UpdateOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.ProjectConfigService.VerifyDomain"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.TenantManagementService.CreateTenant"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.TenantManagementService.DeleteTenant"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.TenantManagementService.GetTenant"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.TenantManagementService.ListTenants"
        },
        {
          "methodName": "google.cloud.identitytoolkit.admin.v2.TenantManagementService.UpdateTenant"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.BatchDeleteAccounts"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.DeleteAccount"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.DownloadAccount"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.GetAccountInfo"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.GetOobCode"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.QueryUserInfo"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.SetAccountInfo"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AccountManagementService.UploadAccount"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.AuthenticationService.SignUp"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v1.SessionManagementService.CreateSessionCookie"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.CreateDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.CreateInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.CreateOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.DeleteDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.DeleteInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.DeleteOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.GetConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.GetDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.GetOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.ListDefaultSupportedIdpConfigs"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.ListInboundSamlConfigs"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.ListOAuthIdpConfigs"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.UpdateConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.UpdateDefaultSupportedIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.UpdateInboundSamlConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.ProjectConfigService.UpdateOAuthIdpConfig"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.TenantManagementService.CreateTenant"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.TenantManagementService.DeleteTenant"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.TenantManagementService.ListTenants"
        },
        {
          "methodName": "google.cloud.identitytoolkit.v2beta1.TenantManagementService.UpdateTenant"
        }
      ]
    },
    {
      "serviceName": "industrialadaptivecontrols.googleapis.com",
      "methods": [
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "lifesciences.googleapis.com",
      "displayName": "Cloud Life Sciences",
      "methods": [
        {
          "methodName": "google.cloud.lifesciences.v2beta.WorkflowsServiceV2Beta.RunPipeline"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        }
      ]
    },
    {
      "serviceName": "logging.googleapis.com",
      "displayName": "Cloud Logging",
      "methods": [
        {
          "methodName": "google.logging.v2.BillingService.GetUsageByResourceType"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.CreateBucket"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.CreateExclusion"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.CreateSink"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.CreateView"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.DeleteBucket"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.DeleteExclusion"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.DeleteSink"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.GetBucket"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.GetExclusion"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.GetSink"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.ListBuckets"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.ListExclusions"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.ListSinks"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.UndeleteBucket"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.UpdateBucket"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.UpdateExclusion"
        },
        {
          "methodName": "google.logging.v2.ConfigServiceV2.UpdateSink"
        },
        {
          "methodName": "google.logging.v2.Locations.ListLocations"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.AggregateLogs"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.DeleteLog"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.ListLogEntries"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.ListLogs"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.ListResourceKeys"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.ListResourceValues"
        },
        {
          "methodName": "google.logging.v2.LoggingServiceV2.ReadLogEntriesLegacy"
        },
        {
          "methodName": "google.logging.v2.MetricsServiceV2.CreateLogMetric"
        },
        {
          "methodName": "google.logging.v2.MetricsServiceV2.DeleteLogMetric"
        },
        {
          "methodName": "google.logging.v2.MetricsServiceV2.GetLogMetric"
        },
        {
          "methodName": "google.logging.v2.MetricsServiceV2.ListLogMetrics"
        },
        {
          "methodName": "google.logging.v2.MetricsServiceV2.UpdateLogMetric"
        }
      ]
    },
    {
      "serviceName": "managedidentities.googleapis.com",
      "displayName": "Cloud Managed Microsoft Active Directory",
      "methods": [
        {
          "methodName": "GetIamPolicy"
        },
        {
          "methodName": "SetIamPolicy"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.AttachTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.CreateMicrosoftAdDomain"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.DeleteDomain"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.DetachTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.GetDomain"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.ListDomains"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.ReconfigureTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.ResetAdminPassword"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.UpdateDomain"
        },
        {
          "methodName": "google.cloud.managedidentities.v1.ManagedIdentitiesService.ValidateTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.AttachTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.CreateMicrosoftAdDomain"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.DeleteDomain"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.DetachTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.ReconfigureTrust"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.ResetAdminPassword"
        },
        {
          "methodName": "google.cloud.managedidentities.v1beta1.ManagedIdentitiesService.UpdateDomain"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "memcache.googleapis.com",
      "displayName": "Cloud Memcache",
      "methods": [
        {
          "methodName": "google.cloud.memcache.v1.CloudMemcache.ApplyParameters"
        },
        {
          "methodName": "google.cloud.memcache.v1.CloudMemcache.CreateInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1.CloudMemcache.DeleteInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1.CloudMemcache.UpdateInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1.CloudMemcache.UpdateParameters"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.ApplyParameters"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.CreateInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.DeleteInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.GetInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.ListInstances"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.UpdateInstance"
        },
        {
          "methodName": "google.cloud.memcache.v1beta2.CloudMemcache.UpdateParameters"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "meshca.googleapis.com",
      "displayName": "Mesh certificate authority",
      "methods": [
        {
          "methodName": "google.security.meshca.v1.MeshCertificateService.CreateCertificate"
        },
        {
          "methodName": "google.security.meshca.v1beta1.MeshCertificateService.CreateCertificate"
        }
      ]
    },
    {
      "serviceName": "metastore.googleapis.com",
      "displayName": "Dataproc Metastore",
      "methods": [
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "ml.googleapis.com",
      "displayName": "Cloud Machine Learning Engine",
      "methods": [
        {
          "methodName": "google.cloud.ml.v1.JobService.CancelJob"
        },
        {
          "methodName": "google.cloud.ml.v1.JobService.CreateJob"
        },
        {
          "methodName": "google.cloud.ml.v1.JobService.GetJob"
        },
        {
          "methodName": "google.cloud.ml.v1.JobService.ListJobs"
        },
        {
          "methodName": "google.cloud.ml.v1.LocationService.ListLocations"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.CreateModel"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.CreateVersion"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.DeleteModel"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.DeleteVersion"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.GetModel"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.GetVersion"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.ListModels"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.ListVersions"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.SetDefaultVersion"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.UpdateModel"
        },
        {
          "methodName": "google.cloud.ml.v1.ModelService.UpdateVersion"
        },
        {
          "methodName": "google.cloud.ml.v1.ProjectManagementService.GetConfig"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.AddTrialMeasurement"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.CompleteTrial"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.CreateStudy"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.CreateTrial"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.DeleteStudy"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.DeleteTrial"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.GetStudy"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.GetTrial"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.ListStudies"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.ListTrials"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.StopTrial"
        },
        {
          "methodName": "google.cloud.ml.v1.StudyService.SuggestTrials"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.GetIamPolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "monitoring.googleapis.com",
      "displayName": "Cloud Monitoring",
      "methods": [
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.CreateDashboard"
        },
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.DeleteDashboard"
        },
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.GetDashboard"
        },
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.HighAvailabilityGetDashboard"
        },
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.HighAvailabilityListDashboards"
        },
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.ListDashboards"
        },
        {
          "methodName": "google.monitoring.dashboard.v1.DashboardsService.UpdateDashboard"
        },
        {
          "methodName": "google.monitoring.v3.AgentTranslationService.CreateCollectdTimeSeries"
        },
        {
          "methodName": "google.monitoring.v3.AlertPolicyService.CreateAlertPolicy"
        },
        {
          "methodName": "google.monitoring.v3.AlertPolicyService.DeleteAlertPolicy"
        },
        {
          "methodName": "google.monitoring.v3.AlertPolicyService.GetAlertPolicy"
        },
        {
          "methodName": "google.monitoring.v3.AlertPolicyService.ListAlertPolicies"
        },
        {
          "methodName": "google.monitoring.v3.AlertPolicyService.UpdateAlertPolicy"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.CreateGroup"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.DeleteGroup"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.GetGroup"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.ListGroupMembers"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.ListGroups"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.ListPreviewGroupMembers"
        },
        {
          "methodName": "google.monitoring.v3.GroupService.UpdateGroup"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.CreateMetricDescriptor"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.CreateTimeSeries"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.DebugListTimeSeries"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.DeleteMetricDescriptor"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.GetMetricDescriptor"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.ListMetricDescriptors"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.ListMetrics"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.ListTimeSeries"
        },
        {
          "methodName": "google.monitoring.v3.MetricService.QueryActiveTimeSeries"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.CreateNotificationChannel"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.DeleteNotificationChannel"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.GetNotificationChannel"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.ListNotificationChannels"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.SendNotificationChannelVerificationCode"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.TestNotificationChannel"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.UpdateNotificationChannel"
        },
        {
          "methodName": "google.monitoring.v3.NotificationChannelService.VerifyNotificationChannel"
        },
        {
          "methodName": "google.monitoring.v3.QueryService.AnnotateQuery"
        },
        {
          "methodName": "google.monitoring.v3.QueryService.ConvertTimeSeriesQuery"
        },
        {
          "methodName": "google.monitoring.v3.QueryService.ListQueryNotationCompletions"
        },
        {
          "methodName": "google.monitoring.v3.QueryService.QueryTimeSeries"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.CreateService"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.CreateServiceLevelObjective"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.DeleteService"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.DeleteServiceLevelObjective"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.GetService"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.GetServiceLevelObjective"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.ListServiceLevelObjectives"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.ListServices"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.UpdateService"
        },
        {
          "methodName": "google.monitoring.v3.ServiceMonitoringService.UpdateServiceLevelObjective"
        },
        {
          "methodName": "google.monitoring.v3.TimeSeriesFilterService.ParseTimeSeriesFilter"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.CreateUptimeCheckConfig"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.DeleteUptimeCheckConfig"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.GetUptimeCheckConfig"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.ListPrivateCheckers"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.ListUptimeCheckConfigs"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.UpdateUptimeCheckConfig"
        },
        {
          "methodName": "google.monitoring.v3.UptimeCheckService.ValidateUptimeCheckConfig"
        }
      ]
    },
    {
      "serviceName": "networkmanagement.googleapis.com",
      "displayName": "Network Management",
      "methods": [
        {
          "methodName": "google.cloud.networkmanagement.v1.ReachabilityService.CreateConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1.ReachabilityService.DeleteConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1.ReachabilityService.GetConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1.ReachabilityService.ListConnectivityTests"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1.ReachabilityService.RerunConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1.ReachabilityService.UpdateConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1beta1.ReachabilityService.CreateConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1beta1.ReachabilityService.DeleteConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1beta1.ReachabilityService.GetConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1beta1.ReachabilityService.ListConnectivityTests"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1beta1.ReachabilityService.RerunConnectivityTest"
        },
        {
          "methodName": "google.cloud.networkmanagement.v1beta1.ReachabilityService.UpdateConnectivityTest"
        }
      ]
    },
    {
      "serviceName": "notebooks.googleapis.com",
      "displayName": "AI Platform Notebooks",
      "methods": [
        {
          "methodName": "GetIamPolicy"
        },
        {
          "methodName": "SetIamPolicy"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.CreateEnvironment"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.CreateInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.DeleteInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.IsInstanceUpgradeable"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.RegisterInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.ResetInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.SetInstanceAccelerator"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.SetInstanceMachineType"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.StartInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.StopInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1.NotebookService.UpgradeInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.CreateEnvironment"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.CreateInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.DeleteEnvironment"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.DeleteInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.GetEnvironment"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.GetInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.IsInstanceUpgradeable"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.ListEnvironments"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.ListInstances"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.RegisterInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.ResetInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.SetInstanceAccelerator"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.SetInstanceLabels"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.SetInstanceMachineType"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.StartInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.StopInstance"
        },
        {
          "methodName": "google.cloud.notebooks.v1beta1.NotebookService.UpgradeInstance"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        }
      ]
    },
    {
      "serviceName": "osconfig.googleapis.com",
      "displayName": "Cloud OS Config",
      "methods": [
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.CancelPatchJob"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.CreatePatchDeployment"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.DeletePatchDeployment"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.ExecutePatchJob"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.GetPatchDeployment"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.GetPatchJob"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.ListPatchDeployments"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.ListPatchJobInstanceDetails"
        },
        {
          "methodName": "google.cloud.osconfig.v1.OsConfigService.ListPatchJobs"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.CreateGuestPolicy"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.CreatePatchDeployment"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.DeleteGuestPolicy"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.DeletePatchDeployment"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.ExecutePatchJob"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.GetGuestPolicy"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.GetPatchDeployment"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.GetPatchJob"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.ListGuestPolicies"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.ListPatchDeployments"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.ListPatchJobInstanceDetails"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.ListPatchJobs"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.LookupEffectiveGuestPolicy"
        },
        {
          "methodName": "google.cloud.osconfig.v1beta.OsConfigService.UpdateGuestPolicy"
        }
      ]
    },
    {
      "serviceName": "oslogin.googleapis.com",
      "displayName": "Cloud OS Login",
      "methods": [
        {
          "methodName": "google.cloud.oslogin.v1.OsLoginService.ContinueSession"
        },
        {
          "methodName": "google.cloud.oslogin.v1.OsLoginService.StartSession"
        },
        {
          "methodName": "google.cloud.oslogin.v1beta.OsLoginService.ContinueSession"
        },
        {
          "methodName": "google.cloud.oslogin.v1beta.OsLoginService.StartSession"
        }
      ]
    },
    {
      "serviceName": "pubsub.googleapis.com",
      "displayName": "Cloud Pub/Sub",
      "methods": [
        {
          "methodName": "google.iam.v1.IAMPolicy.GetIamPolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.CreateTopic"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.DeleteTopic"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.DetachSubscription"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.GetTopic"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.ListTopicSnapshots"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.ListTopicSubscriptions"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.ListTopics"
        },
        {
          "methodName": "google.pubsub.v1.Publisher.UpdateTopic"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.CreateSnapshot"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.CreateSubscription"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.DeleteSnapshot"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.DeleteSubscription"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.GetSnapshot"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.GetSubscription"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.ListSnapshots"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.ListSubscriptions"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.ModifyPushConfig"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.Seek"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.UpdateSnapshot"
        },
        {
          "methodName": "google.pubsub.v1.Subscriber.UpdateSubscription"
        },
        {
          "methodName": "google.pubsub.v1beta2.Publisher.CreateTopic"
        },
        {
          "methodName": "google.pubsub.v1beta2.Publisher.DeleteTopic"
        },
        {
          "methodName": "google.pubsub.v1beta2.Publisher.ListTopics"
        },
        {
          "methodName": "google.pubsub.v1beta2.Subscriber.CreateSubscription"
        },
        {
          "methodName": "google.pubsub.v1beta2.Subscriber.DeleteSubscription"
        },
        {
          "methodName": "google.pubsub.v1beta2.Subscriber.GetSubscription"
        },
        {
          "methodName": "google.pubsub.v1beta2.Subscriber.ModifyPushConfig"
        }
      ]
    },
    {
      "serviceName": "recaptchaenterprise.googleapis.com",
      "displayName": "reCAPTCHA Enterprise",
      "methods": [
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.AnnotateAssessment"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.CreateAssessment"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.CreateKey"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.DeleteKey"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.GetKey"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.GetMetrics"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.ListKeys"
        },
        {
          "methodName": "google.cloud.recaptchaenterprise.v1.RecaptchaEnterpriseService.UpdateKey"
        }
      ]
    },
    {
      "serviceName": "recommendationengine.googleapis.com",
      "displayName": "Recommendations AI",
      "methods": [
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.CreateCatalogItem"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.DeleteCatalogItem"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.GetCatalogItem"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.ImportCatalogItems"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.ListCatalogItems"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.ListCatalogs"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.UpdateCatalog"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.CatalogService.UpdateCatalogItem"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.PredictionApiKeyRegistry.CreatePredictionApiKeyRegistration"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.PredictionApiKeyRegistry.DeletePredictionApiKeyRegistration"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.PredictionApiKeyRegistry.ListPredictionApiKeyRegistrations"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.PredictionService.Predict"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.UserEventService.ImportUserEvents"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.UserEventService.ListUserEvents"
        },
        {
          "methodName": "google.cloud.recommendationengine.v1beta1.UserEventService.PurgeUserEvents"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "redis.googleapis.com",
      "displayName": "Cloud Memorystore for Redis",
      "methods": [
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.CreateInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.DeleteInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.ExportInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.FailoverInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.GetInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.GetInstanceAuthString"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.ImportInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.ListInstances"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.UpdateInstance"
        },
        {
          "methodName": "google.cloud.redis.v1.CloudRedis.UpgradeInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.CreateInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.DeleteInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.ExportInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.FailoverInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.GetInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.ImportInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.ListInstances"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.UpdateInstance"
        },
        {
          "methodName": "google.cloud.redis.v1beta1.CloudRedis.UpgradeInstance"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        }
      ]
    },
    {
      "serviceName": "remotebuildexecution.googleapis.com",
      "displayName": "Remote Build Execution",
      "methods": [
        {
          "methodName": "build.bazel.remote.execution.v2.ActionCache.GetActionResult"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.ActionCache.UpdateActionResult"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.ContentAddressableStorage.BatchReadBlobs"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.ContentAddressableStorage.BatchUpdateBlobs"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.ContentAddressableStorage.FindMissingBlobs"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.ContentAddressableStorage.GetTree"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.Execution.Execute"
        },
        {
          "methodName": "build.bazel.remote.execution.v2.Execution.WaitExecution"
        },
        {
          "methodName": "google.bytestream.ByteStream.QueryWriteStatus"
        },
        {
          "methodName": "google.bytestream.ByteStream.Read"
        },
        {
          "methodName": "google.bytestream.ByteStream.Write"
        },
        {
          "methodName": "google.devtools.remoteworkers.v1test2.Bots.CreateBotSession"
        },
        {
          "methodName": "google.devtools.remoteworkers.v1test2.Bots.UpdateBotSession"
        },
        {
          "methodName": "google.devtools.remoteworkers.v1test2.Reservations.CancelReservation"
        },
        {
          "methodName": "google.devtools.remoteworkers.v1test2.Reservations.CreateReservation"
        },
        {
          "methodName": "google.devtools.remoteworkers.v1test2.Reservations.GetReservation"
        }
      ]
    },
    {
      "serviceName": "run.googleapis.com",
      "displayName": "Cloud Run",
      "methods": [
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.cloud.run.v1.AuthorizedDomains.ListAuthorizedDomains"
        },
        {
          "methodName": "google.cloud.run.v1.Configurations.CreateConfiguration"
        },
        {
          "methodName": "google.cloud.run.v1.Configurations.DeleteConfiguration"
        },
        {
          "methodName": "google.cloud.run.v1.Configurations.GetConfiguration"
        },
        {
          "methodName": "google.cloud.run.v1.Configurations.ListConfigurations"
        },
        {
          "methodName": "google.cloud.run.v1.DomainMappings.CreateDomainMapping"
        },
        {
          "methodName": "google.cloud.run.v1.DomainMappings.DeleteDomainMapping"
        },
        {
          "methodName": "google.cloud.run.v1.DomainMappings.GetDomainMapping"
        },
        {
          "methodName": "google.cloud.run.v1.DomainMappings.ListDomainMappings"
        },
        {
          "methodName": "google.cloud.run.v1.Revisions.DeleteRevision"
        },
        {
          "methodName": "google.cloud.run.v1.Revisions.GetRevision"
        },
        {
          "methodName": "google.cloud.run.v1.Revisions.ListRevisions"
        },
        {
          "methodName": "google.cloud.run.v1.Routes.CreateRoute"
        },
        {
          "methodName": "google.cloud.run.v1.Routes.DeleteRoute"
        },
        {
          "methodName": "google.cloud.run.v1.Routes.GetRoute"
        },
        {
          "methodName": "google.cloud.run.v1.Routes.ListRoutes"
        },
        {
          "methodName": "google.cloud.run.v1.Services.CreateService"
        },
        {
          "methodName": "google.cloud.run.v1.Services.DeleteService"
        },
        {
          "methodName": "google.cloud.run.v1.Services.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.run.v1.Services.GetService"
        },
        {
          "methodName": "google.cloud.run.v1.Services.ListServices"
        },
        {
          "methodName": "google.cloud.run.v1.Services.ReplaceService"
        },
        {
          "methodName": "google.cloud.run.v1.Services.SetIamPolicy"
        },
        {
          "methodName": "k8s.io.apiextensions_apiserver.pkg.apis.apiextensions.v1beta1.CustomResourceDefinitions.ListCustomResourceDefinitions"
        }
      ]
    },
    {
      "serviceName": "secretmanager.googleapis.com",
      "displayName": "Secret Manager",
      "methods": [
        {
          "methodName": "google.cloud.location.Locations.GetLocation"
        },
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.AccessSecretVersion"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.AddSecretVersion"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.CreateSecret"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.DeleteSecret"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.DestroySecretVersion"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.DisableSecretVersion"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.EnableSecretVersion"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.GetSecret"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.GetSecretVersion"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.ListSecretVersions"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.ListSecrets"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.secretmanager.v1.SecretManagerService.UpdateSecret"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.AccessSecretVersion"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.AddSecretVersion"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.CreateSecret"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.DeleteSecret"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.DestroySecretVersion"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.DisableSecretVersion"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.EnableSecretVersion"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.GetSecret"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.GetSecretVersion"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.ListSecretVersions"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.ListSecrets"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.secrets.v1beta1.SecretManagerService.UpdateSecret"
        }
      ]
    },
    {
      "serviceName": "securitycenter.googleapis.com",
      "methods": [
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.CalculateContainerThreatDetectionSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.CalculateEventThreatDetectionSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.CalculateSecurityHealthAnalyticsSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.CalculateWebSecurityScannerSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.GetContainerThreatDetectionSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.GetEventThreatDetectionSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.GetSecurityHealthAnalyticsSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.GetWebSecurityScannerSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.UpdateContainerThreatDetectionSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.UpdateEventThreatDetectionSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.UpdateSecurityHealthAnalyticsSettings"
        },
        {
          "methodName": "google.cloud.securitycenter.settings.v1beta2.Settings.UpdateWebSecurityScannerSettings"
        }
      ]
    },
    {
      "serviceName": "serviceconsumermanagement.googleapis.com",
      "displayName": "Service Consumer Management",
      "methods": [
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.AddVisibilityLabels"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.CreateProducerOverride"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.DeleteProducerOverride"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.DisableConsumer"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.EnableConsumer"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.ImportProducerOverrides"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.RemoveVisibilityLabels"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.UpdateProducerOverride"
        },
        {
          "methodName": "google.api.serviceconsumermanagement.v1beta1.ServiceConsumerManager.UpdateProperty"
        }
      ]
    },
    {
      "serviceName": "servicedirectory.googleapis.com",
      "displayName": "Service Directory",
      "methods": [
        {
          "methodName": "google.cloud.location.Locations.GetLocation"
        },
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.LookupService.ResolveService"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.CreateEndpoint"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.CreateNamespace"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.CreateService"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.DeleteEndpoint"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.DeleteNamespace"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.DeleteService"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.GetEndpoint"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.GetIamPolicy"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.GetNamespace"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.GetService"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.ListEndpoints"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.ListNamespaces"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.ListServices"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.SetIamPolicy"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.UpdateEndpoint"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.UpdateNamespace"
        },
        {
          "methodName": "google.cloud.servicedirectory.v1beta1.RegistrationService.UpdateService"
        }
      ]
    },
    {
      "serviceName": "servicemanagement.googleapis.com",
      "displayName": "Service Management",
      "methods": [
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.ActivateServices"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.CreateService"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.CreateServiceConfig"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.DeactivateServices"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.DeleteService"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.DisableService"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.EnableService"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.SubmitConfigSource"
        },
        {
          "methodName": "google.api.servicemanagement.v1.ServiceManager.UndeleteService"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.GetIamPolicy"
        },
        {
          "methodName": "google.iam.v1.IAMPolicy.SetIamPolicy"
        }
      ]
    },
    {
      "serviceName": "serviceusage.googleapis.com",
      "displayName": "Service Usage",
      "methods": [
        {
          "methodName": "google.api.serviceusage.v1.ServiceUsage.BatchEnableServices"
        },
        {
          "methodName": "google.api.serviceusage.v1.ServiceUsage.DisableService"
        },
        {
          "methodName": "google.api.serviceusage.v1.ServiceUsage.EnableService"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.BatchEnableServices"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.CreateConsumerOverride"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.DeleteConsumerOverride"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.DisableService"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.EnableService"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.ImportAdminOverrides"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.ImportConsumerOverrides"
        },
        {
          "methodName": "google.api.serviceusage.v1beta1.ServiceUsage.UpdateConsumerOverride"
        }
      ]
    },
    {
      "serviceName": "sourcerepo.googleapis.com",
      "displayName": "Cloud Source Repositories",
      "methods": [
        {
          "methodName": "google.devtools.sourcerepo.v1.Browser.Access"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.GitProtocol.LsRemote"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.GitProtocol.ReceivePack"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.GitProtocol.UploadPack"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.CreateRepo"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.DeleteRepo"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.GetIamPolicy"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.GetProjectConfig"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.GetRepo"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.ListRepos"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.SetIamPolicy"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.UpdateProjectConfig"
        },
        {
          "methodName": "google.devtools.sourcerepo.v1.SourceRepo.UpdateRepo"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        }
      ]
    },
    {
      "serviceName": "spanner.googleapis.com",
      "displayName": "Cloud Spanner",
      "methods": [
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.ListOperations"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.CreateBackup"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.CreateDatabase"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.DeleteBackup"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.DropDatabase"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.GetBackup"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.GetDatabase"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.GetDatabaseDdl"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.GetIamPolicy"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.ListBackupOperations"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.ListBackups"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.ListDatabases"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.RestoreDatabase"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.SetIamPolicy"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.TestIamPermissions"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.UpdateBackup"
        },
        {
          "methodName": "google.spanner.admin.database.v1.DatabaseAdmin.UpdateDatabaseDdl"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.CreateInstance"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.DeleteInstance"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.GetIamPolicy"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.GetInstance"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.GetInstanceConfig"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.ListInstanceConfigs"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.ListInstances"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.TestIamPermissions"
        },
        {
          "methodName": "google.spanner.admin.instance.v1.InstanceAdmin.UpdateInstance"
        },
        {
          "methodName": "google.spanner.v1.Spanner.BatchCreateSessions"
        },
        {
          "methodName": "google.spanner.v1.Spanner.BeginTransaction"
        },
        {
          "methodName": "google.spanner.v1.Spanner.Commit"
        },
        {
          "methodName": "google.spanner.v1.Spanner.CreateSession"
        },
        {
          "methodName": "google.spanner.v1.Spanner.DeleteSession"
        },
        {
          "methodName": "google.spanner.v1.Spanner.ExecuteBatchDml"
        },
        {
          "methodName": "google.spanner.v1.Spanner.ExecuteSql"
        },
        {
          "methodName": "google.spanner.v1.Spanner.ExecuteStreamingSql"
        },
        {
          "methodName": "google.spanner.v1.Spanner.GetSession"
        },
        {
          "methodName": "google.spanner.v1.Spanner.ListSessions"
        },
        {
          "methodName": "google.spanner.v1.Spanner.PartitionQuery"
        },
        {
          "methodName": "google.spanner.v1.Spanner.PartitionRead"
        },
        {
          "methodName": "google.spanner.v1.Spanner.Read"
        },
        {
          "methodName": "google.spanner.v1.Spanner.Rollback"
        },
        {
          "methodName": "google.spanner.v1.Spanner.StreamingRead"
        }
      ]
    },
    {
      "serviceName": "ssh-serialport.googleapis.com",
      "displayName": "GCE Serial Port",
      "methods": [
        {
          "methodName": "google.ssh-serialport.v1.connect"
        },
        {
          "methodName": "google.ssh-serialport.v1.disconnect"
        }
      ]
    },
    {
      "serviceName": "storage.googleapis.com",
      "displayName": "Cloud Storage",
      "methods": [
        {
          "methodName": "storage.buckets.create"
        },
        {
          "methodName": "storage.buckets.delete"
        },
        {
          "methodName": "storage.buckets.get"
        },
        {
          "methodName": "storage.buckets.list"
        },
        {
          "methodName": "storage.buckets.update"
        },
        {
          "methodName": "storage.getIamPermissions"
        },
        {
          "methodName": "storage.hmacKeys.create"
        },
        {
          "methodName": "storage.hmacKeys.delete"
        },
        {
          "methodName": "storage.hmacKeys.get"
        },
        {
          "methodName": "storage.hmacKeys.list"
        },
        {
          "methodName": "storage.hmacKeys.update"
        },
        {
          "methodName": "storage.objects.create"
        },
        {
          "methodName": "storage.objects.delete"
        },
        {
          "methodName": "storage.objects.get"
        },
        {
          "methodName": "storage.objects.list"
        },
        {
          "methodName": "storage.objects.update"
        },
        {
          "methodName": "storage.projects.getOrCreateServiceAccount"
        },
        {
          "methodName": "storage.setIamPermissions"
        }
      ]
    },
    {
      "serviceName": "sts.googleapis.com",
      "displayName": "Storage Transfer Service",
      "methods": [
        {
          "methodName": "google.identity.sts.v1beta.SecurityTokenServiceV1beta.ExchangeToken"
        }
      ]
    },
    {
      "serviceName": "tpu.googleapis.com",
      "displayName": "Cloud TPU",
      "methods": [
        {
          "methodName": "google.cloud.tpu.v1.Tpu.CreateNode"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.DeleteNode"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.GetNode"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.ListNodes"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.ReimageNode"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.ResetNode"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.StartNode"
        },
        {
          "methodName": "google.cloud.tpu.v1.Tpu.StopNode"
        }
      ]
    },
    {
      "serviceName": "translate.googleapis.com",
      "displayName": "Cloud Translation",
      "methods": [
        {
          "methodName": "google.cloud.translation.v3.TranslationService.BatchTranslateText"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.CreateGlossary"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.DeleteGlossary"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.DetectLanguage"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.GetGlossary"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.GetSupportedLanguages"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.ListGlossaries"
        },
        {
          "methodName": "google.cloud.translation.v3.TranslationService.TranslateText"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.BatchTranslateText"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.CreateGlossary"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.DeleteGlossary"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.DetectLanguage"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.GetGlossary"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.GetSupportedLanguages"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.ListGlossaries"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.TranslateDocument"
        },
        {
          "methodName": "google.cloud.translation.v3beta1.TranslationService.TranslateText"
        },
        {
          "methodName": "google.longrunning.Operations.CancelOperation"
        },
        {
          "methodName": "google.longrunning.Operations.DeleteOperation"
        },
        {
          "methodName": "google.longrunning.Operations.GetOperation"
        },
        {
          "methodName": "google.longrunning.Operations.WaitOperation"
        }
      ]
    },
    {
      "serviceName": "videointelligence.googleapis.com",
      "displayName": "Cloud Video Intelligence",
      "methods": [
        {
          "methodName": "google.cloud.videointelligence.v1.VideoIntelligenceService.AnnotateVideo"
        },
        {
          "methodName": "google.cloud.videointelligence.v1beta2.VideoIntelligenceService.AnnotateVideo"
        },
        {
          "methodName": "google.cloud.videointelligence.v1p1beta1.VideoIntelligenceService.AnnotateVideo"
        },
        {
          "methodName": "google.cloud.videointelligence.v1p2beta1.VideoIntelligenceService.AnnotateVideo"
        },
        {
          "methodName": "google.cloud.videointelligence.v1p3beta1.VideoIntelligenceService.AnnotateVideo"
        }
      ]
    },
    {
      "serviceName": "vision.googleapis.com",
      "displayName": "Cloud Vision",
      "methods": [
        {
          "methodName": "ImageAnnotator.AsyncBatchAnnotateFiles"
        },
        {
          "methodName": "ImageAnnotator.AsyncBatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1.ImageAnnotator.AsyncBatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1.ImageAnnotator.AsyncBatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1.ImageAnnotator.BatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1.ImageAnnotator.BatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.AddProductToProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.CreateProduct"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.CreateProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.CreateReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.DeleteProduct"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.DeleteProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.DeleteReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.GetProduct"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.GetProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.GetReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.ImportProductSets"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.ListProductSets"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.ListProducts"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.ListProductsInProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.ListReferenceImages"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.PurgeProducts"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.RemoveProductFromProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.UpdateProduct"
        },
        {
          "methodName": "google.cloud.vision.v1.ProductSearch.UpdateProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1p1beta1.ImageAnnotator.BatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1p2beta1.ImageAnnotator.AsyncBatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1p2beta1.ImageAnnotator.BatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ImageAnnotator.AsyncBatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ImageAnnotator.BatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ImageAnnotator.BatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.AddProductToProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.CreateProduct"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.CreateReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.DeleteProduct"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.DeleteReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.GetReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.ImportProductSets"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.ListProductSets"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.ListProductsInProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.ListReferenceImages"
        },
        {
          "methodName": "google.cloud.vision.v1p3beta1.ProductSearch.UpdateProduct"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ImageAnnotator.AsyncBatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ImageAnnotator.AsyncBatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ImageAnnotator.BatchAnnotateFiles"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ImageAnnotator.BatchAnnotateImages"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.AddProductToProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.CreateProduct"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.CreateReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.DeleteProduct"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.DeleteProductSet"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.GetReferenceImage"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.ImportProductSets"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.ListProductSets"
        },
        {
          "methodName": "google.cloud.vision.v1p4beta1.ProductSearch.ListProductsInProductSet"
        }
      ]
    },
    {
      "serviceName": "vpcaccess.googleapis.com",
      "displayName": "Serverless VPC Access",
      "methods": [
        {
          "methodName": "google.cloud.location.Locations.ListLocations"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1.VpcAccessService.CreateConnector"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1.VpcAccessService.DeleteConnector"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1.VpcAccessService.GetConnector"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1.VpcAccessService.ListConnectors"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1beta1.VpcAccessService.CreateConnector"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1beta1.VpcAccessService.DeleteConnector"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1beta1.VpcAccessService.GetConnector"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1beta1.VpcAccessService.ListConnectors"
        },
        {
          "methodName": "google.cloud.vpcaccess.v1beta1.VpcAccessService.UpdateConnector"
        }
      ]
    },
    {
      "serviceName": "websecurityscanner.googleapis.com",
      "displayName": "Web Security Scanner",
      "methods": [
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.CreateScanConfig"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.DeleteScanConfig"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.GetScanConfig"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.GetScanRun"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.ListCrawledUrls"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.ListFindingTypeStats"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.ListFindings"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.ListScanConfigs"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.ListScanRuns"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.ListStartingUrls"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.StartScanRun"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.StopScanRun"
        },
        {
          "methodName": "google.cloud.websecurityscanner.v1beta.WebSecurityScanner.UpdateScanConfig"
        }
      ]
    },
    {
      "serviceName": "workflowexecutions.googleapis.com",
      "displayName": "Workflow Executions",
      "methods": [
        {
          "methodName": "google.cloud.workflows.executions.v1beta.Executions.CancelExecution"
        },
        {
          "methodName": "google.cloud.workflows.executions.v1beta.Executions.CreateExecution"
        },
        {
          "methodName": "google.cloud.workflows.executions.v1beta.Executions.GetExecution"
        },
        {
          "methodName": "google.cloud.workflows.executions.v1beta.Executions.ListExecutions"
        }
      ]
    },
    {
      "serviceName": "workflows.googleapis.com",
      "displayName": "Workflows",
      "methods": [
        {
          "methodName": "google.cloud.workflows.v1beta.Workflows.CreateWorkflow"
        },
        {
          "methodName": "google.cloud.workflows.v1beta.Workflows.DeleteWorkflow"
        },
        {
          "methodName": "google.cloud.workflows.v1beta.Workflows.GetWorkflow"
        },
        {
          "methodName": "google.cloud.workflows.v1beta.Workflows.ListWorkflows"
        },
        {
          "methodName": "google.cloud.workflows.v1beta.Workflows.UpdateWorkflow"
        }
      ]
    }
  ]
}
