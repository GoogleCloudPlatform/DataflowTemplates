{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "gkehub:v1alpha1",
  "name": "gkehub",
  "canonicalName": "GKE Hub",
  "version": "v1alpha1",
  "revision": "0",
  "title": "GKE Hub",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "protocol": "rest",
  "rootUrl": "https://gkehub.googleapis.com/",
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://gkehub.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListFeaturesResponse": {
      "id": "ListFeaturesResponse",
      "description": "Response message for the `GkeHubDomainFeatureService.ListFeatures` method.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "The list of Features contained within the parent.",
          "type": "array",
          "items": {
            "$ref": "Feature"
          }
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListFeatures` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        }
      }
    },
    "Feature": {
      "id": "Feature",
      "description": "Feature represents the settings and status of any feature.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The unique name of this feature resource in the format: `projects\/[project_id]\/locations\/global\/features\/[feature_id]`.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "GCP labels for this feature.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Description of the feature, limited to 63 characters.",
          "type": "string"
        },
        "servicemeshFeatureSpec": {
          "$ref": "ServiceMeshFeatureSpec"
        },
        "authorizerFeatureSpec": {
          "description": "The specification for the Authorizer Feature.",
          "$ref": "AuthorizerFeatureSpec"
        },
        "multiclusteringressFeatureSpec": {
          "description": "The specification for the Ingress for Anthos feature.",
          "$ref": "MultiClusterIngressFeatureSpec"
        },
        "helloworldFeatureSpec": {
          "description": "A hello world feature to act as an example in codelab and to test our feature lifecycle code.",
          "$ref": "HelloWorldFeatureSpec"
        },
        "meteringFeatureSpec": {
          "description": "The specification for the metering feature.",
          "$ref": "MeteringFeatureSpec"
        },
        "multiclusterservicediscoveryFeatureSpec": {
          "description": "An EAP feature for GKE multi-cluster service discovery.",
          "$ref": "MultiClusterServiceDiscoveryFeatureSpec"
        },
        "configmanagementFeatureSpec": {
          "description": "Feature for Anthos Config Management.",
          "$ref": "ConfigManagementFeatureSpec"
        },
        "appdevexperienceFeatureSpec": {
          "description": "Feature for App Dev Experience.",
          "$ref": "AppDevExperienceFeatureSpec"
        },
        "cloudauditloggingFeatureSpec": {
          "description": "Feature for Anthos Cloud Audit Logging.",
          "$ref": "CloudAuditLoggingFeatureSpec"
        },
        "apigeeFeatureSpec": {
          "description": "Feature for Apigee.",
          "$ref": "ApigeeFeatureSpec"
        },
        "servicedirectoryFeatureSpec": {
          "description": "Feature for Service Directory.",
          "$ref": "ServiceDirectoryFeatureSpec"
        },
        "identityserviceFeatureSpec": {
          "description": "The specification for the Anthos Identity Service Feature.",
          "$ref": "IdentityServiceFeatureSpec"
        },
        "featureState": {
          "description": "Output only. State of the resource itself.",
          "readOnly": true,
          "$ref": "FeatureState"
        },
        "createTime": {
          "description": "Output only. Timestamp for when the Feature was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp for when the Feature was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Timestamp for when the Feature was deleted.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ServiceMeshFeatureSpec": {
      "id": "ServiceMeshFeatureSpec",
      "description": "ServiceMeshFeatureSpec contains the input for the service mesh feature.",
      "type": "object",
      "properties": {
      }
    },
    "AuthorizerFeatureSpec": {
      "id": "AuthorizerFeatureSpec",
      "description": "AuthorizerFeatureSpec contains options and specifications for the Authorizer Feature.",
      "type": "object",
      "properties": {
      }
    },
    "MultiClusterIngressFeatureSpec": {
      "id": "MultiClusterIngressFeatureSpec",
      "description": "MultiClusterIngressFeatureSpec contains the input for the MultiClusterIngress feature. This spec is a placeholder and is subject to change.",
      "type": "object",
      "properties": {
        "configMembership": {
          "description": "Fully-qualified member name which hosts the MultiClusterIngress CRD. Example member name: `projects\/foo-proj\/locations\/global\/memberships\/bar`",
          "type": "string"
        }
      }
    },
    "HelloWorldFeatureSpec": {
      "id": "HelloWorldFeatureSpec",
      "description": "HelloWorldFeatureSpec contains the input for the HelloWorld feature.",
      "type": "object",
      "properties": {
        "featureTest": {
          "description": "Message to hold fields to use in feature e2e create\/mutate testing.",
          "$ref": "FeatureTest"
        },
        "customConfig": {
          "description": "Custom config for the HelloWorld controller codelab. This should be a textpb string.",
          "type": "string"
        }
      }
    },
    "FeatureTest": {
      "id": "FeatureTest",
      "description": "Represents message used in feature e2e create\/mutate testing.",
      "type": "object",
      "properties": {
        "first": {
          "description": "Singular scaler field.",
          "type": "string"
        },
        "second": {
          "description": "Singular scaler field.",
          "type": "integer",
          "format": "int32"
        },
        "third": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "enum": [
            "BAR_UNSPECIFIED",
            "FIRST",
            "SECOND"
          ]
        },
        "fourth": {
          "description": "Singular Message fields.",
          "type": "string",
          "format": "google-duration"
        },
        "fifth": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "sixth": {
          "type": "string",
          "format": "int64"
        },
        "seventh": {
          "type": "string"
        },
        "eighth": {
          "description": "Repeated field.",
          "type": "array",
          "items": {
            "$ref": "FooBar"
          }
        },
        "ninth": {
          "description": "Map field.",
          "type": "object",
          "additionalProperties": {
            "$ref": "FooBar"
          }
        }
      }
    },
    "FooBar": {
      "id": "FooBar",
      "description": "Nested Message.",
      "type": "object",
      "properties": {
        "first": {
          "type": "string"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MeteringFeatureSpec": {
      "id": "MeteringFeatureSpec",
      "description": "An empty spec for metering feature. This is required since Feature proto requires a spec.",
      "type": "object",
      "properties": {
      }
    },
    "MultiClusterServiceDiscoveryFeatureSpec": {
      "id": "MultiClusterServiceDiscoveryFeatureSpec",
      "description": "An empty spec for multi-cluster service discovery feature. This is required since Feature proto requires a spec.",
      "type": "object",
      "properties": {
      }
    },
    "ConfigManagementFeatureSpec": {
      "id": "ConfigManagementFeatureSpec",
      "description": "Spec for Anthos Config Management (ACM).",
      "type": "object",
      "properties": {
        "membershipConfigs": {
          "description": "Map of Membership IDs to individual configs.",
          "type": "object",
          "additionalProperties": {
            "$ref": "MembershipConfig"
          }
        }
      }
    },
    "MembershipConfig": {
      "id": "MembershipConfig",
      "description": "Configuration for a single cluster. Intended to parallel the ConfigManagement CR.",
      "type": "object",
      "properties": {
        "configSync": {
          "description": "Config Sync configuration for the cluster.",
          "$ref": "ConfigSync"
        },
        "policyController": {
          "description": "Policy Controller configuration for the cluster.",
          "$ref": "PolicyController"
        },
        "binauthz": {
          "description": "Binauthz conifguration for the cluster.",
          "$ref": "BinauthzConfig"
        },
        "version": {
          "description": "Version of ACM installed.",
          "type": "string"
        }
      }
    },
    "ConfigSync": {
      "id": "ConfigSync",
      "description": "Configuration for Config Sync",
      "type": "object",
      "properties": {
        "git": {
          "description": "Git repo configuration for the cluster.",
          "$ref": "GitConfig"
        },
        "sourceFormat": {
          "description": "Specifies whether the Config Sync Repo is in \u201Chierarchical\u201D or \u201Cunstructured\u201D mode.",
          "type": "string"
        }
      }
    },
    "GitConfig": {
      "id": "GitConfig",
      "description": "Git repo configuration for a single cluster.",
      "type": "object",
      "properties": {
        "syncRepo": {
          "description": "The URL of the Git repository to use as the source of truth.",
          "type": "string"
        },
        "syncBranch": {
          "description": "The branch of the repository to sync from. Default: master.",
          "type": "string"
        },
        "policyDir": {
          "description": "The path within the Git repository that represents the top level of the repo to sync. Default: the root directory of the repository.",
          "type": "string"
        },
        "syncWaitSecs": {
          "description": "Period in seconds between consecutive syncs. Default: 15.",
          "type": "string",
          "format": "int64"
        },
        "syncRev": {
          "description": "Git revision (tag or hash) to check out. Default HEAD.",
          "type": "string"
        },
        "secretType": {
          "description": "Type of secret configured for access to the Git repo.",
          "type": "string"
        },
        "httpsProxy": {
          "description": "URL for the HTTPS proxy to be used when communicating with the Git repo.",
          "type": "string"
        }
      }
    },
    "PolicyController": {
      "id": "PolicyController",
      "description": "Configuration for Policy Controller",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Enables the installation of Policy Controller. If false, the rest of PolicyController fields take no effect.",
          "type": "boolean"
        },
        "templateLibraryInstalled": {
          "description": "Installs the default template library along with Policy Controller.",
          "type": "boolean"
        },
        "auditIntervalSeconds": {
          "description": "Sets the interval for Policy Controller Audit Scans (in seconds). When set to 0, this disables audit functionality altogether.",
          "type": "string",
          "format": "int64"
        },
        "exemptableNamespaces": {
          "description": "The set of namespaces that are excluded from Policy Controller checks. Namespaces do not need to currently exist on the cluster.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "referentialRulesEnabled": {
          "description": "Enables the ability to use Constraint Templates that reference to objects other than the object currently being evaluated.",
          "type": "boolean"
        }
      }
    },
    "BinauthzConfig": {
      "id": "BinauthzConfig",
      "description": "Configuration for Binauthz",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "Whether binauthz is enabled in this cluster.",
          "type": "boolean"
        }
      }
    },
    "AppDevExperienceFeatureSpec": {
      "id": "AppDevExperienceFeatureSpec",
      "description": "Spec for App Dev Experience Feature.",
      "type": "object",
      "properties": {
      }
    },
    "CloudAuditLoggingFeatureSpec": {
      "id": "CloudAuditLoggingFeatureSpec",
      "description": "Spec for Audit Logging Allowlisting.",
      "type": "object",
      "properties": {
        "allowlistedServiceAccounts": {
          "description": "Service account that should be allowlisted to send the audit logs; eg cloudauditlogging@gcp-project.iam.gserviceaccount.com. These accounts must already exist, but do not need to have any permissions granted to them. The customer's entitlements will be checked prior to allowlisting (i.e. the customer must be an Anthos customer.)",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ApigeeFeatureSpec": {
      "id": "ApigeeFeatureSpec",
      "description": "Feature spec for Apigee",
      "type": "object",
      "properties": {
        "membershipSpecs": {
          "description": "Map of Hub-based Membership IDs to individual membership spec. Membership IDs are in this format: `projects\/[project-number]\/locations\/global\/memberships\/[membership-name]`",
          "type": "object",
          "additionalProperties": {
            "$ref": "MembershipSpec"
          }
        }
      }
    },
    "MembershipSpec": {
      "id": "MembershipSpec",
      "description": "Membership information",
      "type": "object",
      "properties": {
        "location": {
          "description": "Location of the cluster. This is used by Apigee management plane for making location-based routing decisions.",
          "type": "string"
        },
        "organizationProjects": {
          "description": "In Apigee hybrid install, a project can contain memberships that serve multiple Apigee org projects. This is the list of Apigee org projects that the membership serves. E.g., In order to get the memberships that serve a specific organization project, Consumers can filter based on this field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ServiceDirectoryFeatureSpec": {
      "id": "ServiceDirectoryFeatureSpec",
      "description": "An empty spec for service directory feature. This is required since Feature proto requires a spec.",
      "type": "object",
      "properties": {
      }
    },
    "IdentityServiceFeatureSpec": {
      "id": "IdentityServiceFeatureSpec",
      "description": "Spec for Annthos Identity Service.",
      "type": "object",
      "properties": {
        "memberConfigs": {
          "description": "A map between member ids to their configurations. The ID needs to be the full path to the membership e.g., \/projects\/p\/locations\/l\/memberships\/m.",
          "type": "object",
          "additionalProperties": {
            "$ref": "MemberConfig"
          }
        }
      }
    },
    "MemberConfig": {
      "id": "MemberConfig",
      "description": "The configuration for a member\/cluster",
      "type": "object",
      "properties": {
        "authMethods": {
          "description": "A member may support multiple auth methods.",
          "type": "array",
          "items": {
            "$ref": "AuthMethod"
          }
        }
      }
    },
    "AuthMethod": {
      "id": "AuthMethod",
      "description": "Configuration of an auth method for a member\/cluster. Only one authentication method (e.g., OIDC and LDAP) can be set per AuthMethod.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Identifier for auth config.",
          "type": "string"
        },
        "proxy": {
          "description": "Proxy server address to use for auth method.",
          "type": "string"
        },
        "oidcConfig": {
          "description": "OIDC specific configuration.",
          "$ref": "OidcConfig"
        }
      }
    },
    "OidcConfig": {
      "id": "OidcConfig",
      "description": "Configuration for OIDC Auth flow.",
      "type": "object",
      "properties": {
        "clientId": {
          "description": "ID for OIDC client application.",
          "type": "string"
        },
        "certificateAuthorityData": {
          "description": "PEM-encoded CA for OIDC provider.",
          "type": "string"
        },
        "issuerUri": {
          "description": "URI for the OIDC provider. This should point to the level below .well-known\/openid-configuration.",
          "type": "string"
        },
        "kubectlRedirectUri": {
          "description": "Registered redirect uri to redirect users going through OAuth flow using kubectl plugin.",
          "type": "string"
        },
        "scopes": {
          "description": "Comma-separated list of identifiers.",
          "type": "string"
        },
        "extraParams": {
          "description": "Comma-separated list of key-value pairs.",
          "type": "string"
        },
        "userClaim": {
          "description": "Claim in OIDC ID token that holds username.",
          "type": "string"
        },
        "userPrefix": {
          "description": "Prefix to prepend to user name.",
          "type": "string"
        },
        "groupsClaim": {
          "description": "Claim in OIDC ID token that holds group information.",
          "type": "string"
        },
        "groupPrefix": {
          "description": "Prefix to prepend to group name.",
          "type": "string"
        },
        "deployCloudConsoleProxy": {
          "description": "Flag to denote if reverse proxy is used to connect to auth provider. This flag should be set to true when provider is not reachable by Google Cloud Console.",
          "type": "boolean"
        }
      }
    },
    "FeatureState": {
      "id": "FeatureState",
      "description": "FeatureState describes the status of any feature.",
      "type": "object",
      "properties": {
        "lifecycleState": {
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "SERVICE_UPDATING indicates the Feature is being updated by the Hub Service."
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ENABLING",
            "ENABLED",
            "DISABLING",
            "UPDATING",
            "SERVICE_UPDATING"
          ]
        },
        "details": {
          "description": "Aggregate status message of the feature.",
          "$ref": "FeatureStateDetails"
        },
        "detailsByMembership": {
          "description": "Messages pertaining to the current status of the feature for a given member, keyed by the fully-qualified member name. Example member name looks like `projects\/12345\/locations\/global\/memberships\/bar`. This is scoped to feature-level messages (e.g. CSM state on clusters)",
          "type": "object",
          "additionalProperties": {
            "$ref": "FeatureStateDetails"
          }
        },
        "hasResources": {
          "description": "Indicates this Feature has outstanding resources that need to be cleaned up before it can be disabled.",
          "type": "boolean"
        }
      }
    },
    "FeatureStateDetails": {
      "id": "FeatureStateDetails",
      "description": "FeatureStateDetails is a semi-structured status message for a declarative resource in the API.",
      "type": "object",
      "properties": {
        "code": {
          "description": "The code describes, at a high level, if the Feature is operating correctly. Non-`OK` codes should have details in the `description` describing what actions (if any) need to be taken to return the Feature to `OK`.",
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "No error.",
            "The Feature has encountered an issue that blocks all, or a significant portion, of its normal operation. See the `description` for more details.",
            "The Feature is in a state, or has encountered an issue, that impacts its normal operation. This state may or may not require intervention to resolve, see the `description` for more details."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "OK",
            "FAILED",
            "WARNING"
          ]
        },
        "description": {
          "description": "Human readable description of the issue.",
          "type": "string"
        },
        "servicemeshFeatureState": {
          "description": "State for the Service Mesh Feature.",
          "$ref": "ServiceMeshFeatureState"
        },
        "authorizerFeatureState": {
          "description": "State for the Authorizer Feature.",
          "$ref": "AuthorizerFeatureState"
        },
        "multiclusteringressFeatureState": {
          "description": "State for the Ingress for Anthos Feature.",
          "$ref": "MultiClusterIngressFeatureState"
        },
        "helloworldFeatureState": {
          "description": "State for the Hello World Feature.",
          "$ref": "HelloWorldFeatureState"
        },
        "meteringFeatureState": {
          "description": "State for the Metering Feature.",
          "$ref": "MeteringFeatureState"
        },
        "multiclusterservicediscoveryFeatureState": {
          "description": "State for the Multi-cluster Service Discovery Feature.",
          "$ref": "MultiClusterServiceDiscoveryFeatureState"
        },
        "configmanagementFeatureState": {
          "description": "State for the Config Management Feature.",
          "$ref": "ConfigManagementFeatureState"
        },
        "appdevexperienceFeatureState": {
          "$ref": "AppDevExperienceFeatureState"
        },
        "cloudauditloggingFeatureState": {
          "description": "The state of the Anthos Cloud Audit Logging feature.",
          "$ref": "CloudAuditLoggingFeatureState"
        },
        "apigeeFeatureState": {
          "description": "State for the Apigee Feature.",
          "$ref": "ApigeeFeatureState"
        },
        "servicedirectoryFeatureState": {
          "description": "State for the Service Directory Feature.",
          "$ref": "ServiceDirectoryFeatureState"
        },
        "identityserviceFeatureState": {
          "description": "State for the AIS Feature.",
          "$ref": "IdentityServiceFeatureState"
        },
        "updateTime": {
          "description": "The last update time of this status by the controllers",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "ServiceMeshFeatureState": {
      "id": "ServiceMeshFeatureState",
      "description": "ServiceMeshFeatureState describes the state of the Service Mesh hub feature as analyzed by the Service Mesh Hub Controller.",
      "type": "object",
      "properties": {
        "analysisMessages": {
          "description": "Output only. Results of running Service Mesh analyzers against member clusters, or the entire mesh.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ServiceMeshAnalysisMessage"
          }
        }
      }
    },
    "ServiceMeshAnalysisMessage": {
      "id": "ServiceMeshAnalysisMessage",
      "description": "ServiceMeshAnalysisMessage is a single message produced by an analyzer, and it used to communicate to the end user about the state of their Service Mesh configuration.",
      "type": "object",
      "properties": {
        "messageBase": {
          "description": "Details common to all types of Istio and ServiceMesh analysis messages.",
          "$ref": "ServiceMeshAnalysisMessageBase"
        },
        "description": {
          "description": "A human readable description of what the error means. It is suitable for non-internationalize display purposes.",
          "type": "string"
        },
        "resourcePaths": {
          "description": "A list of strings specifying the resource identifiers that were the cause of message generation. A \"path\" here may be: * MEMBERSHIP_ID if the cause is a specific member cluster * MEMBERSHIP_ID\/(NAMESPACE\\\/)?RESOURCETYPE\/NAME if the cause is a resource in a cluster",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "args": {
          "description": "A UI can combine these args with a template (based on message_base.type) to produce an internationalized message.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        }
      }
    },
    "ServiceMeshAnalysisMessageBase": {
      "id": "ServiceMeshAnalysisMessageBase",
      "description": "ServiceMeshAnalysisMessageBase describes some common information that is needed for all messages.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Represents the specific type of a message.",
          "$ref": "Type"
        },
        "level": {
          "description": "Represents how severe a message is.",
          "type": "string",
          "enumDescriptions": [
            "Illegal. Same istio.analysis.v1alpha1.AnalysisMessageBase.Level.UNKNOWN.",
            "ERROR represents a misconfiguration that must be fixed.",
            "WARNING represents a misconfiguration that should be fixed.",
            "INFO represents an informational finding."
          ],
          "enum": [
            "LEVEL_UNSPECIFIED",
            "ERROR",
            "WARNING",
            "INFO"
          ]
        },
        "documentationUrl": {
          "description": "A url pointing to the Service Mesh or Istio documentation for this specific error type.",
          "type": "string"
        }
      }
    },
    "Type": {
      "id": "Type",
      "description": "A unique identifier for the type of message. Display_name is intended to be human-readable, code is intended to be machine readable. There should be a one-to-one mapping between display_name and code. (i.e. do not re-use display_names or codes between message types.) See istio.analysis.v1alpha1.AnalysisMessageBase.Type",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "A human-readable name for the message type. e.g. \"InternalError\", \"PodMissingProxy\". This should be the same for all messages of the same type. (This corresponds to the `name` field in open-source Istio.)",
          "type": "string"
        },
        "code": {
          "description": "A 7 character code matching `^IST[0-9]{4}$` or `^ASM[0-9]{4}$`, intended to uniquely identify the message type. (e.g. \"IST0001\" is mapped to the \"InternalError\" message type.)",
          "type": "string"
        }
      }
    },
    "AuthorizerFeatureState": {
      "id": "AuthorizerFeatureState",
      "description": "AuthorizerFeatureState contains the current detailed state of the Authorizer Feature.",
      "type": "object",
      "properties": {
      }
    },
    "MultiClusterIngressFeatureState": {
      "id": "MultiClusterIngressFeatureState",
      "description": "MultiClusterIngressFeatureState contains the status fields specific to the MultiClusterIngress feature. This is just a placeholder and more fields will be added when we have more state information to report for this feature.",
      "type": "object",
      "properties": {
      }
    },
    "HelloWorldFeatureState": {
      "id": "HelloWorldFeatureState",
      "description": "An empty state for HelloWorld feature. This is required since FeatureStateDetails requires a state.",
      "type": "object",
      "properties": {
      }
    },
    "MeteringFeatureState": {
      "id": "MeteringFeatureState",
      "description": "Metering Feature State.",
      "type": "object",
      "properties": {
        "lastMeasurementTime": {
          "description": "The time stamp of the most recent measurement of the number of vCPUs in the cluster.",
          "type": "string",
          "format": "google-datetime"
        },
        "lastMeasuredClusterVcpuCapacity": {
          "description": "The number of vCPUs in the cluster according to the most recent measurement.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "MultiClusterServiceDiscoveryFeatureState": {
      "id": "MultiClusterServiceDiscoveryFeatureState",
      "description": "An empty state for multi-cluster service discovery feature. This is required since FeatureStateDetails requires a state.",
      "type": "object",
      "properties": {
      }
    },
    "ConfigManagementFeatureState": {
      "id": "ConfigManagementFeatureState",
      "description": "State for Anthos Config Management",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "The user-defined name for the cluster used by ClusterSelectors to group clusters together. This should match Membership's membership_name, unless the user installed ACM on the cluster manually prior to enabling the ACM hub feature. Unique within a Anthos Config Management installation.",
          "type": "string"
        },
        "membershipConfig": {
          "description": "Membership configuration in the cluster. This represents the actual state in the cluster, while the MembershipConfig in the FeatureSpec represents the intended state",
          "$ref": "MembershipConfig"
        },
        "operatorState": {
          "description": "Current install status of ACM's Operator",
          "$ref": "OperatorState"
        },
        "configSyncState": {
          "description": "Current sync status",
          "$ref": "ConfigSyncState"
        },
        "policyControllerState": {
          "description": "PolicyController status",
          "$ref": "PolicyControllerState"
        },
        "binauthzState": {
          "description": "Binauthz status",
          "$ref": "BinauthzState"
        }
      }
    },
    "OperatorState": {
      "id": "OperatorState",
      "description": "State information for an ACM's Operator",
      "type": "object",
      "properties": {
        "version": {
          "description": "The semenatic version number of the operator",
          "type": "string"
        },
        "deploymentState": {
          "description": "The state of the Operator's deployment",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "errors": {
          "description": "Install errors.",
          "type": "array",
          "items": {
            "$ref": "InstallError"
          }
        }
      }
    },
    "InstallError": {
      "id": "InstallError",
      "description": "Errors pertaining to the installation of ACM",
      "type": "object",
      "properties": {
        "errorMessage": {
          "description": "A string representing the user facing error message",
          "type": "string"
        }
      }
    },
    "ConfigSyncState": {
      "id": "ConfigSyncState",
      "description": "State information for ConfigSync",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of ConfigSync deployed",
          "$ref": "ConfigSyncVersion"
        },
        "deploymentState": {
          "description": "Information about the deployment of ConfigSync, including the version of the various Pods deployed",
          "$ref": "ConfigSyncDeploymentState"
        },
        "syncState": {
          "description": "The state of ConfigSync's process to sync configs to a cluster",
          "$ref": "SyncState"
        }
      }
    },
    "ConfigSyncVersion": {
      "id": "ConfigSyncVersion",
      "description": "Specific versioning information pertaining to ConfigSync's Pods",
      "type": "object",
      "properties": {
        "importer": {
          "description": "Version of the deployed importer pod",
          "type": "string"
        },
        "syncer": {
          "description": "Version of the deployed syncer pod",
          "type": "string"
        },
        "gitSync": {
          "description": "Version of the deployed git-sync pod",
          "type": "string"
        },
        "monitor": {
          "description": "Version of the deployed monitor pod",
          "type": "string"
        }
      }
    },
    "ConfigSyncDeploymentState": {
      "id": "ConfigSyncDeploymentState",
      "description": "The state of ConfigSync's deployment on a cluster",
      "type": "object",
      "properties": {
        "importer": {
          "description": "Deployment state of the importer pod",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "syncer": {
          "description": "Deployment state of the syncer pod",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gitSync": {
          "description": "Deployment state of the git-sync pod",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "monitor": {
          "description": "Deployment state of the monitor pod",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      }
    },
    "SyncState": {
      "id": "SyncState",
      "description": "State indicating an ACM's progress syncing configurations to a cluster",
      "type": "object",
      "properties": {
        "sourceToken": {
          "description": "Token indicating the state of the repo.",
          "type": "string"
        },
        "importToken": {
          "description": "Token indicating the state of the importer.",
          "type": "string"
        },
        "syncToken": {
          "description": "Token indicating the state of the syncer.",
          "type": "string"
        },
        "lastSync": {
          "description": "Timestamp of when ACM last successfully synced the repo The time format is specified in https:\/\/golang.org\/pkg\/time\/#Time.String This field is being deprecated. Use last_sync_time instead. (b\/154053616)",
          "type": "string"
        },
        "lastSyncTime": {
          "description": "Timestamp type of when ACM last successfully synced the repo",
          "type": "string",
          "format": "google-datetime"
        },
        "code": {
          "description": "Sync status code",
          "type": "string",
          "enumDescriptions": [
            "ACM cannot determine a sync code",
            "ACM successfully synced the git Repo with the cluster",
            "ACM is in the progress of syncing a new change",
            "Indicates an error configuring ACM, and user action is required",
            "ACM has been installed (operator manifest deployed), but not configured.",
            "ACM has not been installed (no operator pod found)",
            "Error authorizing with the cluster",
            "Cluster could not be reached"
          ],
          "enum": [
            "SYNC_CODE_UNSPECIFIED",
            "SYNCED",
            "PENDING",
            "ERROR",
            "NOT_CONFIGURED",
            "NOT_INSTALLED",
            "UNAUTHORIZED",
            "UNREACHABLE"
          ]
        },
        "errors": {
          "description": "A list of errors resulting from problematic configs. This list will be truncated after 100 errors, although it is unlikely for that many errors to simultaneously exist.",
          "type": "array",
          "items": {
            "$ref": "SyncError"
          }
        }
      }
    },
    "SyncError": {
      "id": "SyncError",
      "description": "An ACM created error representing a problem syncing configurations",
      "type": "object",
      "properties": {
        "code": {
          "description": "An ACM defined error code",
          "type": "string"
        },
        "errorMessage": {
          "description": "A description of the error",
          "type": "string"
        },
        "errorResources": {
          "description": "A list of config(s) associated with the error, if any",
          "type": "array",
          "items": {
            "$ref": "ErrorResource"
          }
        }
      }
    },
    "ErrorResource": {
      "id": "ErrorResource",
      "description": "Model for a config file in the git repo with an associated Sync error",
      "type": "object",
      "properties": {
        "sourcePath": {
          "description": "Path in the git repo of the erroneous config",
          "type": "string"
        },
        "resourceName": {
          "description": "Metadata name of the resource that is causing an error",
          "type": "string"
        },
        "resourceNamespace": {
          "description": "Namespace of the resource that is causing an error",
          "type": "string"
        },
        "resourceGvk": {
          "description": "Group\/version\/kind of the resource that is causing an error",
          "$ref": "GroupVersionKind"
        }
      }
    },
    "GroupVersionKind": {
      "id": "GroupVersionKind",
      "description": "A Kubernetes object's GVK",
      "type": "object",
      "properties": {
        "group": {
          "description": "Kubernetes Group",
          "type": "string"
        },
        "version": {
          "description": "Kubernetes Version",
          "type": "string"
        },
        "kind": {
          "description": "Kubernetes Kind",
          "type": "string"
        }
      }
    },
    "PolicyControllerState": {
      "id": "PolicyControllerState",
      "description": "State for PolicyControllerState.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The version of Gatekeeper Policy Controller deployed.",
          "$ref": "PolicyControllerVersion"
        },
        "deploymentState": {
          "description": "The state about the policy controller installation.",
          "$ref": "GatekeeperDeploymentState"
        }
      }
    },
    "PolicyControllerVersion": {
      "id": "PolicyControllerVersion",
      "description": "The build version of Gatekeeper Policy Controller is using.",
      "type": "object",
      "properties": {
        "version": {
          "description": "The gatekeeper image tag that is composed of ACM version, git tag, build number.",
          "type": "string"
        }
      }
    },
    "GatekeeperDeploymentState": {
      "id": "GatekeeperDeploymentState",
      "description": "State of Policy Controller installation.",
      "type": "object",
      "properties": {
        "gatekeeperControllerManagerState": {
          "description": "Status of gatekeeper-controller-manager pod.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "gatekeeperAudit": {
          "description": "Status of gatekeeper-audit deployment.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        }
      }
    },
    "BinauthzState": {
      "id": "BinauthzState",
      "description": "State for Binauthz",
      "type": "object",
      "properties": {
        "webhook": {
          "description": "The state of the binauthz webhook.",
          "type": "string",
          "enumDescriptions": [
            "Deployment's state cannot be determined",
            "Deployment is not installed",
            "Deployment is installed",
            "Deployment was attempted to be installed, but has errors"
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "NOT_INSTALLED",
            "INSTALLED",
            "ERROR"
          ]
        },
        "version": {
          "description": "The version of binauthz that is installed.",
          "$ref": "BinauthzVersion"
        }
      }
    },
    "BinauthzVersion": {
      "id": "BinauthzVersion",
      "description": "The version of binauthz.",
      "type": "object",
      "properties": {
        "webhookVersion": {
          "description": "The version of the binauthz webhook.",
          "type": "string"
        }
      }
    },
    "AppDevExperienceFeatureState": {
      "id": "AppDevExperienceFeatureState",
      "description": "State for App Dev Exp Feature.",
      "type": "object",
      "properties": {
      }
    },
    "CloudAuditLoggingFeatureState": {
      "id": "CloudAuditLoggingFeatureState",
      "description": "An empty state for Audit Logging Allowlisting. This is required since FeatureStateDetails requires a state.",
      "type": "object",
      "properties": {
      }
    },
    "ApigeeFeatureState": {
      "id": "ApigeeFeatureState",
      "description": "An empty state for Apigee feature.",
      "type": "object",
      "properties": {
      }
    },
    "ServiceDirectoryFeatureState": {
      "id": "ServiceDirectoryFeatureState",
      "description": "An empty state for service directory feature. This is rqeuired since FeatureStateDetails requires a state.",
      "type": "object",
      "properties": {
      }
    },
    "IdentityServiceFeatureState": {
      "id": "IdentityServiceFeatureState",
      "description": "State for Anthos Identity Service",
      "type": "object",
      "properties": {
        "installedVersion": {
          "description": "Installed AIS version. This is the AIS version installed on this member. The values makes sense iff state is OK.",
          "type": "string"
        },
        "state": {
          "description": "Deployment state on this member",
          "type": "string",
          "enumDescriptions": [
            "Unspecified state",
            "deployment succeeds",
            "Failure with error."
          ],
          "enum": [
            "DEPLOYMENT_STATE_UNSPECIFIED",
            "OK",
            "ERROR"
          ]
        },
        "failureReason": {
          "description": "The reason of the failure.",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusDetail": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "cancelRequested": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "gkehub.projects.locations.list",
              "path": "v1alpha1/{+name}/locations",
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "gkehub.projects.locations.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "gkehub.projects.locations.operations.list",
                  "path": "v1alpha1/{+name}/operations",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "gkehub.projects.locations.operations.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "gkehub.projects.locations.operations.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "gkehub.projects.locations.operations.cancel",
                  "path": "v1alpha1/{+name}:cancel",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "global": {
              "resources": {
                "features": {
                  "methods": {
                    "list": {
                      "id": "gkehub.projects.locations.global.features.list",
                      "path": "v1alpha1/{+parent}/features",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "The parent in whose context the features are listed. The parent value is in the format: `projects\/[project_id]\/locations\/global`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, it defaults to 500.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Token returned by previous call to `ListFeatures` which specifies the position in the list from where to continue listing the resources.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Lists the Features that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form ` ` where operators: `<`, `>`, `<=`, `>=`, `!=`, `=`, `:` are supported (colon `:` represents a HAS operator which is roughly synonymous with equality). can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name = \"projects\/foo-proj\/locations\/global\/features\/servicemesh - Filter by labels: - Resources that have a key called `foo` labels.foo:* - Resources that have a key called `foo` whose value is `bar` labels.foo = bar - Filter by spec: - ServiceMesh feature with mtls set. servicemesh_feature_spec.mtls = true",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Field to use to sort the list.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListFeaturesResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists Features in a given project and location."
                    },
                    "get": {
                      "id": "gkehub.projects.locations.global.features.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features/{featuresId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "The Feature resource name in the format: `projects\/[project_id]\/locations\/global\/features\/[feature_id]`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/features\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Feature"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets details of a single Feature."
                    },
                    "create": {
                      "id": "gkehub.projects.locations.global.features.create",
                      "path": "v1alpha1/{+parent}/features",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "description": "The parent in whose context the feature is created. The parent value is in the format: `projects\/[project_id]\/locations\/global`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global$",
                          "type": "string"
                        },
                        "featureId": {
                          "description": "The ID of one of the supported features.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "request": {
                        "$ref": "Feature"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Adds a new Feature."
                    },
                    "delete": {
                      "id": "gkehub.projects.locations.global.features.delete",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features/{featuresId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "description": "The feature resource name in the format: `projects\/[project_id]\/locations\/global\/features\/[feature_id]`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/features\/[^\/]+$",
                          "type": "string"
                        },
                        "force": {
                          "description": "If set to true, then the delete will ignore any outstanding resources for this Feature (`FeatureState.has_resources` is set to true). These resources will NOT be cleaned up or modified in any way.",
                          "location": "query",
                          "type": "boolean"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Removes a single Feature."
                    },
                    "patch": {
                      "id": "gkehub.projects.locations.global.features.patch",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/global/features/{featuresId}",
                      "httpMethod": "PATCH",
                      "parameters": {
                        "name": {
                          "description": "The feature resource name in the format: `projects\/[project_id]\/locations\/global\/features\/[feature_id]`",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/features\/[^\/]+$",
                          "type": "string"
                        },
                        "updateMask": {
                          "description": "Mask of fields to update. At least one field path must be specified in this mask.",
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Feature"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Updates an existing Feature."
                    }
                  }
                }
              }
            },
            "features": {
              "methods": {
                "setIamPolicy": {
                  "id": "gkehub.projects.locations.features.setIamPolicy",
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/features\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "gkehub.projects.locations.features.getIamPolicy",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/features\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "gkehub.projects.locations.features.testIamPermissions",
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/features/{featuresId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/features\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}