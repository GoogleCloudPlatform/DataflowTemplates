"""Generated message classes for iamassist version v1alpha3.

"""
# NOTE: This file is autogenerated and should not be edited by hand.

from __future__ import absolute_import

from apitools.base.protorpclite import messages as _messages
from apitools.base.py import encoding
from apitools.base.py import extra_types


package = 'iamassist'


class GoogleIamAssistV1alpha3AccessStateDiff(_messages.Message):
  r"""Container for ExplainedAccess of baseline and simulated policies. For
  both baseline and simulated, the ExplainedAccess.policies are filtered to
  only include the UNKNOWN infromation. If the AccessState is known, e.g.
  GRANTED or NOT_GRANTED, the policy list will be empty. Only policies with an
  AccessState of UNKNOWN are included.

  Enums:
    AccessChangeValueValuesEnum: A single value interpretation of the
      difference between baseline and simulated.

  Fields:
    accessChange: A single value interpretation of the difference between
      baseline and simulated.
    baseline: The explained access when replayed against the baseline
      policies.
    simulated: The explained access when replayed against the simulated
      policies.
  """

  class AccessChangeValueValuesEnum(_messages.Enum):
    r"""A single value interpretation of the difference between baseline and
    simulated.

    Values:
      ACCESS_CHANGE_TYPE_UNSPECIFIED: Reserved
      NO_CHANGE: The two ExplainedAccesses are equal. This includes the case
        where both baseline and simulated are UNKNOWN, but the unknown
        information is equivalent.
      UNKNOWN_CHANGE: The baseline and simulated accesses are both UNKNOWN,
        but the unknown information differs between them.
      ACCESS_REVOKED: The baseline access state is GRANTED and the simulated
        access state is NOT_GRANTED
      ACCESS_GAINED: The baseline access state is NOT_GRANTED and the
        simulated access state is GRANTED.
      ACCESS_MAYBE_REVOKED: The baseline access state is GRANTED and the
        simulated access state is UNKNOWN.
      ACCESS_MAYBE_GAINED: The baseline state is NOT_GRANTED and the simulated
        state is UNKNOWN.
    """
    ACCESS_CHANGE_TYPE_UNSPECIFIED = 0
    NO_CHANGE = 1
    UNKNOWN_CHANGE = 2
    ACCESS_REVOKED = 3
    ACCESS_GAINED = 4
    ACCESS_MAYBE_REVOKED = 5
    ACCESS_MAYBE_GAINED = 6

  accessChange = _messages.EnumField('AccessChangeValueValuesEnum', 1)
  baseline = _messages.MessageField('GoogleIamAssistV1alpha3ExplainedAccess', 2)
  simulated = _messages.MessageField('GoogleIamAssistV1alpha3ExplainedAccess', 3)


class GoogleIamAssistV1alpha3AccessTuple(_messages.Message):
  r"""Information about the member, resource, and permission to check.

  Fields:
    fullResourceName: Required. The full resource name that identifies the
      resource. For example, `//compute.googleapis.com/projects/my-
      project/zones/us-central1-a/instances/my-instance`. For examples of full
      resource names for Google Cloud services, see
      https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
    permission: Required. The IAM permission to check for the specified member
      and resource. For a complete list of IAM permissions, see
      https://cloud.google.com/iam/help/permissions/reference. For a complete
      list of predefined IAM roles and the permissions in each role, see
      https://cloud.google.com/iam/help/roles/reference.
    principal: Required. The member, or principal, whose access you want to
      check, in the form of the email address that represents that member. For
      example, `alice@example.com` or `my-service-account@my-
      project.iam.gserviceaccount.com`. The member must be a Google Account or
      a service account. Other types of members are not supported.
  """

  fullResourceName = _messages.StringField(1)
  permission = _messages.StringField(2)
  principal = _messages.StringField(3)


class GoogleIamAssistV1alpha3BindingExplanation(_messages.Message):
  r"""Details about how a binding in a policy affects a member's ability to
  use a permission.

  Enums:
    AccessValueValuesEnum: Required. Indicates whether _this binding_ provides
      the specified permission to the specified member for the specified
      resource. This field does _not_ indicate whether the member actually has
      the permission for the resource. There might be another binding that
      overrides this binding. To determine whether the member actually has the
      permission, use the `access` field in the TroubleshootIamPolicyResponse.
    RelevanceValueValuesEnum: The relevance of this binding to the overall
      determination for the entire policy.
    RolePermissionValueValuesEnum: Indicates whether the role granted by this
      binding contains the specified permission.
    RolePermissionRelevanceValueValuesEnum: The relevance of the permission's
      existence, or nonexistence, in the role to the overall determination for
      the entire policy.

  Messages:
    MembershipsValue: Indicates whether each member in the binding includes
      the member specified in the request, either directly or indirectly. Each
      key identifies a member in the binding, and each value indicates whether
      the member in the binding includes the member in the request. For
      example, suppose that a binding includes the following members: *
      `user:alice@example.com` * `group:product-eng@example.com` You want to
      troubleshoot access for `user:bob@example.com`. This user is a member of
      the group `group:product-eng@example.com`. For the first member in the
      binding, the key is `user:alice@example.com`, and the `membership` field
      in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member
      in the binding, the key is `group:product-eng@example.com`, and the
      `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.

  Fields:
    access: Required. Indicates whether _this binding_ provides the specified
      permission to the specified member for the specified resource. This
      field does _not_ indicate whether the member actually has the permission
      for the resource. There might be another binding that overrides this
      binding. To determine whether the member actually has the permission,
      use the `access` field in the TroubleshootIamPolicyResponse.
    condition: A condition expression that prevents access unless the
      expression evaluates to `true`. To learn about IAM Conditions, see
      http://cloud.google.com/iam/help/conditions/overview.
    memberships: Indicates whether each member in the binding includes the
      member specified in the request, either directly or indirectly. Each key
      identifies a member in the binding, and each value indicates whether the
      member in the binding includes the member in the request. For example,
      suppose that a binding includes the following members: *
      `user:alice@example.com` * `group:product-eng@example.com` You want to
      troubleshoot access for `user:bob@example.com`. This user is a member of
      the group `group:product-eng@example.com`. For the first member in the
      binding, the key is `user:alice@example.com`, and the `membership` field
      in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member
      in the binding, the key is `group:product-eng@example.com`, and the
      `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.
    relevance: The relevance of this binding to the overall determination for
      the entire policy.
    role: The role that this binding grants. For example,
      `roles/compute.serviceAgent`. For a complete list of predefined IAM
      roles, as well as the permissions in each role, see
      https://cloud.google.com/iam/help/roles/reference.
    rolePermission: Indicates whether the role granted by this binding
      contains the specified permission.
    rolePermissionRelevance: The relevance of the permission's existence, or
      nonexistence, in the role to the overall determination for the entire
      policy.
  """

  class AccessValueValuesEnum(_messages.Enum):
    r"""Required. Indicates whether _this binding_ provides the specified
    permission to the specified member for the specified resource. This field
    does _not_ indicate whether the member actually has the permission for the
    resource. There might be another binding that overrides this binding. To
    determine whether the member actually has the permission, use the `access`
    field in the TroubleshootIamPolicyResponse.

    Values:
      ACCESS_STATE_UNSPECIFIED: Reserved for future use.
      GRANTED: The member has the permission.
      NOT_GRANTED: The member does not have the permission.
      UNKNOWN_CONDITIONAL: The member has the permission only if a condition
        expression evaluates to `true`.
      UNKNOWN_INFO_DENIED: The sender of the request does not have access to
        all of the policies that Policy Troubleshooter needs to evaluate.
    """
    ACCESS_STATE_UNSPECIFIED = 0
    GRANTED = 1
    NOT_GRANTED = 2
    UNKNOWN_CONDITIONAL = 3
    UNKNOWN_INFO_DENIED = 4

  class RelevanceValueValuesEnum(_messages.Enum):
    r"""The relevance of this binding to the overall determination for the
    entire policy.

    Values:
      HEURISTIC_RELEVANCE_UNSPECIFIED: Reserved for future use.
      NORMAL: The data point has a limited effect on the result. Changing the
        data point is unlikely to affect the overall determination.
      HIGH: The data point has a strong effect on the result. Changing the
        data point is likely to affect the overall determination.
    """
    HEURISTIC_RELEVANCE_UNSPECIFIED = 0
    NORMAL = 1
    HIGH = 2

  class RolePermissionRelevanceValueValuesEnum(_messages.Enum):
    r"""The relevance of the permission's existence, or nonexistence, in the
    role to the overall determination for the entire policy.

    Values:
      HEURISTIC_RELEVANCE_UNSPECIFIED: Reserved for future use.
      NORMAL: The data point has a limited effect on the result. Changing the
        data point is unlikely to affect the overall determination.
      HIGH: The data point has a strong effect on the result. Changing the
        data point is likely to affect the overall determination.
    """
    HEURISTIC_RELEVANCE_UNSPECIFIED = 0
    NORMAL = 1
    HIGH = 2

  class RolePermissionValueValuesEnum(_messages.Enum):
    r"""Indicates whether the role granted by this binding contains the
    specified permission.

    Values:
      ROLE_PERMISSION_UNSPECIFIED: Reserved for future use.
      ROLE_PERMISSION_INCLUDED: The permission is included in the role.
      ROLE_PERMISSION_NOT_INCLUDED: The permission is not included in the
        role.
      ROLE_PERMISSION_UNKNOWN_INFO_DENIED: The sender of the request is not
        allowed to access the binding.
    """
    ROLE_PERMISSION_UNSPECIFIED = 0
    ROLE_PERMISSION_INCLUDED = 1
    ROLE_PERMISSION_NOT_INCLUDED = 2
    ROLE_PERMISSION_UNKNOWN_INFO_DENIED = 3

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MembershipsValue(_messages.Message):
    r"""Indicates whether each member in the binding includes the member
    specified in the request, either directly or indirectly. Each key
    identifies a member in the binding, and each value indicates whether the
    member in the binding includes the member in the request. For example,
    suppose that a binding includes the following members: *
    `user:alice@example.com` * `group:product-eng@example.com` You want to
    troubleshoot access for `user:bob@example.com`. This user is a member of
    the group `group:product-eng@example.com`. For the first member in the
    binding, the key is `user:alice@example.com`, and the `membership` field
    in the value is set to `MEMBERSHIP_NOT_INCLUDED`. For the second member in
    the binding, the key is `group:product-eng@example.com`, and the
    `membership` field in the value is set to `MEMBERSHIP_INCLUDED`.

    Messages:
      AdditionalProperty: An additional property for a MembershipsValue
        object.

    Fields:
      additionalProperties: Additional properties of type MembershipsValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MembershipsValue object.

      Fields:
        key: Name of the additional property.
        value: A GoogleIamAssistV1alpha3BindingExplanationAnnotatedMembership
          attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('GoogleIamAssistV1alpha3BindingExplanationAnnotatedMembership', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  access = _messages.EnumField('AccessValueValuesEnum', 1)
  condition = _messages.MessageField('GoogleTypeExpr', 2)
  memberships = _messages.MessageField('MembershipsValue', 3)
  relevance = _messages.EnumField('RelevanceValueValuesEnum', 4)
  role = _messages.StringField(5)
  rolePermission = _messages.EnumField('RolePermissionValueValuesEnum', 6)
  rolePermissionRelevance = _messages.EnumField('RolePermissionRelevanceValueValuesEnum', 7)


class GoogleIamAssistV1alpha3BindingExplanationAnnotatedMembership(_messages.Message):
  r"""Details about whether the binding includes the member.

  Enums:
    MembershipValueValuesEnum: Indicates whether the binding includes the
      member.
    RelevanceValueValuesEnum: The relevance of the member's status to the
      overall determination for the binding.

  Fields:
    membership: Indicates whether the binding includes the member.
    relevance: The relevance of the member's status to the overall
      determination for the binding.
  """

  class MembershipValueValuesEnum(_messages.Enum):
    r"""Indicates whether the binding includes the member.

    Values:
      MEMBERSHIP_UNSPECIFIED: Reserved for future use.
      MEMBERSHIP_INCLUDED: The binding includes the member. The member can be
        included directly or indirectly. For example: * A member is included
        directly if that member is listed in the binding. * A member is
        included indirectly if that member is in a Google group or G Suite
        domain that is listed in the binding.
      MEMBERSHIP_NOT_INCLUDED: The binding does not include the member.
      MEMBERSHIP_UNKNOWN_INFO_DENIED: The sender of the request is not allowed
        to access the binding.
      MEMBERSHIP_UNKNOWN_UNSUPPORTED: The member is an unsupported type. Only
        Google Accounts and service accounts are supported.
    """
    MEMBERSHIP_UNSPECIFIED = 0
    MEMBERSHIP_INCLUDED = 1
    MEMBERSHIP_NOT_INCLUDED = 2
    MEMBERSHIP_UNKNOWN_INFO_DENIED = 3
    MEMBERSHIP_UNKNOWN_UNSUPPORTED = 4

  class RelevanceValueValuesEnum(_messages.Enum):
    r"""The relevance of the member's status to the overall determination for
    the binding.

    Values:
      HEURISTIC_RELEVANCE_UNSPECIFIED: Reserved for future use.
      NORMAL: The data point has a limited effect on the result. Changing the
        data point is unlikely to affect the overall determination.
      HIGH: The data point has a strong effect on the result. Changing the
        data point is likely to affect the overall determination.
    """
    HEURISTIC_RELEVANCE_UNSPECIFIED = 0
    NORMAL = 1
    HIGH = 2

  membership = _messages.EnumField('MembershipValueValuesEnum', 1)
  relevance = _messages.EnumField('RelevanceValueValuesEnum', 2)


class GoogleIamAssistV1alpha3ExplainedAccess(_messages.Message):
  r"""Details about how the set of Explained Policies resulted in the Access
  State.

  Enums:
    AccessStateValueValuesEnum: The overall access state for the included set
      of policies.

  Fields:
    accessState: The overall access state for the included set of policies.
    errors: The list of problems encountered when explaining this access. This
      list provides the reason why UNKNOWN information in `policies` was
      unknown.
    policies: The set of policies contributing to the listed AccessState. An
      ExplainedPolicy with UNKNOWN_INFO_DENIED and nothing else means the user
      did not have permission to get one or more policies.
  """

  class AccessStateValueValuesEnum(_messages.Enum):
    r"""The overall access state for the included set of policies.

    Values:
      ACCESS_STATE_UNSPECIFIED: Reserved for future use.
      GRANTED: The member has the permission.
      NOT_GRANTED: The member does not have the permission.
      UNKNOWN_CONDITIONAL: The member has the permission only if a condition
        expression evaluates to `true`.
      UNKNOWN_INFO_DENIED: The sender of the request does not have access to
        all of the policies that Policy Troubleshooter needs to evaluate.
    """
    ACCESS_STATE_UNSPECIFIED = 0
    GRANTED = 1
    NOT_GRANTED = 2
    UNKNOWN_CONDITIONAL = 3
    UNKNOWN_INFO_DENIED = 4

  accessState = _messages.EnumField('AccessStateValueValuesEnum', 1)
  errors = _messages.MessageField('GoogleRpcStatus', 2, repeated=True)
  policies = _messages.MessageField('GoogleIamAssistV1alpha3ExplainedPolicy', 3, repeated=True)


class GoogleIamAssistV1alpha3ExplainedPolicy(_messages.Message):
  r"""Details about how a specific IAM Policy contributed to the access check.

  Enums:
    AccessValueValuesEnum: Indicates whether _this policy_ provides the
      specified permission to the specified member for the specified resource.
      This field does _not_ indicate whether the member actually has the
      permission for the resource. There might be another policy that
      overrides this policy. To determine whether the member actually has the
      permission, use the `access` field in the TroubleshootIamPolicyResponse.
    RelevanceValueValuesEnum: The relevance of this policy to the overall
      determination in the TroubleshootIamPolicyResponse. If the sender of the
      request does not have access to the policy, this field is omitted.

  Fields:
    access: Indicates whether _this policy_ provides the specified permission
      to the specified member for the specified resource. This field does
      _not_ indicate whether the member actually has the permission for the
      resource. There might be another policy that overrides this policy. To
      determine whether the member actually has the permission, use the
      `access` field in the TroubleshootIamPolicyResponse.
    bindingExplanations: Details about how each binding in the policy affects
      the member's ability, or inability, to use the permission for the
      resource. If the sender of the request does not have access to the
      policy, this field is omitted.
    fullResourceName: The full resource name that identifies the resource. For
      example, `//compute.googleapis.com/projects/my-project/zones/us-
      central1-a/instances/my-instance`. If the sender of the request does not
      have access to the policy, this field is omitted. For examples of full
      resource names for Google Cloud services, see
      https://cloud.google.com/iam/help/troubleshooter/full-resource-names.
    policy: The IAM policy attached to the resource. If the sender of the
      request does not have access to the policy, this field is empty.
    relevance: The relevance of this policy to the overall determination in
      the TroubleshootIamPolicyResponse. If the sender of the request does not
      have access to the policy, this field is omitted.
  """

  class AccessValueValuesEnum(_messages.Enum):
    r"""Indicates whether _this policy_ provides the specified permission to
    the specified member for the specified resource. This field does _not_
    indicate whether the member actually has the permission for the resource.
    There might be another policy that overrides this policy. To determine
    whether the member actually has the permission, use the `access` field in
    the TroubleshootIamPolicyResponse.

    Values:
      ACCESS_STATE_UNSPECIFIED: Reserved for future use.
      GRANTED: The member has the permission.
      NOT_GRANTED: The member does not have the permission.
      UNKNOWN_CONDITIONAL: The member has the permission only if a condition
        expression evaluates to `true`.
      UNKNOWN_INFO_DENIED: The sender of the request does not have access to
        all of the policies that Policy Troubleshooter needs to evaluate.
    """
    ACCESS_STATE_UNSPECIFIED = 0
    GRANTED = 1
    NOT_GRANTED = 2
    UNKNOWN_CONDITIONAL = 3
    UNKNOWN_INFO_DENIED = 4

  class RelevanceValueValuesEnum(_messages.Enum):
    r"""The relevance of this policy to the overall determination in the
    TroubleshootIamPolicyResponse. If the sender of the request does not have
    access to the policy, this field is omitted.

    Values:
      HEURISTIC_RELEVANCE_UNSPECIFIED: Reserved for future use.
      NORMAL: The data point has a limited effect on the result. Changing the
        data point is unlikely to affect the overall determination.
      HIGH: The data point has a strong effect on the result. Changing the
        data point is likely to affect the overall determination.
    """
    HEURISTIC_RELEVANCE_UNSPECIFIED = 0
    NORMAL = 1
    HIGH = 2

  access = _messages.EnumField('AccessValueValuesEnum', 1)
  bindingExplanations = _messages.MessageField('GoogleIamAssistV1alpha3BindingExplanation', 2, repeated=True)
  fullResourceName = _messages.StringField(3)
  policy = _messages.MessageField('GoogleIamV1Policy', 4)
  relevance = _messages.EnumField('RelevanceValueValuesEnum', 5)


class GoogleIamAssistV1alpha3ExportReplayResultsRequest(_messages.Message):
  r"""Request for exporting the results of a replay.

  Fields:
    destination: Destination to write the results to. Supported formats: -
      `//storage.googleapis.com/buckets/{bucket-id}/{directory}` -
      `//bigquery.googleapis.com/projects/{project-id}/datasets/{dataSet}` The
      supported destinations are a GCS bucket or a BigQuery dataset. For *GCS
      Bucket*, this field provides the bucket and directory to write the file
      into. *Accepted format*: `//storage.googleapis.com/buckets/{bucket-
      id}/{directory}` *Example*: `//storage.googleapis.com/buckets/simulator-
      export` Two JSON formatted files will be created in the specified bucket
      and directory. One file will contain the `LogsMetadata` information
      while the other will contain the list of `ReplayResults` associated with
      this `Replay`. The files will be named: - ${TIMESTAMP}_metadata.json -
      ${TIMESTAMP}_results.json The bucket must already exist. The requesting
      user must have write permission to the bucket. The directory is created
      if it doesn't exist. For *BigQuery Dataset*, this field provides the
      dataset to write the results into. *Accepted Format*:
      `//bigquery.googleapis.com/projects/{project-id}/datasets/{dataSet}`
      *Example*: "//bigquery.googleapis.com/projects/my-example-
      project/datasets/simulator_export` Two tables will be created in this
      dataset: - ${TIMESTAMP}_metadata - ${TIMESTAMP}_results The dataset must
      exist. The requesting user must have write permissions to this dataset.
  """

  destination = _messages.StringField(1)


class GoogleIamAssistV1alpha3ListReplaysResponse(_messages.Message):
  r"""Response containing list of `Replays`.

  Fields:
    nextPageToken: A token, which can be sent as `page_token` to retrieve the
      next page. If this field is omitted, there are no subsequent pages.
    replays: The list of `Replays`.
  """

  nextPageToken = _messages.StringField(1)
  replays = _messages.MessageField('GoogleIamAssistV1alpha3Replay', 2, repeated=True)


class GoogleIamAssistV1alpha3Replay(_messages.Message):
  r"""A Replay of Accesses against a simulated state.

  Enums:
    StateValueValuesEnum: Output only. The current state of the replay.
      https://aip.dev/216

  Fields:
    config: Required. The configuration used for the replay.
    diffs: Output only. The ReplayResults that resulted in diffs being found.
    errors: Output only. The ReplayResults that resulted in an error.
    logsMetadata: Output only. Metadata about the replayed log entries.
    name: The resource name of the replay. The replay id is randomly generated
      on creation. Format: replays/{replay}.
    state: Output only. The current state of the replay. https://aip.dev/216
  """

  class StateValueValuesEnum(_messages.Enum):
    r"""Output only. The current state of the replay. https://aip.dev/216

    Values:
      STATE_UNSPECIFIED: Reserved.
      PENDING: Replay has not started yet.
      RUNNING: Replay is currently running.
      SUCCEEDED: Replay has successfully completed.
      FAILED: Replay has finished with an error.
    """
    STATE_UNSPECIFIED = 0
    PENDING = 1
    RUNNING = 2
    SUCCEEDED = 3
    FAILED = 4

  config = _messages.MessageField('GoogleIamAssistV1alpha3ReplayConfig', 1)
  diffs = _messages.MessageField('GoogleIamAssistV1alpha3ReplayResult', 2, repeated=True)
  errors = _messages.MessageField('GoogleIamAssistV1alpha3ReplayResult', 3, repeated=True)
  logsMetadata = _messages.MessageField('GoogleIamAssistV1alpha3ReplayLogsMetadata', 4)
  name = _messages.StringField(5)
  state = _messages.EnumField('StateValueValuesEnum', 6)


class GoogleIamAssistV1alpha3ReplayConfig(_messages.Message):
  r"""The configuration used for the replay.

  Enums:
    LogSourceValueValuesEnum: The logs to use as input for the replay.

  Messages:
    PolicyOverlayValue: The policy overlay used during the replay. Keys are
      full resource names and the values are the policies to apply on these
      resources in the simulated state.

  Fields:
    logSource: The logs to use as input for the replay.
    policyOverlay: The policy overlay used during the replay. Keys are full
      resource names and the values are the policies to apply on these
      resources in the simulated state.
  """

  class LogSourceValueValuesEnum(_messages.Enum):
    r"""The logs to use as input for the replay.

    Values:
      LOG_SOURCE_UNSPECIFIED: An unspecified log source. Replay will default
        to using RECENT_ACCESSES.
      RECENT_ACCESSES: Retrieves the 5000 most recent accesses from the last
        90 days from an internal log source. Note that the log freshness (i.e.
        the date of the newest log entry) may be up to 7 days stale. In other
        words, an access attempt that only occurred within the past 7 days may
        not be captured by the replay.
    """
    LOG_SOURCE_UNSPECIFIED = 0
    RECENT_ACCESSES = 1

  @encoding.MapUnrecognizedFields('additionalProperties')
  class PolicyOverlayValue(_messages.Message):
    r"""The policy overlay used during the replay. Keys are full resource
    names and the values are the policies to apply on these resources in the
    simulated state.

    Messages:
      AdditionalProperty: An additional property for a PolicyOverlayValue
        object.

    Fields:
      additionalProperties: Additional properties of type PolicyOverlayValue
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a PolicyOverlayValue object.

      Fields:
        key: Name of the additional property.
        value: A GoogleIamV1Policy attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('GoogleIamV1Policy', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  logSource = _messages.EnumField('LogSourceValueValuesEnum', 1)
  policyOverlay = _messages.MessageField('PolicyOverlayValue', 2)


class GoogleIamAssistV1alpha3ReplayDiff(_messages.Message):
  r"""A successful replay of an AccessTuple that resulted in a difference
  between baseline and simulated.

  Fields:
    accessDiff: The difference in AccessState between replays.
  """

  accessDiff = _messages.MessageField('GoogleIamAssistV1alpha3AccessStateDiff', 1)


class GoogleIamAssistV1alpha3ReplayLogsMetadata(_messages.Message):
  r"""Metadata about the replayed log entries.

  Fields:
    differenceCount: Number of replayed log entries with a difference between
      baseline and simulated policies.
    errorCount: Number of log entries with an error during replay.
    logCount: Number of log entries replayed. log_count == unchanged_count +
      difference_count + error_count
    newestDate: Date of newest log entry replayed.
    oldestDate: Date of oldest log entry replayed.
    unchangedCount: Number of replayed log entries with no difference between
      baseline and simulated
  """

  differenceCount = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  errorCount = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  logCount = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  newestDate = _messages.MessageField('GoogleTypeDate', 4)
  oldestDate = _messages.MessageField('GoogleTypeDate', 5)
  unchangedCount = _messages.IntegerField(6, variant=_messages.Variant.INT32)


class GoogleIamAssistV1alpha3ReplayOperationMetadata(_messages.Message):
  r"""Metadata about a ReplayAccessLogs operation.

  Fields:
    startTime: Time when the request was received.
  """

  startTime = _messages.StringField(1)


class GoogleIamAssistV1alpha3ReplayResult(_messages.Message):
  r"""The result of replaying a single access tuple against a simulated state.

  Fields:
    accessTuple: The access replayed.
    diff: The tuple was successfully replayed and had a difference.
    error: The tuple was not successfully replayed.
    lastSeenDate: The late date this access was seen in the logs.
    name: The resource name of the replay result. Format:
      replays/{replay}/results/{replay_result}
    parent: The replay the access tuple was included in.
  """

  accessTuple = _messages.MessageField('GoogleIamAssistV1alpha3AccessTuple', 1)
  diff = _messages.MessageField('GoogleIamAssistV1alpha3ReplayDiff', 2)
  error = _messages.MessageField('GoogleRpcStatus', 3)
  lastSeenDate = _messages.MessageField('GoogleTypeDate', 4)
  name = _messages.StringField(5)
  parent = _messages.StringField(6)


class GoogleIamV1AuditConfig(_messages.Message):
  r"""Specifies the audit configuration for a service. The configuration
  determines which permission types are logged, and what identities, if any,
  are exempted from logging. An AuditConfig must have one or more
  AuditLogConfigs. If there are AuditConfigs for both `allServices` and a
  specific service, the union of the two AuditConfigs is used for that
  service: the log_types specified in each AuditConfig are enabled, and the
  exempted_members in each AuditLogConfig are exempted. Example Policy with
  multiple AuditConfigs: { "audit_configs": [ { "service": "allServices",
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type":
  "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com",
  "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type":
  "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For
  sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ
  logging. It also exempts jose@example.com from DATA_READ logging, and
  aliya@example.com from DATA_WRITE logging.

  Fields:
    auditLogConfigs: The configuration for logging of each type of permission.
    service: Specifies a service that will be enabled for audit logging. For
      example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
      `allServices` is a special value that covers all services.
  """

  auditLogConfigs = _messages.MessageField('GoogleIamV1AuditLogConfig', 1, repeated=True)
  service = _messages.StringField(2)


class GoogleIamV1AuditLogConfig(_messages.Message):
  r"""Provides the configuration for logging a type of permissions. Example: {
  "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [
  "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" } ] } This enables
  'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from
  DATA_READ logging.

  Enums:
    LogTypeValueValuesEnum: The log type that this config enables.

  Fields:
    exemptedMembers: Specifies the identities that do not cause logging for
      this type of permission. Follows the same format of Binding.members.
    logType: The log type that this config enables.
  """

  class LogTypeValueValuesEnum(_messages.Enum):
    r"""The log type that this config enables.

    Values:
      LOG_TYPE_UNSPECIFIED: Default case. Should never be this.
      ADMIN_READ: Admin reads. Example: CloudIAM getIamPolicy
      DATA_WRITE: Data writes. Example: CloudSQL Users create
      DATA_READ: Data reads. Example: CloudSQL Users list
    """
    LOG_TYPE_UNSPECIFIED = 0
    ADMIN_READ = 1
    DATA_WRITE = 2
    DATA_READ = 3

  exemptedMembers = _messages.StringField(1, repeated=True)
  logType = _messages.EnumField('LogTypeValueValuesEnum', 2)


class GoogleIamV1Binding(_messages.Message):
  r"""Associates `members` with a `role`.

  Fields:
    condition: The condition that is associated with this binding. If the
      condition evaluates to `true`, then this binding applies to the current
      request. If the condition evaluates to `false`, then this binding does
      not apply to the current request. However, a different role binding
      might grant the same role to one or more of the members in this binding.
      To learn which resources support conditions in their IAM policies, see
      the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
    members: Specifies the identities requesting access for a Cloud Platform
      resource. `members` can have the following values: * `allUsers`: A
      special identifier that represents anyone who is on the internet; with
      or without a Google account. * `allAuthenticatedUsers`: A special
      identifier that represents anyone who is authenticated with a Google
      account or a service account. * `user:{emailid}`: An email address that
      represents a specific Google account. For example, `alice@example.com` .
      * `serviceAccount:{emailid}`: An email address that represents a service
      account. For example, `my-other-app@appspot.gserviceaccount.com`. *
      `group:{emailid}`: An email address that represents a Google group. For
      example, `admins@example.com`. *
      `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
      identifier) representing a user that has been recently deleted. For
      example, `alice@example.com?uid=123456789012345678901`. If the user is
      recovered, this value reverts to `user:{emailid}` and the recovered user
      retains the role in the binding. *
      `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address
      (plus unique identifier) representing a service account that has been
      recently deleted. For example, `my-other-
      app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the
      service account is undeleted, this value reverts to
      `serviceAccount:{emailid}` and the undeleted service account retains the
      role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An
      email address (plus unique identifier) representing a Google group that
      has been recently deleted. For example,
      `admins@example.com?uid=123456789012345678901`. If the group is
      recovered, this value reverts to `group:{emailid}` and the recovered
      group retains the role in the binding. * `domain:{domain}`: The G Suite
      domain (primary) that represents all the users of that domain. For
      example, `google.com` or `example.com`.
    role: Role that is assigned to `members`. For example, `roles/viewer`,
      `roles/editor`, or `roles/owner`.
  """

  condition = _messages.MessageField('GoogleTypeExpr', 1)
  members = _messages.StringField(2, repeated=True)
  role = _messages.StringField(3)


class GoogleIamV1Policy(_messages.Message):
  r"""An Identity and Access Management (IAM) policy, which specifies access
  controls for Google Cloud resources. A `Policy` is a collection of
  `bindings`. A `binding` binds one or more `members` to a single `role`.
  Members can be user accounts, service accounts, Google groups, and domains
  (such as G Suite). A `role` is a named list of permissions; each `role` can
  be an IAM predefined role or a user-created custom role. For some types of
  Google Cloud resources, a `binding` can also specify a `condition`, which is
  a logical expression that allows access to a resource only if the expression
  evaluates to `true`. A condition can add constraints based on attributes of
  the request, the resource, or both. To learn which resources support
  conditions in their IAM policies, see the [IAM
  documentation](https://cloud.google.com/iam/help/conditions/resource-
  policies). **JSON example:** { "bindings": [ { "role":
  "roles/resourcemanager.organizationAdmin", "members": [
  "user:mike@example.com", "group:admins@example.com", "domain:google.com",
  "serviceAccount:my-project-id@appspot.gserviceaccount.com" ] }, { "role":
  "roles/resourcemanager.organizationViewer", "members": [
  "user:eve@example.com" ], "condition": { "title": "expirable access",
  "description": "Does not grant access after Sep 2020", "expression":
  "request.time < timestamp('2020-10-01T00:00:00.000Z')", } } ], "etag":
  "BwWWja0YfJA=", "version": 3 } **YAML example:** bindings: - members: -
  user:mike@example.com - group:admins@example.com - domain:google.com -
  serviceAccount:my-project-id@appspot.gserviceaccount.com role:
  roles/resourcemanager.organizationAdmin - members: - user:eve@example.com
  role: roles/resourcemanager.organizationViewer condition: title: expirable
  access description: Does not grant access after Sep 2020 expression:
  request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= -
  version: 3 For a description of IAM and its features, see the [IAM
  documentation](https://cloud.google.com/iam/docs/).

  Fields:
    auditConfigs: Specifies cloud audit logging configuration for this policy.
    bindings: Associates a list of `members` to a `role`. Optionally, may
      specify a `condition` that determines how and when the `bindings` are
      applied. Each of the `bindings` must contain at least one member.
    etag: `etag` is used for optimistic concurrency control as a way to help
      prevent simultaneous updates of a policy from overwriting each other. It
      is strongly suggested that systems make use of the `etag` in the read-
      modify-write cycle to perform policy updates in order to avoid race
      conditions: An `etag` is returned in the response to `getIamPolicy`, and
      systems are expected to put that etag in the request to `setIamPolicy`
      to ensure that their change will be applied to the same version of the
      policy. **Important:** If you use IAM Conditions, you must include the
      `etag` field whenever you call `setIamPolicy`. If you omit this field,
      then IAM allows you to overwrite a version `3` policy with a version `1`
      policy, and all of the conditions in the version `3` policy are lost.
    version: Specifies the format of the policy. Valid values are `0`, `1`,
      and `3`. Requests that specify an invalid value are rejected. Any
      operation that affects conditional role bindings must specify version
      `3`. This requirement applies to the following operations: * Getting a
      policy that includes a conditional role binding * Adding a conditional
      role binding to a policy * Changing a conditional role binding in a
      policy * Removing any role binding, with or without a condition, from a
      policy that includes conditions **Important:** If you use IAM
      Conditions, you must include the `etag` field whenever you call
      `setIamPolicy`. If you omit this field, then IAM allows you to overwrite
      a version `3` policy with a version `1` policy, and all of the
      conditions in the version `3` policy are lost. If a policy does not
      include any conditions, operations on that policy may specify any valid
      version or leave the field unset. To learn which resources support
      conditions in their IAM policies, see the [IAM
      documentation](https://cloud.google.com/iam/help/conditions/resource-
      policies).
  """

  auditConfigs = _messages.MessageField('GoogleIamV1AuditConfig', 1, repeated=True)
  bindings = _messages.MessageField('GoogleIamV1Binding', 2, repeated=True)
  etag = _messages.BytesField(3)
  version = _messages.IntegerField(4, variant=_messages.Variant.INT32)


class GoogleLongrunningListOperationsResponse(_messages.Message):
  r"""The response message for Operations.ListOperations.

  Fields:
    nextPageToken: The standard List next-page token.
    operations: A list of operations that matches the specified filter in the
      request.
  """

  nextPageToken = _messages.StringField(1)
  operations = _messages.MessageField('GoogleLongrunningOperation', 2, repeated=True)


class GoogleLongrunningOperation(_messages.Message):
  r"""This resource represents a long-running operation that is the result of
  a network API call.

  Messages:
    MetadataValue: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    ResponseValue: The normal response of the operation in case of success. If
      the original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

  Fields:
    done: If the value is `false`, it means the operation is still in
      progress. If `true`, the operation is completed, and either `error` or
      `response` is available.
    error: The error result of the operation in case of failure or
      cancellation.
    metadata: Service-specific metadata associated with the operation. It
      typically contains progress information and common metadata such as
      create time. Some services might not provide such metadata. Any method
      that returns a long-running operation should document the metadata type,
      if any.
    name: The server-assigned name, which is only unique within the same
      service that originally returns it. If you use the default HTTP mapping,
      the `name` should be a resource name ending with
      `operations/{unique_id}`.
    response: The normal response of the operation in case of success. If the
      original method returns no data on success, such as `Delete`, the
      response is `google.protobuf.Empty`. If the original method is standard
      `Get`/`Create`/`Update`, the response should be the resource. For other
      methods, the response should have the type `XxxResponse`, where `Xxx` is
      the original method name. For example, if the original method name is
      `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class MetadataValue(_messages.Message):
    r"""Service-specific metadata associated with the operation. It typically
    contains progress information and common metadata such as create time.
    Some services might not provide such metadata. Any method that returns a
    long-running operation should document the metadata type, if any.

    Messages:
      AdditionalProperty: An additional property for a MetadataValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a MetadataValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  @encoding.MapUnrecognizedFields('additionalProperties')
  class ResponseValue(_messages.Message):
    r"""The normal response of the operation in case of success. If the
    original method returns no data on success, such as `Delete`, the response
    is `google.protobuf.Empty`. If the original method is standard
    `Get`/`Create`/`Update`, the response should be the resource. For other
    methods, the response should have the type `XxxResponse`, where `Xxx` is
    the original method name. For example, if the original method name is
    `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.

    Messages:
      AdditionalProperty: An additional property for a ResponseValue object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a ResponseValue object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  done = _messages.BooleanField(1)
  error = _messages.MessageField('GoogleRpcStatus', 2)
  metadata = _messages.MessageField('MetadataValue', 3)
  name = _messages.StringField(4)
  response = _messages.MessageField('ResponseValue', 5)


class GoogleRpcStatus(_messages.Message):
  r"""The `Status` type defines a logical error model that is suitable for
  different programming environments, including REST APIs and RPC APIs. It is
  used by [gRPC](https://github.com/grpc). Each `Status` message contains
  three pieces of data: error code, error message, and error details. You can
  find out more about this error model and how to work with it in the [API
  Design Guide](https://cloud.google.com/apis/design/errors).

  Messages:
    DetailsValueListEntry: A DetailsValueListEntry object.

  Fields:
    code: The status code, which should be an enum value of google.rpc.Code.
    details: A list of messages that carry the error details. There is a
      common set of message types for APIs to use.
    message: A developer-facing error message, which should be in English. Any
      user-facing error message should be localized and sent in the
      google.rpc.Status.details field, or localized by the client.
  """

  @encoding.MapUnrecognizedFields('additionalProperties')
  class DetailsValueListEntry(_messages.Message):
    r"""A DetailsValueListEntry object.

    Messages:
      AdditionalProperty: An additional property for a DetailsValueListEntry
        object.

    Fields:
      additionalProperties: Properties of the object. Contains field @type
        with type URL.
    """

    class AdditionalProperty(_messages.Message):
      r"""An additional property for a DetailsValueListEntry object.

      Fields:
        key: Name of the additional property.
        value: A extra_types.JsonValue attribute.
      """

      key = _messages.StringField(1)
      value = _messages.MessageField('extra_types.JsonValue', 2)

    additionalProperties = _messages.MessageField('AdditionalProperty', 1, repeated=True)

  code = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  details = _messages.MessageField('DetailsValueListEntry', 2, repeated=True)
  message = _messages.StringField(3)


class GoogleTypeDate(_messages.Message):
  r"""Represents a whole or partial calendar date, such as a birthday. The
  time of day and time zone are either specified elsewhere or are
  insignificant. The date is relative to the Gregorian Calendar. This can
  represent one of the following: * A full date, with non-zero year, month,
  and day values * A month and day value, with a zero year, such as an
  anniversary * A year on its own, with zero month and day values * A year and
  month value, with a zero day, such as a credit card expiration date Related
  types are google.type.TimeOfDay and `google.protobuf.Timestamp`.

  Fields:
    day: Day of a month. Must be from 1 to 31 and valid for the year and
      month, or 0 to specify a year by itself or a year and month where the
      day isn't significant.
    month: Month of a year. Must be from 1 to 12, or 0 to specify a year
      without a month and day.
    year: Year of the date. Must be from 1 to 9999, or 0 to specify a date
      without a year.
  """

  day = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  month = _messages.IntegerField(2, variant=_messages.Variant.INT32)
  year = _messages.IntegerField(3, variant=_messages.Variant.INT32)


class GoogleTypeExpr(_messages.Message):
  r"""Represents a textual expression in the Common Expression Language (CEL)
  syntax. CEL is a C-like expression language. The syntax and semantics of CEL
  are documented at https://github.com/google/cel-spec. Example (Comparison):
  title: "Summary size limit" description: "Determines if a summary is less
  than 100 chars" expression: "document.summary.size() < 100" Example
  (Equality): title: "Requestor is owner" description: "Determines if
  requestor is the document owner" expression: "document.owner ==
  request.auth.claims.email" Example (Logic): title: "Public documents"
  description: "Determine whether the document should be publicly visible"
  expression: "document.type != 'private' && document.type != 'internal'"
  Example (Data Manipulation): title: "Notification string" description:
  "Create a notification string with a timestamp." expression: "'New message
  received at ' + string(document.create_time)" The exact variables and
  functions that may be referenced within an expression are determined by the
  service that evaluates it. See the service documentation for additional
  information.

  Fields:
    description: Optional. Description of the expression. This is a longer
      text which describes the expression, e.g. when hovered over it in a UI.
    expression: Textual representation of an expression in Common Expression
      Language syntax.
    location: Optional. String indicating the location of the expression for
      error reporting, e.g. a file name and a position in the file.
    title: Optional. Title for the expression, i.e. a short string describing
      its purpose. This can be used e.g. in UIs which allow to enter the
      expression.
  """

  description = _messages.StringField(1)
  expression = _messages.StringField(2)
  location = _messages.StringField(3)
  title = _messages.StringField(4)


class IamassistOperationsGetRequest(_messages.Message):
  r"""A IamassistOperationsGetRequest object.

  Fields:
    name: The name of the operation resource.
  """

  name = _messages.StringField(1, required=True)


class IamassistOperationsListRequest(_messages.Message):
  r"""A IamassistOperationsListRequest object.

  Fields:
    filter: The standard list filter.
    name: The name of the operation's parent resource.
    pageSize: The standard list page size.
    pageToken: The standard list page token.
  """

  filter = _messages.StringField(1)
  name = _messages.StringField(2)
  pageSize = _messages.IntegerField(3, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(4)


class IamassistReplaysGetRequest(_messages.Message):
  r"""A IamassistReplaysGetRequest object.

  Fields:
    name: Required. The name of the replay to retrieve. Format:
      replays/{replay}
  """

  name = _messages.StringField(1, required=True)


class IamassistReplaysListRequest(_messages.Message):
  r"""A IamassistReplaysListRequest object.

  Fields:
    pageSize: The maximum number of `Replays` to return. The default value and
      maximum value are undetermined during alpha.
    pageToken: A page token, received from a previous `ListReplays` call.
      Provide this to retrieve the subsequent page. When paginating, all other
      parameters provided to `ListReplays` must match the call that provided
      the page token.
  """

  pageSize = _messages.IntegerField(1, variant=_messages.Variant.INT32)
  pageToken = _messages.StringField(2)


class IamassistReplaysResultsExportRequest(_messages.Message):
  r"""A IamassistReplaysResultsExportRequest object.

  Fields:
    googleIamAssistV1alpha3ExportReplayResultsRequest: A
      GoogleIamAssistV1alpha3ExportReplayResultsRequest resource to be passed
      as the request body.
    parent: Required. The replay to export results for. Format:
      replays/{replay}
  """

  googleIamAssistV1alpha3ExportReplayResultsRequest = _messages.MessageField('GoogleIamAssistV1alpha3ExportReplayResultsRequest', 1)
  parent = _messages.StringField(2, required=True)


class StandardQueryParameters(_messages.Message):
  r"""Query parameters accepted by all methods.

  Enums:
    FXgafvValueValuesEnum: V1 error format.
    AltValueValuesEnum: Data format for response.

  Fields:
    f__xgafv: V1 error format.
    access_token: OAuth access token.
    alt: Data format for response.
    callback: JSONP
    fields: Selector specifying which fields to include in a partial response.
    key: API key. Your API key identifies your project and provides you with
      API access, quota, and reports. Required unless you provide an OAuth 2.0
      token.
    oauth_token: OAuth 2.0 token for the current user.
    prettyPrint: Returns response with indentations and line breaks.
    quotaUser: Available to use for quota purposes for server-side
      applications. Can be any arbitrary string assigned to a user, but should
      not exceed 40 characters.
    trace: A tracing token of the form "token:<tokenid>" to include in api
      requests.
    uploadType: Legacy upload protocol for media (e.g. "media", "multipart").
    upload_protocol: Upload protocol for media (e.g. "raw", "multipart").
  """

  class AltValueValuesEnum(_messages.Enum):
    r"""Data format for response.

    Values:
      json: Responses with Content-Type of application/json
      media: Media download with context-dependent Content-Type
      proto: Responses with Content-Type of application/x-protobuf
    """
    json = 0
    media = 1
    proto = 2

  class FXgafvValueValuesEnum(_messages.Enum):
    r"""V1 error format.

    Values:
      _1: v1 error format
      _2: v2 error format
    """
    _1 = 0
    _2 = 1

  f__xgafv = _messages.EnumField('FXgafvValueValuesEnum', 1)
  access_token = _messages.StringField(2)
  alt = _messages.EnumField('AltValueValuesEnum', 3, default='json')
  callback = _messages.StringField(4)
  fields = _messages.StringField(5)
  key = _messages.StringField(6)
  oauth_token = _messages.StringField(7)
  prettyPrint = _messages.BooleanField(8, default=True)
  quotaUser = _messages.StringField(9)
  trace = _messages.StringField(10)
  uploadType = _messages.StringField(11)
  upload_protocol = _messages.StringField(12)


encoding.AddCustomJsonFieldMapping(
    StandardQueryParameters, 'f__xgafv', '$.xgafv')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_1', '1')
encoding.AddCustomJsonEnumMapping(
    StandardQueryParameters.FXgafvValueValuesEnum, '_2', '2')
