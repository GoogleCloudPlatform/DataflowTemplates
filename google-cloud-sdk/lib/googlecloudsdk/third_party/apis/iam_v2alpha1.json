{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "iam:v2alpha1",
  "name": "iam",
  "canonicalName": "iam",
  "version": "v2alpha1",
  "revision": "0",
  "title": "Identity and Access Management (IAM) API",
  "description": " Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. *Note:* This API is tied to the IAM service account credentials API ( iamcredentials.googleapis.com). Enabling or disabling this API will also enable or disable the IAM service account credentials API. ",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/iam/",
  "protocol": "rest",
  "rootUrl": "https://iam.googleapis.com/",
  "mtlsRootUrl": "https://iam.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://iam.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleIamV2alpha1ListPoliciesResponse": {
      "id": "GoogleIamV2alpha1ListPoliciesResponse",
      "description": "Response message for ListPolicies method.",
      "type": "object",
      "properties": {
        "policies": {
          "description": "The collection of policy metadata that are attached on the resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV2alpha1Policy"
          }
        }
      }
    },
    "GoogleIamV2alpha1Policy": {
      "id": "GoogleIamV2alpha1Policy",
      "description": "Represents policy data.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. The resource name of the `Policy`. Takes the form: `policies\/{attachment-point}\/{kind-plural}\/{policy-id}` For example, `policies\/cloudresourcemanager.googleapis.com%2Fprojects%2F123\/denypolicies\/a-deny-policy`.",
          "type": "string"
        },
        "kind": {
          "description": "Output only. The kind of the `Policy`, following the rules.",
          "readOnly": true,
          "type": "string"
        },
        "description": {
          "description": "A user-specified opaque description of the `Policy`. Must be less than or equal to 256 characters.",
          "type": "string"
        },
        "etag": {
          "description": "An opaque tag indicating the current version of the `Policy`, used for concurrency control. When the `Policy` is returned from `GetPolicy` request, this `etag` indicates the version of the current `Policy` to use when executing a read-modify-write loop. When the `Policy` is used in a `ReplacePolicy` method, use the `etag` value that was returned from a `GetPolicy` request as part of a read-modify-write loop for concurrency control. This field is ignored if used in a `CreatePolicy` request.",
          "type": "string"
        },
        "rules": {
          "description": "List of rules that specify the behavior of the `Policy`.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV2alpha1PolicyRule"
          }
        }
      }
    },
    "GoogleIamV2alpha1PolicyRule": {
      "id": "GoogleIamV2alpha1PolicyRule",
      "description": "A single rule in a `Policy`.",
      "type": "object",
      "properties": {
        "description": {
          "description": "A user-specified opaque description of the rule. Must be less than or equal to 256 UTF-8 characters.",
          "type": "string"
        },
        "denyRule": {
          "description": "Specification of a Deny `Policy`.",
          "$ref": "GoogleIamV2alpha1DenyRule"
        }
      }
    },
    "GoogleIamV2alpha1DenyRule": {
      "id": "GoogleIamV2alpha1DenyRule",
      "description": "Iam Deny Policy Rule.",
      "type": "object",
      "properties": {
        "deniedPrincipals": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource, which are subject to the deny rule. `denied_principals` can have the following values: * `principalSet:\/\/goog\/public:all`: A special identifier that represents any user who is on the internet; logged in, or loggerd out, with or without a Google account.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exceptionPrincipals": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource, which are excluded from the deny rule. `exception_principals` can have the following values: * Google and G Suite user accounts: -- `principal:\/\/goog\/subject\/{emailId}`: An email address that represents a specific Google account. For example, `principal:\/\/goog\/subject\/alice@gmail.com`. * Google and G Suite groups: -- `principalSet:\/\/goog\/group\/{groupId}`: An identifier that represents a Google group. For example, `principalSet:\/\/goog\/group\/admins@example.com`. * Service Accounts: -- `principal:\/\/iam.googleapis.com\/projects\/-\/serviceAccounts\/{serviceAccountId}`: An identifier that represents a service account. For example, `principal:\/\/iam.googleapis.com\/projects\/-\/serviceAccounts\/sa123@iam.gserviceaccount.com`. * G Suite Customers: -- `principalSet:\/\/goog\/gsuiteCustomerId\/{customerId}`: All of the principals associated with the specified G Suite Customer ID. For example, `principalSet:\/\/goog\/gsuiteCustomerId\/C01Abc35`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deniedPermissions": {
          "description": "Specifies the permissions that are explicitly denied by this rule. The denied permission can be specified in the following ways: * a full permission string in either of the following canonical formats as described in the service specific documentation: -- `{service}.{resource}.{verb}`. For example, `storage.buckets.get`. -- `{service_FQDN}\/{resource}.{verb}`. For example, `iam.googleapis.com\/denypolicies.get`. * a wildcard on permission string. -- `*` represents all permissions. Permission string can use more than one wildcard over multiple segments in the permission string. However, it must match the entire segment and no partial matches within a segment is allowed. For example, -- `compute.*.setIamPolicy` refers to all setIamPolicy permissions by any compute resources. -- `iam.googleapis.com\/*.create\"` refers to all create permissions by any iam resources. -- `compute.forwardingRules.*` refers to all permissions for forwarding rules. -- `compute.*.*` refers to all permissions by all compute resource types.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exceptionPermissions": {
          "description": "Specifies the permissions that are excluded from the set of denied permissions given by `denied_permissions`. If a permission appears in `denied_permissions` _and_ in `excluded_permissions` then it will _not_ be denied. The excluded permissions can be specified using the same syntax as `denied_permissions`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "denialCondition": {
          "description": "The condition that is associated with this deny rule. NOTE: A satisfied condition will explicitly deny access for applicable principal, permission, and resource. Different deny rules, including their conditions, are examined independently.",
          "$ref": "GoogleTypeExpr"
        }
      }
    },
    "GoogleTypeExpr": {
      "id": "GoogleTypeExpr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleIamAdminV1AuditData": {
      "id": "GoogleIamAdminV1AuditData",
      "description": "Audit log information specific to Cloud IAM admin APIs. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.",
      "type": "object",
      "properties": {
        "permissionDelta": {
          "description": "The permission_delta when when creating or updating a Role.",
          "$ref": "GoogleIamAdminV1AuditDataPermissionDelta"
        }
      }
    },
    "GoogleIamAdminV1AuditDataPermissionDelta": {
      "id": "GoogleIamAdminV1AuditDataPermissionDelta",
      "description": "A PermissionDelta message to record the added_permissions and removed_permissions inside a role.",
      "type": "object",
      "properties": {
        "addedPermissions": {
          "description": "Added permissions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "removedPermissions": {
          "description": "Removed permissions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleIamV1LoggingAuditData": {
      "id": "GoogleIamV1LoggingAuditData",
      "description": "Audit log information specific to Cloud IAM. This message is serialized as an `Any` type in the `ServiceData` message of an `AuditLog` message.",
      "type": "object",
      "properties": {
        "policyDelta": {
          "description": "Policy delta between the original policy and the newly set policy.",
          "$ref": "GoogleIamV1PolicyDelta"
        }
      }
    },
    "GoogleIamV1PolicyDelta": {
      "id": "GoogleIamV1PolicyDelta",
      "description": "The difference delta between two policies.",
      "type": "object",
      "properties": {
        "bindingDeltas": {
          "description": "The delta for Bindings between two policies.",
          "type": "array",
          "items": {
            "$ref": "GoogleIamV1BindingDelta"
          }
        }
      }
    },
    "GoogleIamV1BindingDelta": {
      "id": "GoogleIamV1BindingDelta",
      "description": "One delta entry for Binding. Each individual change (only one member in each entry) to a binding will be a separate entry.",
      "type": "object",
      "properties": {
        "action": {
          "description": "The action that was performed on a Binding. Required",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Addition of a Binding.",
            "Removal of a Binding."
          ],
          "enum": [
            "ACTION_UNSPECIFIED",
            "ADD",
            "REMOVE"
          ]
        },
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`. Required",
          "type": "string"
        },
        "member": {
          "description": "A single identity requesting access for a Cloud Platform resource. Follows the same format of Binding.members. Required",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding.",
          "$ref": "GoogleTypeExpr"
        }
      }
    }
  },
  "resources": {
    "policies": {
      "methods": {
        "listPolicies": {
          "id": "iam.policies.listPolicies",
          "path": "v2alpha1/{+parent}",
          "flatPath": "v2alpha1/policies/{policiesId}/{policiesId1}",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Required. The Cloud resource that the policy is attached to. Takes the form: `policies\/{attachment-point}\/{kind-plural}`",
              "location": "path",
              "required": true,
              "pattern": "^policies\/[^\/]+\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "GoogleIamV2alpha1ListPoliciesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves all of the policies attached to the specified resource, of the given kind. Only policy metadata is listed; specifically `policy.rules` is omitted."
        },
        "get": {
          "id": "iam.policies.get",
          "path": "v2alpha1/{+name}",
          "flatPath": "v2alpha1/policies/{policiesId}/{policiesId1}/{policiesId2}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. Resource name of the policy to retrieve.",
              "location": "path",
              "required": true,
              "pattern": "^policies\/[^\/]+\/[^\/]+\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleIamV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets a policy."
        },
        "createPolicy": {
          "id": "iam.policies.createPolicy",
          "path": "v2alpha1/{+parent}",
          "flatPath": "v2alpha1/policies/{policiesId}/{policiesId1}",
          "httpMethod": "POST",
          "parameters": {
            "parent": {
              "description": "Required. The Cloud resource the new Policy is attached to. Takes the form: `policies\/{attachment-point}\/{kind-plural}`",
              "location": "path",
              "required": true,
              "pattern": "^policies\/[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "policyId": {
              "description": "The ID to use for this policy, which will become the final component of the policy's resource name. Must match a-z{3,63}.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "parent"
          ],
          "request": {
            "$ref": "GoogleIamV2alpha1Policy"
          },
          "response": {
            "$ref": "GoogleIamV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a policy. All the policies attached to a specific resource must have unique IDs."
        },
        "replacePolicy": {
          "id": "iam.policies.replacePolicy",
          "path": "v2alpha1/{+name}",
          "flatPath": "v2alpha1/policies/{policiesId}/{policiesId1}/{policiesId2}",
          "httpMethod": "PUT",
          "parameters": {
            "name": {
              "description": "Immutable. The resource name of the `Policy`. Takes the form: `policies\/{attachment-point}\/{kind-plural}\/{policy-id}` For example, `policies\/cloudresourcemanager.googleapis.com%2Fprojects%2F123\/denypolicies\/a-deny-policy`.",
              "location": "path",
              "required": true,
              "pattern": "^policies\/[^\/]+\/[^\/]+\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "GoogleIamV2alpha1Policy"
          },
          "response": {
            "$ref": "GoogleIamV2alpha1Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Replaces the specified existing policy. Only `Policy.rules` and `Policy.description` may be updated. Need to provide etag to enforce update from last read for optimistic concurrency control."
        },
        "delete": {
          "id": "iam.policies.delete",
          "path": "v2alpha1/{+name}",
          "flatPath": "v2alpha1/policies/{policiesId}/{policiesId1}/{policiesId2}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Required. Resource name of the policy to delete.",
              "location": "path",
              "required": true,
              "pattern": "^policies\/[^\/]+\/[^\/]+\/[^\/]+$",
              "type": "string"
            },
            "etag": {
              "description": "The expected etag of the policy to delete. If the policy was modified concurrently such that the etag changed, the delete operation will fail.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a policy."
        }
      }
    }
  },
  "basePath": ""
}