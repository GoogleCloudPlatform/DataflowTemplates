<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  ~ Copyright (C) 2019 Google Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not
  ~ use this file except in compliance with the License. You may obtain a copy of
  ~ the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
  ~ License for the specific language governing permissions and limitations under
  ~ the License.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <artifactId>syndeo-template</artifactId>
    <groupId>com.google.cloud.teleport.syndeo</groupId>
    <version>1.0-SNAPSHOT</version>
    <modelVersion>4.0.0</modelVersion>

    <properties>
        <auto-value.version>1.9</auto-value.version>
        <avro.version>1.8.2</avro.version>
        <beam.version>2.44.0</beam.version>
        <bigtable.version>1.15.0</bigtable.version>
        <bigquery.version>2.9.0</bigquery.version>
        <commons.version>1.8</commons.version>
        <commons-text.version>1.10.0</commons-text.version>
        <libraries-bom.version>26.1.5</libraries-bom.version>
        <spotless-maven-plugin.version>2.12.1</spotless-maven-plugin.version>
        <java.version>11</java.version>
        <kafka.version>2.4.1</kafka.version>
        <maven-compiler-plugin.version>3.6.2</maven-compiler-plugin.version>
        <os-maven-plugin.version>1.5.0.Final</os-maven-plugin.version>
        <protobuf.version>3.21.9</protobuf.version>
        <truth.version>1.0.1</truth.version>
        <secretmanager.version>2.1.2</secretmanager.version>
        <slf4j.version>1.7.25</slf4j.version>
        <jib.maven.version>2.6.0</jib.maven.version>
        <skipTests>false</skipTests>
        <skipUnitTests>${skipTests}</skipUnitTests>
        <skipIntegrationTests>${skipTests}</skipIntegrationTests>
        <surefire.version>2.21.0</surefire.version>
        <maven-shade-plugin.version>3.0.0</maven-shade-plugin.version>
    </properties>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.beam</groupId>
                <artifactId>beam-sdks-java-bom</artifactId>
                <version>${beam.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
                <dependency>
                    <groupId>com.google.cloud</groupId>
                    <artifactId>libraries-bom</artifactId>
                    <version>${libraries-bom.version}</version>
                    <type>pom</type>
                    <scope>import</scope>
                </dependency>
            <dependency>
                <groupId>com.google.api-client</groupId>
                <artifactId>google-api-client</artifactId>
                <version>1.35.2</version>
            </dependency>

        </dependencies>
    </dependencyManagement>
    <!-- TODO(pabloem): Remove the following section before full support.
    Leave it in for development-->
    <profiles>
      <profile>
        <id>oss-build</id>
        <activation>
          <activeByDefault>true</activeByDefault>
        </activation>
        <repositories>
          <repository>
            <id>apache.snapshots</id>
            <url>https://repository.apache.org/content/repositories/snapshots</url>
          </repository>
        </repositories>
     </profile>
     <profile>
       <id>integrationtests</id>
       <activation>
         <activeByDefault>true</activeByDefault>
       </activation>
       <build>
         <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*Test</exclude>
                    </excludes>
                    <skipTests>${skipIntegrationTests}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
              </plugin>
            </plugins>
       </build>
     </profile>
     <profile>
       <id>load-tests</id>
        <activation>
          <activeByDefault>false</activeByDefault>
        </activation>
        <properties>
          <!-- Deactivating the integration-tests profile to run only load tests -->
          <integrationtests>false</integrationtests>
          <skipUnitTests>true</skipUnitTests>
        </properties>
       <build>
         <plugins>
           <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.0.0-M7</version>
                    <configuration>
                        <includes>
                            <include>**/*LT.java</include>
                            <include>**/*LT</include>
                        </includes>
                    <excludes>
                        <exclude>**/*Test</exclude>
                        <exclude>**/*IT</exclude>
                    </excludes>
              <groups>
                com.google.cloud.teleport.metadata.TemplateLoadTest
              </groups>
                    </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                        </goals>
                    </execution>
                </executions>
                </plugin>
         </plugins>
       </build>
     </profile>
   </profiles>

    <dependencies>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-core</artifactId>
            <version>${beam.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-io-google-cloud-platform</artifactId>
            <version>2.46.0-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-io-kafka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-sdks-java-extensions-google-cloud-platform-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-google-cloud-dataflow-java</artifactId>
        </dependency>
        <dependency>
            <!-- Direct runner included for local development and testing. -->
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-runners-direct-java</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.beam</groupId>
            <artifactId>beam-vendor-guava-26_0-jre</artifactId>
            <version>0.1</version>
        </dependency>

        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protoc</artifactId>
            <version>${protobuf.version}</version>
            <type>pom</type>
        </dependency>

        <dependency>
            <groupId>com.google.auto.service</groupId>
            <artifactId>auto-service-annotations</artifactId>
            <version>1.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value-annotations</artifactId>
            <version>${auto-value.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value</artifactId>
            <version>${auto-value.version}</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>com.google.apis</groupId>
            <artifactId>google-api-services-bigquery</artifactId>
            <version>v2-rev459-1.25.0</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.cloud</groupId>
            <artifactId>google-cloud-bigtable</artifactId>
            <version>2.10.3</version>
        </dependency>

        <dependency>
            <groupId>org.apache.arrow</groupId>
            <artifactId>arrow-memory-unsafe</artifactId>
            <version>9.0.0</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>com.google.truth</groupId>
            <artifactId>truth</artifactId>
            <version>${truth.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.google.cloud.teleport</groupId>
            <artifactId>integration-testing-lib</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>gcloud</artifactId>
            <version>1.17.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>3.7.7</version>
            <scope>test</scope>
        </dependency>
	    <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <version>1.17.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>${os-maven-plugin.version}</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <parameters>true</parameters>
                    <testCompilerArgument>-parameters</testCompilerArgument>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>com.google.auto.service</groupId>
                            <artifactId>auto-service</artifactId>
                            <version>1.0.1</version>
                        </path>
			<path>
            <groupId>com.google.auto.value</groupId>
            <artifactId>auto-value</artifactId>
            <version>${auto-value.version}</version>
          </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <configuration>
                    <skipTests>${skipUnitTests}</skipTests>
                    <excludes>
                        <exclude>**/*IT.java</exclude>
                        <exclude>**/*LT.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven-shade-plugin.version}</version>
                <executions>
                    <execution>
                        <id>bundle-and-repackage</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadeTestJar>true</shadeTestJar>
                            <artifactSet>
                                <includes>
                                    <include>*:*</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <!-- This configuration is required to make sure that the shaded uber JAR is not losing
                                AutoService/ServiceLoader information when copying over packages from all dependencies
                                into META-INF/services
                                https://maven.apache.org/plugins/maven-shade-plugin/examples/resource-transformers.html
                                t
                                -->
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.xolstice.maven.plugins</groupId>
                <artifactId>protobuf-maven-plugin</artifactId>
                <version>0.6.1</version>
                <configuration>
                    <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
                    </protocArtifact>
                    <writeDescriptorSet>true</writeDescriptorSet>
                    <includeDependenciesInDescriptorSet>true</includeDependenciesInDescriptorSet>
                    <descriptorSetFileName>schema.pb</descriptorSetFileName>
                    <!-- This path must be unique, or else it may delete existing files. -->
                    <descriptorSetOutputDirectory>${basedir}/target/generated-test-sources/protobuf/schema
                    </descriptorSetOutputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test-compile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
                <version>${spotless-maven-plugin.version}</version>
                <configuration>
                    <formats>
                        <!-- Avoid trailing whitespace and require ending newline. -->
                        <format>
                            <includes>
                                <include>*.md</include>
                                <include>.gitignore</include>
                            </includes>
                            <trimTrailingWhitespace/>
                            <endWithNewline/>
                        </format>
                    </formats>
                    <java>
                        <!-- Exclude Beam code from formatting/license headers -->
                        <excludes>
                            <exclude>src/main/java/org/apache/beam/**</exclude>
                            <exclude>src/test/java/org/apache/beam/**</exclude>
                        </excludes>
                        <toggleOffOn/>
                        <googleJavaFormat>
                            <version>1.8</version>
                            <style>GOOGLE</style>
                        </googleJavaFormat>
                        <licenseHeader>
                            <file>JAVA_LICENSE_HEADER</file>
                        </licenseHeader>
                    </java>
                </configuration>
                <!-- Bind to verify. -->
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.maven.version}</version>
                <configuration>
                    <from>
                        <image>${base-container-image}:${base-container-image.version}</image>
                    </from>
                    <container>
                        <!--
                        The root directory to use to expand the compiled classes and dependencies in. The
                        Jib plugin  will create the following directories under this root:
                            - resources: All the files under src/resources will be copied to this folder as-is.
                            - libs: All dependency jars needed to execute this pipeline will be copied into this
                                    folder.
                            - classes: Compiled pipeline code will be copied into this folder.
                        The libs and classes folders under appRoot should thus be added in the classpath
                        defined in src/resources/command-spec.json.
                        -->
                        <appRoot>${app-root}</appRoot>
                        <!--
                        INHERIT the base containers entrypoint. Do not override or the Dataflow service
                        will be unable to launch this template.
                        -->
                        <entrypoint>INHERIT</entrypoint>
                        <environment>
                            <!--
                            Set an environment variable called DATAFLOW_JAVA_COMMAND_SPEC that points to the
                            java-command-spec.json file inside the container. Note that since the Jib plugin
                            copies the containers of src/resources/* to appRoot/resources, the value of this
                            environment variable can be set here.
                            -->
                            <DATAFLOW_JAVA_COMMAND_SPEC>
                                ${command-spec}
                            </DATAFLOW_JAVA_COMMAND_SPEC>
                        </environment>
                    </container>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
