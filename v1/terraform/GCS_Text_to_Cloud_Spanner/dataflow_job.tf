

# Autogenerated file. DO NOT EDIT.
#
# Copyright (C) 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#


variable "on_delete" {
  type        = string
  description = "One of \"drain\" or \"cancel\". Specifies behavior of deletion during terraform destroy."
}

variable "project" {
  type        = string
  description = "The Google Cloud Project ID within which this module provisions resources."
}

variable "region" {
  type        = string
  description = "The region in which the created job should run."
}

variable "instanceId" {
  type        = string
  description = "The instance ID of the Cloud Spanner database that you want to import to."

}

variable "databaseId" {
  type        = string
  description = "The database ID of the Cloud Spanner database that you want to import into (must already exist, and with the destination tables created)."

}

variable "spannerHost" {
  type        = string
  description = "The Cloud Spanner endpoint to call in the template. Only used for testing. (Example: https://batch-spanner.googleapis.com). Defaults to: https://batch-spanner.googleapis.com."
  default     = null
}

variable "importManifest" {
  type        = string
  description = "The Cloud Storage path and filename of the text import manifest file. Text Import Manifest file, storing a json-encoded importManifest object. (Example: gs://your-bucket/your-folder/your-manifest.json)"

}

variable "columnDelimiter" {
  type        = string
  description = "The column delimiter of the input text files. Defaults to ',' (Example: ,)"
  default     = null
}

variable "fieldQualifier" {
  type        = string
  description = "The field qualifier used by the source file. This is the character to wrap together text that should be kept as one value. The default value is double quotes."
  default     = null
}

variable "trailingDelimiter" {
  type        = bool
  description = "The flag indicating whether or not the input lines have trailing delimiters. The default value is true. If the text file contains trailing delimiter, then set trailingDelimiter parameter to true during pipeline execution to import a Cloud Spanner database from a set of text files, otherwise set it to false."
  default     = null
}

variable "escape" {
  type        = string
  description = <<EOT
The escape character. The default value is null i.e. no custom escape character. Note: CSV rows are always default quoted with '"'. This escape character is an additional escape character.
EOT
  default     = null
}

variable "nullString" {
  type        = string
  description = "The string that represents the NULL value. The default value is an empty string."
  default     = null
}

variable "dateFormat" {
  type        = string
  description = <<EOT
The format used to parse date columns. By default, the pipeline tries to parse the date columns as "yyyy-MM-dd[' 00:00:00']" (e.g., 2019-01-31, or 2019-01-31 00:00:00). If your data format is different, please specify the format using the java.time.format.DateTimeFormatter patterns. For more details, please refer to https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html
EOT
  default     = null
}

variable "timestampFormat" {
  type        = string
  description = <<EOT
The format used to parse timestamp columns. If the timestamp is a long integer, then it is treated as Unix epoch (the microsecond since 1970-01-01T00:00:00.000Z. Otherwise, it is parsed as a string using the java.time.format.DateTimeFormatter.ISO_INSTANT format. For other cases, please specify you own pattern string, e.g., "MMM dd yyyy HH:mm:ss.SSSVV" for timestamp in the form of "Jan 21 1998 01:02:03.456+08:00". For more details, please refer to https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html
EOT
  default     = null
}

variable "spannerProjectId" {
  type        = string
  description = "The project ID of the Cloud Spanner instance."
  default     = null
}

variable "spannerPriority" {
  type        = string
  description = "The request priority for Cloud Spanner calls. The value must be one of: [HIGH,MEDIUM,LOW]."
  default     = null
}

variable "handleNewLine" {
  type        = bool
  description = "If true, run the template in handleNewLine mode, which is slower but handles newline characters inside data. Defaults to: false."
  default     = null
}

variable "invalidOutputPath" {
  type        = string
  description = "Cloud Storage path where to write rows that cannot be imported. (Example: gs://your-bucket/your-path). Defaults to empty."
  default     = null
}


provider "google" {
  project = var.project
}

variable "additional_experiments" {
  type        = set(string)
  description = "List of experiments that should be used by the job. An example value is  'enable_stackdriver_agent_metrics'."
  default     = null
}

variable "enable_streaming_engine" {
  type        = bool
  description = "Indicates if the job should use the streaming engine feature."
  default     = null
}

variable "ip_configuration" {
  type        = string
  description = "The configuration for VM IPs. Options are 'WORKER_IP_PUBLIC' or 'WORKER_IP_PRIVATE'."
  default     = null
}

variable "kms_key_name" {
  type        = string
  description = "The name for the Cloud KMS key for the job. Key format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"
  default     = null
}

variable "labels" {
  type        = map(string)
  description = "User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.				Please refer to the field 'effective_labels' for all of the labels present on the resource."
  default     = null
}

variable "machine_type" {
  type        = string
  description = "The machine type to use for the job."
  default     = null
}

variable "max_workers" {
  type        = number
  description = "The number of workers permitted to work on the job. More workers may improve processing speed at additional cost."
  default     = null
}

variable "name" {
  type        = string
  description = "A unique name for the resource, required by Dataflow."
}

variable "network" {
  type        = string
  description = "The network to which VMs will be assigned. If it is not provided, 'default' will be used."
  default     = null
}

variable "service_account_email" {
  type        = string
  description = "The Service Account email used to create the job."
  default     = null
}

variable "skip_wait_on_job_termination" {
  type        = bool
  description = "If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are different, e.g. by embedding a release ID or by using a random_id."
  default     = null
}

variable "subnetwork" {
  type        = string
  description = "The subnetwork to which VMs will be assigned. Should be of the form 'regions/REGION/subnetworks/SUBNETWORK'."
  default     = null
}

variable "temp_gcs_location" {
  type        = string
  description = "A writeable location on Google Cloud Storage for the Dataflow job to dump its temporary data."
}

variable "zone" {
  type        = string
  description = "The zone in which the created job should run. If it is not provided, the provider zone is used."
  default     = null
}

resource "google_project_service" "required" {
  service            = "dataflow.googleapis.com"
  disable_on_destroy = false
}

resource "google_dataflow_job" "generated" {
  depends_on        = [google_project_service.required]
  provider          = google
  template_gcs_path = "gs://dataflow-templates-${var.region}/latest/GCS_Text_to_Cloud_Spanner"
  parameters = {
    instanceId        = var.instanceId
    databaseId        = var.databaseId
    spannerHost       = var.spannerHost
    importManifest    = var.importManifest
    columnDelimiter   = var.columnDelimiter
    fieldQualifier    = var.fieldQualifier
    trailingDelimiter = tostring(var.trailingDelimiter)
    escape            = var.escape
    nullString        = var.nullString
    dateFormat        = var.dateFormat
    timestampFormat   = var.timestampFormat
    spannerProjectId  = var.spannerProjectId
    spannerPriority   = var.spannerPriority
    handleNewLine     = tostring(var.handleNewLine)
    invalidOutputPath = var.invalidOutputPath
  }

  additional_experiments       = var.additional_experiments
  enable_streaming_engine      = var.enable_streaming_engine
  ip_configuration             = var.ip_configuration
  kms_key_name                 = var.kms_key_name
  labels                       = var.labels
  machine_type                 = var.machine_type
  max_workers                  = var.max_workers
  name                         = var.name
  network                      = var.network
  service_account_email        = var.service_account_email
  skip_wait_on_job_termination = var.skip_wait_on_job_termination
  subnetwork                   = var.subnetwork
  temp_gcs_location            = var.temp_gcs_location
  zone                         = var.zone
  region                       = var.region
}

output "dataflow_job_url" {
  value = "https://console.cloud.google.com/dataflow/jobs/${var.region}/${google_dataflow_job.generated.job_id}"
}

