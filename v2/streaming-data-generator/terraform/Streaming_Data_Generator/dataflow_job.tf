

# Autogenerated file. DO NOT EDIT.
#
# Copyright (C) 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#


variable "on_delete" {
  type        = string
  description = "One of \"drain\" or \"cancel\". Specifies behavior of deletion during terraform destroy."
}

variable "project" {
  type        = string
  description = "The Google Cloud Project ID within which this module provisions resources."
}

variable "region" {
  type        = string
  description = "The region in which the created job should run."
}

variable "qps" {
  type        = string
  description = "Indicates rate of messages per second to be published to Pub/Sub"

}

variable "schemaTemplate" {
  type        = string
  description = "Pre-existing schema template to use. The value must be one of: [GAME_EVENT]"
  default     = null
}

variable "schemaLocation" {
  type        = string
  description = "Cloud Storage path of schema location. (Example: gs://<bucket-name>/prefix)"
  default     = null
}

variable "topic" {
  type        = string
  description = "The name of the topic to which the pipeline should publish data. (Example: projects/<project-id>/topics/<topic-name>)"
  default     = null
}

variable "messagesLimit" {
  type        = number
  description = "Indicates maximum number of output messages to be generated. 0 means unlimited. Defaults to: 0."
  default     = null
}

variable "outputType" {
  type        = string
  description = "The message Output type. Default is JSON."
  default     = null
}

variable "avroSchemaLocation" {
  type        = string
  description = "Cloud Storage path of Avro schema location. Mandatory when output type is AVRO or PARQUET. (Example: gs://your-bucket/your-path/schema.avsc)"
  default     = null
}

variable "sinkType" {
  type        = string
  description = "The message Sink type. Default is PUBSUB"
  default     = null
}

variable "outputTableSpec" {
  type        = string
  description = "Output BigQuery table. Mandatory when sinkType is BIGQUERY (Example: <project>:<dataset>.<table_name>)"
  default     = null
}

variable "writeDisposition" {
  type        = string
  description = "BigQuery WriteDisposition. For example, WRITE_APPEND, WRITE_EMPTY or WRITE_TRUNCATE. Defaults to: WRITE_APPEND."
  default     = null
}

variable "outputDeadletterTable" {
  type        = string
  description = "Messages failed to reach the output table for all kind of reasons (e.g., mismatched schema, malformed json) are written to this table. If it doesn't exist, it will be created during pipeline execution. (Example: your-project-id:your-dataset.your-table-name)"
  default     = null
}

variable "windowDuration" {
  type        = string
  description = "The window duration/size in which data will be written to Cloud Storage. Allowed formats are: Ns (for seconds, example: 5s), Nm (for minutes, example: 12m), Nh (for hours, example: 2h). (Example: 1m). Defaults to: 1m."
  default     = null
}

variable "outputDirectory" {
  type        = string
  description = "The path and filename prefix for writing output files. Must end with a slash. DateTime formatting is used to parse directory path for date & time formatters. (Example: gs://your-bucket/your-path/)"
  default     = null
}

variable "outputFilenamePrefix" {
  type        = string
  description = "The prefix to place on each windowed file. (Example: output-). Defaults to: output-."
  default     = null
}

variable "numShards" {
  type        = number
  description = "The maximum number of output shards produced when writing. A higher number of shards means higher throughput for writing to Cloud Storage, but potentially higher data aggregation cost across shards when processing output Cloud Storage files. Default value is decided by Dataflow."
  default     = null
}

variable "driverClassName" {
  type        = string
  description = "JDBC driver class name to use. (Example: com.mysql.jdbc.Driver)"
  default     = null
}

variable "connectionUrl" {
  type        = string
  description = "Url connection string to connect to the JDBC source. (Example: jdbc:mysql://some-host:3306/sampledb)"
  default     = null
}

variable "username" {
  type        = string
  description = "User name to be used for the JDBC connection."
  default     = null
}

variable "password" {
  type        = string
  description = "Password to be used for the JDBC connection."
  default     = null
}

variable "connectionProperties" {
  type        = string
  description = "Properties string to use for the JDBC connection. Format of the string must be [propertyName=property;]*. (Example: unicode=true;characterEncoding=UTF-8)"
  default     = null
}

variable "statement" {
  type        = string
  description = "SQL statement which will be executed to write to the database. The statement must specify the column names of the table in any order. Only the values of the specified column names will be read from the json and added to the statement. (Example: INSERT INTO tableName (column1, column2) VALUES (?,?))"
  default     = null
}

variable "projectId" {
  type        = string
  description = "GCP Project Id of where the Spanner table lives."
  default     = null
}

variable "spannerInstanceName" {
  type        = string
  description = "Cloud Spanner instance name."
  default     = null
}

variable "spannerDatabaseName" {
  type        = string
  description = "Cloud Spanner database name."
  default     = null
}

variable "spannerTableName" {
  type        = string
  description = "Cloud Spanner table name."
  default     = null
}

variable "maxNumMutations" {
  type        = string
  description = "Specifies the cell mutation limit (maximum number of mutated cells per batch). Default value is 5000"
  default     = null
}

variable "maxNumRows" {
  type        = string
  description = "Specifies the row mutation limit (maximum number of mutated rows per batch). Default value is 1000"
  default     = null
}

variable "batchSizeBytes" {
  type        = string
  description = "Specifies the batch size limit (max number of bytes mutated per batch). Default value is 1MB"
  default     = null
}

variable "commitDeadlineSeconds" {
  type        = string
  description = "Specifies the deadline in seconds for the Commit API call."
  default     = null
}

variable "bootstrapServer" {
  type        = string
  description = "Kafka Bootstrap Server  (Example: localhost:9092)"
  default     = null
}

variable "kafkaTopic" {
  type        = string
  description = "Kafka topic to write to. (Example: topic)"
  default     = null
}


provider "google" {
  project = var.project
}

provider "google-beta" {
  project = var.project
}

variable "additional_experiments" {
  type        = set(string)
  description = "List of experiments that should be used by the job. An example value is  'enable_stackdriver_agent_metrics'."
  default     = null
}

variable "autoscaling_algorithm" {
  type        = string
  description = "The algorithm to use for autoscaling"
  default     = null
}

variable "enable_streaming_engine" {
  type        = bool
  description = "Indicates if the job should use the streaming engine feature."
  default     = null
}

variable "ip_configuration" {
  type        = string
  description = "The configuration for VM IPs. Options are 'WORKER_IP_PUBLIC' or 'WORKER_IP_PRIVATE'."
  default     = null
}

variable "kms_key_name" {
  type        = string
  description = "The name for the Cloud KMS key for the job. Key format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"
  default     = null
}

variable "labels" {
  type        = map(string)
  description = "User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.				Please refer to the field 'effective_labels' for all of the labels present on the resource."
  default     = null
}

variable "launcher_machine_type" {
  type        = string
  description = "The machine type to use for launching the job. The default is n1-standard-1."
  default     = null
}

variable "machine_type" {
  type        = string
  description = "The machine type to use for the job."
  default     = null
}

variable "max_workers" {
  type        = number
  description = "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000."
  default     = null
}

variable "name" {
  type = string
}

variable "network" {
  type        = string
  description = "The network to which VMs will be assigned. If it is not provided, 'default' will be used."
  default     = null
}

variable "num_workers" {
  type        = number
  description = "The initial number of Google Compute Engine instances for the job."
  default     = null
}

variable "sdk_container_image" {
  type        = string
  description = "Docker registry location of container image to use for the 'worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable pipelines."
  default     = null
}

variable "service_account_email" {
  type        = string
  description = "The Service Account email used to create the job."
  default     = null
}

variable "skip_wait_on_job_termination" {
  type        = bool
  description = "If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are different, e.g. by embedding a release ID or by using a random_id."
  default     = null
}

variable "staging_location" {
  type        = string
  description = "The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://."
  default     = null
}

variable "subnetwork" {
  type        = string
  description = "The subnetwork to which VMs will be assigned. Should be of the form 'regions/REGION/subnetworks/SUBNETWORK'."
  default     = null
}

variable "temp_location" {
  type        = string
  description = "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://."
  default     = null
}

resource "google_project_service" "required" {
  service            = "dataflow.googleapis.com"
  disable_on_destroy = false
}

resource "google_dataflow_flex_template_job" "generated" {
  depends_on              = [google_project_service.required]
  provider                = google-beta
  container_spec_gcs_path = "gs://dataflow-templates-${var.region}/latest/flex/Streaming_Data_Generator"
  parameters = {
    qps                   = var.qps
    schemaTemplate        = var.schemaTemplate
    schemaLocation        = var.schemaLocation
    topic                 = var.topic
    messagesLimit         = tostring(var.messagesLimit)
    outputType            = var.outputType
    avroSchemaLocation    = var.avroSchemaLocation
    sinkType              = var.sinkType
    outputTableSpec       = var.outputTableSpec
    writeDisposition      = var.writeDisposition
    outputDeadletterTable = var.outputDeadletterTable
    windowDuration        = var.windowDuration
    outputDirectory       = var.outputDirectory
    outputFilenamePrefix  = var.outputFilenamePrefix
    numShards             = tostring(var.numShards)
    driverClassName       = var.driverClassName
    connectionUrl         = var.connectionUrl
    username              = var.username
    password              = var.password
    connectionProperties  = var.connectionProperties
    statement             = var.statement
    projectId             = var.projectId
    spannerInstanceName   = var.spannerInstanceName
    spannerDatabaseName   = var.spannerDatabaseName
    spannerTableName      = var.spannerTableName
    maxNumMutations       = var.maxNumMutations
    maxNumRows            = var.maxNumRows
    batchSizeBytes        = var.batchSizeBytes
    commitDeadlineSeconds = var.commitDeadlineSeconds
    bootstrapServer       = var.bootstrapServer
    kafkaTopic            = var.kafkaTopic
  }

  additional_experiments       = var.additional_experiments
  autoscaling_algorithm        = var.autoscaling_algorithm
  enable_streaming_engine      = var.enable_streaming_engine
  ip_configuration             = var.ip_configuration
  kms_key_name                 = var.kms_key_name
  labels                       = var.labels
  launcher_machine_type        = var.launcher_machine_type
  machine_type                 = var.machine_type
  max_workers                  = var.max_workers
  name                         = var.name
  network                      = var.network
  num_workers                  = var.num_workers
  sdk_container_image          = var.sdk_container_image
  service_account_email        = var.service_account_email
  skip_wait_on_job_termination = var.skip_wait_on_job_termination
  staging_location             = var.staging_location
  subnetwork                   = var.subnetwork
  temp_location                = var.temp_location
  region                       = var.region
}

output "dataflow_job_url" {
  value = "https://console.cloud.google.com/dataflow/jobs/${var.region}/${google_dataflow_flex_template_job.generated.job_id}"
}

