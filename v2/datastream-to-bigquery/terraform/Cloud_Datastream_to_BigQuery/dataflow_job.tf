

# Autogenerated file. DO NOT EDIT.
#
# Copyright (C) 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
#


variable "on_delete" {
  type        = string
  description = "One of \"drain\" or \"cancel\". Specifies behavior of deletion during terraform destroy."
}

variable "project" {
  type        = string
  description = "The Google Cloud Project ID within which this module provisions resources."
}

variable "region" {
  type        = string
  description = "The region in which the created job should run."
}

variable "inputFilePattern" {
  type        = string
  description = "The file location for Datastream file output in Cloud Storage, in the format `gs://<BUCKET_NAME>/<ROOT_PATH>/`."

}

variable "inputFileFormat" {
  type        = string
  description = "The format of the output files produced by Datastream. Allowed values are `avro` and `json`. Defaults to `avro`."
  default     = "avro"
}

variable "gcsPubSubSubscription" {
  type        = string
  description = "The Pub/Sub subscription used by Cloud Storage to notify Dataflow of new files available for processing, in the format: `projects/<PROJECT_ID>/subscriptions/<SUBSCRIPTION_NAME>`."

}

variable "streamName" {
  type        = string
  description = "The name or the template for the stream to poll for schema information. Defaults to: {_metadata_stream}. The default value is usually enough."
  default     = null
}

variable "rfcStartDateTime" {
  type        = string
  description = "The starting DateTime to use to fetch data from Cloud Storage (https://tools.ietf.org/html/rfc3339). Defaults to: `1970-01-01T00:00:00.00Z`."
  default     = null
}

variable "fileReadConcurrency" {
  type        = number
  description = "The number of concurrent DataStream files to read. Default is `10`."
  default     = null
}

variable "outputProjectId" {
  type        = string
  description = "The ID of the Google Cloud project that contains the BigQuery datasets to output data into. The default for this parameter is the project where the Dataflow pipeline is running."
  default     = null
}

variable "outputStagingDatasetTemplate" {
  type        = string
  description = "The name of the dataset that contains staging tables. This parameter supports templates, for example `{_metadata_dataset}_log` or `my_dataset_log`. Normally, this parameter is a dataset name. Defaults to `{_metadata_dataset}`. Note: For MySQL sources, the database name is mapped to `{_metadata_schema}` instead of `{_metadata_dataset}`."
  default     = "{_metadata_dataset}"
}

variable "outputStagingTableNameTemplate" {
  type        = string
  description = "The template to use to name the staging tables. For example, `{_metadata_table}`. Defaults to `{_metadata_table}_log`."
  default     = null
}

variable "outputDatasetTemplate" {
  type        = string
  description = "The name of the dataset that contains the replica tables. This parameter supports templates, for example `{_metadata_dataset}` or `my_dataset`. Normally, this parameter is a dataset name. Defaults to `{_metadata_dataset}`. Note: For MySQL sources, the database name is mapped to `{_metadata_schema}` instead of `{_metadata_dataset}`."
  default     = "{_metadata_dataset}"
}

variable "outputTableNameTemplate" {
  type        = string
  description = "The template to use for the name of the replica tables, for example `{_metadata_table}`. Defaults to `{_metadata_table}`."
  default     = null
}

variable "ignoreFields" {
  type        = string
  description = "Comma-separated fields to ignore in BigQuery. Defaults to: `_metadata_stream,_metadata_schema,_metadata_table,_metadata_source,_metadata_tx_id,_metadata_dlq_reconsumed,_metadata_primary_keys,_metadata_error,_metadata_retry_count`. For example, `_metadata_stream,_metadata_schema`"
  default     = null
}

variable "mergeFrequencyMinutes" {
  type        = number
  description = "The number of minutes between merges for a given table. Defaults to `5`."
  default     = null
}

variable "deadLetterQueueDirectory" {
  type        = string
  description = "The path that Dataflow uses to write the dead-letter queue output. This path must not be in the same path as the Datastream file output. Defaults to `empty`."
  default     = ""
}

variable "dlqRetryMinutes" {
  type        = number
  description = "The number of minutes between DLQ Retries. Defaults to `10`."
  default     = null
}

variable "dataStreamRootUrl" {
  type        = string
  description = "The Datastream API root URL. Defaults to: https://datastream.googleapis.com/."
  default     = null
}

variable "applyMerge" {
  type        = bool
  description = "Whether to disable MERGE queries for the job. Defaults to `true`."
  default     = null
}

variable "mergeConcurrency" {
  type        = number
  description = "The number of concurrent BigQuery MERGE queries. Only effective when applyMerge is set to true. Defaults to `30`."
  default     = null
}

variable "partitionRetentionDays" {
  type        = number
  description = "The number of days to use for partition retention when running BigQuery merges. Defaults to `1`."
  default     = null
}

variable "useStorageWriteApiAtLeastOnce" {
  type        = bool
  description = "This parameter takes effect only if `Use BigQuery Storage Write API` is enabled. If `true`, at-least-once semantics are used for the Storage Write API. Otherwise, exactly-once semantics are used. Defaults to `false`."
  default     = null
}

variable "javascriptTextTransformGcsPath" {
  type        = string
  description = "The Cloud Storage URI of the .js file that defines the JavaScript user-defined function (UDF) to use. For example, `gs://my-bucket/my-udfs/my_file.js`"
  default     = null
}

variable "javascriptTextTransformFunctionName" {
  type        = string
  description = "The name of the JavaScript user-defined function (UDF) to use. For example, if your JavaScript function code is `myTransform(inJson) { /*...do stuff...*/ }`, then the function name is `myTransform`. For sample JavaScript UDFs, see UDF Examples (https://github.com/GoogleCloudPlatform/DataflowTemplates#udf-examples)."
  default     = null
}

variable "javascriptTextTransformReloadIntervalMinutes" {
  type        = number
  description = "Specifies how frequently to reload the UDF, in minutes. If the value is greater than 0, Dataflow periodically checks the UDF file in Cloud Storage, and reloads the UDF if the file is modified. This parameter allows you to update the UDF while the pipeline is running, without needing to restart the job. If the value is `0`, UDF reloading is disabled. The default value is `0`."
  default     = null
}

variable "pythonTextTransformGcsPath" {
  type        = string
  description = "The Cloud Storage path pattern for the Python code containing your user-defined functions. For example, `gs://your-bucket/your-transforms/*.py`"
  default     = null
}

variable "pythonRuntimeVersion" {
  type        = string
  description = "The runtime version to use for this Python UDF."
  default     = null
}

variable "pythonTextTransformFunctionName" {
  type        = string
  description = "The name of the function to call from your JavaScript file. Use only letters, digits, and underscores. For example, `transform_udf1`"
  default     = null
}

variable "runtimeRetries" {
  type        = number
  description = "The number of times a runtime will be retried before failing. Defaults to: 5."
  default     = null
}

variable "useStorageWriteApi" {
  type        = bool
  description = "If true, the pipeline uses the BigQuery Storage Write API (https://cloud.google.com/bigquery/docs/write-api). The default value is `false`. For more information, see Using the Storage Write API (https://beam.apache.org/documentation/io/built-in/google-bigquery/#storage-write-api)."
  default     = null
}

variable "numStorageWriteApiStreams" {
  type        = number
  description = "When using the Storage Write API, specifies the number of write streams. If `useStorageWriteApi` is `true` and `useStorageWriteApiAtLeastOnce` is `false`, then you must set this parameter. Defaults to: 0."
  default     = null
}

variable "storageWriteApiTriggeringFrequencySec" {
  type        = number
  description = "When using the Storage Write API, specifies the triggering frequency, in seconds. If `useStorageWriteApi` is `true` and `useStorageWriteApiAtLeastOnce` is `false`, then you must set this parameter."
  default     = null
}


provider "google" {
  project = var.project
}

provider "google-beta" {
  project = var.project
}

variable "additional_experiments" {
  type        = set(string)
  description = "List of experiments that should be used by the job. An example value is  'enable_stackdriver_agent_metrics'."
  default     = null
}

variable "autoscaling_algorithm" {
  type        = string
  description = "The algorithm to use for autoscaling"
  default     = null
}

variable "enable_streaming_engine" {
  type        = bool
  description = "Indicates if the job should use the streaming engine feature."
  default     = null
}

variable "ip_configuration" {
  type        = string
  description = "The configuration for VM IPs. Options are 'WORKER_IP_PUBLIC' or 'WORKER_IP_PRIVATE'."
  default     = null
}

variable "kms_key_name" {
  type        = string
  description = "The name for the Cloud KMS key for the job. Key format is: projects/PROJECT_ID/locations/LOCATION/keyRings/KEY_RING/cryptoKeys/KEY"
  default     = null
}

variable "labels" {
  type        = map(string)
  description = "User labels to be specified for the job. Keys and values should follow the restrictions specified in the labeling restrictions page. NOTE: This field is non-authoritative, and will only manage the labels present in your configuration.				Please refer to the field 'effective_labels' for all of the labels present on the resource."
  default     = null
}

variable "launcher_machine_type" {
  type        = string
  description = "The machine type to use for launching the job. The default is n1-standard-1."
  default     = null
}

variable "machine_type" {
  type        = string
  description = "The machine type to use for the job."
  default     = null
}

variable "max_workers" {
  type        = number
  description = "The maximum number of Google Compute Engine instances to be made available to your pipeline during execution, from 1 to 1000."
  default     = null
}

variable "name" {
  type        = string
  description = "A unique name for the resource, required by Dataflow."
}

variable "network" {
  type        = string
  description = "The network to which VMs will be assigned. If it is not provided, 'default' will be used."
  default     = null
}

variable "num_workers" {
  type        = number
  description = "The initial number of Google Compute Engine instances for the job."
  default     = null
}

variable "sdk_container_image" {
  type        = string
  description = "Docker registry location of container image to use for the 'worker harness. Default is the container for the version of the SDK. Note this field is only valid for portable pipelines."
  default     = null
}

variable "service_account_email" {
  type        = string
  description = "The Service Account email used to create the job."
  default     = null
}

variable "skip_wait_on_job_termination" {
  type        = bool
  description = "If true, treat DRAINING and CANCELLING as terminal job states and do not wait for further changes before removing from terraform state and moving on. WARNING: this will lead to job name conflicts if you do not ensure that the job names are different, e.g. by embedding a release ID or by using a random_id."
  default     = null
}

variable "staging_location" {
  type        = string
  description = "The Cloud Storage path to use for staging files. Must be a valid Cloud Storage URL, beginning with gs://."
  default     = null
}

variable "subnetwork" {
  type        = string
  description = "The subnetwork to which VMs will be assigned. Should be of the form 'regions/REGION/subnetworks/SUBNETWORK'."
  default     = null
}

variable "temp_location" {
  type        = string
  description = "The Cloud Storage path to use for temporary files. Must be a valid Cloud Storage URL, beginning with gs://."
  default     = null
}

resource "google_project_service" "required" {
  service            = "dataflow.googleapis.com"
  disable_on_destroy = false
}

resource "google_dataflow_flex_template_job" "generated" {
  depends_on              = [google_project_service.required]
  provider                = google-beta
  container_spec_gcs_path = "gs://dataflow-templates-${var.region}/latest/flex/Cloud_Datastream_to_BigQuery"
  parameters = {
    inputFilePattern                             = var.inputFilePattern
    inputFileFormat                              = var.inputFileFormat
    gcsPubSubSubscription                        = var.gcsPubSubSubscription
    streamName                                   = var.streamName
    rfcStartDateTime                             = var.rfcStartDateTime
    fileReadConcurrency                          = tostring(var.fileReadConcurrency)
    outputProjectId                              = var.outputProjectId
    outputStagingDatasetTemplate                 = var.outputStagingDatasetTemplate
    outputStagingTableNameTemplate               = var.outputStagingTableNameTemplate
    outputDatasetTemplate                        = var.outputDatasetTemplate
    outputTableNameTemplate                      = var.outputTableNameTemplate
    ignoreFields                                 = var.ignoreFields
    mergeFrequencyMinutes                        = tostring(var.mergeFrequencyMinutes)
    deadLetterQueueDirectory                     = var.deadLetterQueueDirectory
    dlqRetryMinutes                              = tostring(var.dlqRetryMinutes)
    dataStreamRootUrl                            = var.dataStreamRootUrl
    applyMerge                                   = tostring(var.applyMerge)
    mergeConcurrency                             = tostring(var.mergeConcurrency)
    partitionRetentionDays                       = tostring(var.partitionRetentionDays)
    useStorageWriteApiAtLeastOnce                = tostring(var.useStorageWriteApiAtLeastOnce)
    javascriptTextTransformGcsPath               = var.javascriptTextTransformGcsPath
    javascriptTextTransformFunctionName          = var.javascriptTextTransformFunctionName
    javascriptTextTransformReloadIntervalMinutes = tostring(var.javascriptTextTransformReloadIntervalMinutes)
    pythonTextTransformGcsPath                   = var.pythonTextTransformGcsPath
    pythonRuntimeVersion                         = var.pythonRuntimeVersion
    pythonTextTransformFunctionName              = var.pythonTextTransformFunctionName
    runtimeRetries                               = tostring(var.runtimeRetries)
    useStorageWriteApi                           = tostring(var.useStorageWriteApi)
    numStorageWriteApiStreams                    = tostring(var.numStorageWriteApiStreams)
    storageWriteApiTriggeringFrequencySec        = tostring(var.storageWriteApiTriggeringFrequencySec)
  }

  additional_experiments       = var.additional_experiments
  autoscaling_algorithm        = var.autoscaling_algorithm
  enable_streaming_engine      = var.enable_streaming_engine
  ip_configuration             = var.ip_configuration
  kms_key_name                 = var.kms_key_name
  labels                       = var.labels
  launcher_machine_type        = var.launcher_machine_type
  machine_type                 = var.machine_type
  max_workers                  = var.max_workers
  name                         = var.name
  network                      = var.network
  num_workers                  = var.num_workers
  on_delete                    = var.on_delete
  sdk_container_image          = var.sdk_container_image
  service_account_email        = var.service_account_email
  skip_wait_on_job_termination = var.skip_wait_on_job_termination
  staging_location             = var.staging_location
  subnetwork                   = var.subnetwork
  temp_location                = var.temp_location
  region                       = var.region
}

output "dataflow_job_url" {
  value = "https://console.cloud.google.com/dataflow/jobs/${var.region}/${google_dataflow_flex_template_job.generated.job_id}"
}

