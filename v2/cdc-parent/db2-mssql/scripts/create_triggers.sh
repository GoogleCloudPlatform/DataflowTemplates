#!/bin/bash
. ~db2inst1/sqllib/db2profile
db2 "connect to TESTDB"
db2 "CREATE TRIGGER TESTS.T_OB_HIS AFTER UPDATE OF STATUS ON TESTS.OBJ_BASE REFERENCING  OLD AS o FOR EACH ROW NOT SECURED BEGIN ATOMIC INSERT INTO TESTS.H_OBJ_BASE (ID, APP_ID, CID, UID, TYPE, STATUS, CREATED, STATUS_DATE, MASTER_FLAG, EVENT_ID, EVENT_NAME, OWNER_ID, TIMEOUT, OBJ_CLASS, SUBTYPE, TECH_PRIORITY, SENDER, RECEIVER, AUX_STATUS, AUDIT_SEQ) VALUES (o.ID, o.APP_ID, o.CID, o.UID, o.TYPE, o.STATUS,o.CREATED, o.STATUS_DATE,o.MASTER_FLAG,o.EVENT_ID, o.EVENT_NAME, o.OWNER_ID, o.TIMEOUT, o.OBJ_CLASS, o.SUBTYPE, o.TECH_PRIORITY, o.SENDER, o.RECEIVER, o.AUX_STATUS, o.AUDIT_SEQ); END;"

db2 "CREATE TRIGGER TESTS.T_ERR_INS BEFORE INSERT ON TESTS.ERROR REFERENCING  NEW AS n FOR EACH ROW NOT SECURED BEGIN ATOMIC SET n.CREATED = CURRENT_TIMESTAMP; END;"

db2 "CREATE TRIGGER TESTS.T_OB_CRE BEFORE INSERT ON TESTS.OBJ_BASE REFERENCING  NEW AS n FOR EACH ROW NOT SECURED BEGIN ATOMIC SET n.CREATED = CURRENT_TIMESTAMP, n.STATUS_DATE = CURRENT_TIMESTAMP; END;"

db2 "CREATE TRIGGER TESTS.T_ST_DAT BEFORE UPDATE OF STATUS ON TESTS.OBJ_BASE REFERENCING  NEW AS n OLD AS O FOR EACH ROW NOT SECURED BEGIN ATOMIC SET n.STATUS_DATE = CURRENT_TIMESTAMP, n.AUDIT_SEQ = o.AUDIT_SEQ + 1; END;"

db2 "CREATE TRIGGER TESTS.T_OR_EFF BEFORE INSERT ON TESTS.OBJ_OBJ_REL REFERENCING  NEW AS n FOR EACH ROW NOT SECURED WHEN ( n.EFF_DATE IS NULL ) BEGIN ATOMIC SET n.EFF_DATE = CURRENT_TIMESTAMP; END;"

echo "TRIGGERS CREATED"