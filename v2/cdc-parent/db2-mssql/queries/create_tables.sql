CREATE TABLE TESTDB.TESTS.ERROR (
                ID BIGINT NOT NULL,
                ACTIVITY_ID BIGINT,
                OBJ_ID BIGINT,
                TYPE CHAR(40) NOT NULL,
                SCHEME CHAR(40),
                CODE CHAR(40),
                COMPONENT_TYPE CHAR(40),
                COMPONENT_NAME VARCHAR(100),
                DESCRIPTION VARCHAR(1000),
                EVENT_ID BIGINT,
                SEVERITY CHAR(40),
                CREATED TIMESTAMP
        )
PARTITION BY RANGE(ID NULLS LAST)
( PARTITION PART_1 STARTING FROM (1)  ENDING AT (50) ,
PARTITION PART_2 STARTING FROM (51)  ENDING AT (100) );

CREATE TABLE TESTDB.TESTS.OBJ_BASE (
                ID BIGINT NOT NULL,
                APP_ID INTEGER NOT NULL,
                CID VARCHAR(200),
                UID VARCHAR(200),
                TYPE VARCHAR(40) NOT NULL DEFAULT 'OBJ',
                STATUS CHAR(40) NOT NULL,
                CREATED TIMESTAMP,
                STATUS_DATE TIMESTAMP,
                MASTER_FLAG CHAR(1) NOT NULL DEFAULT 'N',
                EVENT_ID BIGINT,
                EVENT_NAME CHAR(40),
                OWNER_ID INTEGER,
                TIMEOUT TIMESTAMP,
                OBJ_CLASS VARCHAR(40),
                SUBTYPE VARCHAR(40),
                TECH_PRIORITY INTEGER,
                SENDER VARCHAR(200),
                RECEIVER VARCHAR(200),
                AUX_STATUS VARCHAR(40),
                AUDIT_SEQ INTEGER NOT NULL DEFAULT 1
        )
PARTITION BY RANGE(ID NULLS LAST)
( PARTITION PART_1 STARTING FROM (1)  ENDING AT (50) ,
PARTITION PART_2 STARTING FROM (51)  ENDING AT (100) );

CREATE TABLE TESTDB.TESTS.OBJ_OBJ_REL (
                OBJ1_ID BIGINT NOT NULL,
                OBJ2_ID BIGINT NOT NULL,
                TYPE CHAR(40) NOT NULL,
                EFF_DATE TIMESTAMP,
                END_DATE TIMESTAMP
        )
PARTITION BY RANGE(OBJ1_ID NULLS LAST)
( PARTITION PART_1 STARTING FROM (1)  ENDING AT (50) ,
PARTITION PART_2 STARTING FROM (51)  ENDING AT (100) );

CREATE TABLE TESTDB.TESTS.TRANSACTION_BASE (
                OBJ_ID BIGINT NOT NULL,
                BATCH_ID BIGINT,
                TRANSMISSION_ID BIGINT NOT NULL,
                ISF_FMT_ID INTEGER,
                TXN_SEQUENCE INTEGER,
                ALT_ID VARCHAR(200),
                ISF_DATA CLOB(104857600) INLINE LENGTH 196,
                ISF_DATA_S VARCHAR(20000),
                RAW_DATA BLOB(4194304) INLINE LENGTH 196,
                USER VARCHAR(100),
                USER_COMMENT VARCHAR(1000),
                TXN_CLASS VARCHAR(40),
                TXN_DATA1 VARCHAR(400),
                TXN_DATA2 VARCHAR(400),
                AUDIT_SEQ INTEGER NOT NULL DEFAULT 1
        )
PARTITION BY RANGE(OBJ_ID NULLS LAST)
( PARTITION PART_1 STARTING FROM (1)  ENDING AT (50) ,
PARTITION PART_2 STARTING FROM (51)  ENDING AT (100) );

CREATE TABLE TESTDB.TESTS.TRANSMISSION_BASE (
                OBJ_ID BIGINT NOT NULL,
                PARTY_ID INTEGER,
                CHANNEL_ID INTEGER,
                DATA BLOB(104857600) INLINE LENGTH 196,
                DATA_S VARCHAR (20000) FOR BIT DATA,
                ISF_MAPPER VARCHAR(100),
                FILENAME VARCHAR(1024),
                FILEADDRESS VARCHAR(1024),
                CCSID INTEGER,
                ENCODING INTEGER,
                BAT_COUNT INTEGER,
                BAT_SUCCESS_CNTR INTEGER DEFAULT 0,
                BAT_FAILED_CNTR INTEGER DEFAULT 0,
                FRAG_COUNT INTEGER,
                FRAG_COUNTER INTEGER,
                FRAG_MAPPED_CNTR INTEGER DEFAULT 0,
                FRAG_SUCCESS_CNTR INTEGER DEFAULT 0,
                FRAG_FAILED_CNTR INTEGER DEFAULT 0,
                AUDIT_SEQ INTEGER NOT NULL DEFAULT 1
        )
PARTITION BY RANGE(OBJ_ID NULLS LAST)
( PARTITION PART_1 STARTING FROM (1)  ENDING AT (50) ,
PARTITION PART_2 STARTING FROM (51)  ENDING AT (100) );

CREATE TABLE TESTDB.TESTS.TXN_PAYMENT_BASE (
                OBJ_ID BIGINT NOT NULL,
                PAYMENT_TYPE VARCHAR(40),
                PMC VARCHAR(40),
                BANK_CODE VARCHAR(50),
                ACCOUNT VARCHAR(50),
                DEST_BANK_CODE VARCHAR(50),
                DEST_ACCOUNT VARCHAR(50),
                AMOUNT DECIMAL(31 , 4),
                CURRENCY VARCHAR(40),
                FX_RATE DECIMAL(31 , 6),
                DEBIT_CREDIT_FLAG CHAR(1) DEFAULT 'C',
                TXN_TIMESTAMP TIMESTAMP,
                BOOK_DATE DATE,
                VALUE_DATE DATE,
                SETTLE_DATE DATE,
                SETTLEMENT_SYSTEM VARCHAR(40),
                AUDIT_SEQ INTEGER NOT NULL DEFAULT 1
        )
PARTITION BY RANGE(OBJ_ID NULLS LAST)
( PARTITION PART_1 STARTING FROM (1)  ENDING AT (50),
PARTITION PART_2 STARTING FROM (51)  ENDING AT (100) );



ALTER TABLE TESTDB.TESTS.ERROR ADD CONSTRAINT CC_ER_PK PRIMARY KEY
        (ID);

ALTER TABLE TESTDB.TESTS.OBJ_BASE ADD CONSTRAINT CC_OB_PK PRIMARY KEY
        (ID);

ALTER TABLE TESTDB.TESTS.OBJ_OBJ_REL ADD CONSTRAINT CC_OO_UI PRIMARY KEY
        (OBJ1_ID,
         OBJ2_ID);

ALTER TABLE TESTDB.TESTS.TRANSACTION_BASE ADD CONSTRAINT CC_TX_UI PRIMARY KEY
        (OBJ_ID);

ALTER TABLE TESTDB.TESTS.TRANSMISSION_BASE ADD CONSTRAINT CC_TR_UI PRIMARY KEY
        (OBJ_ID);

ALTER TABLE TESTDB.TESTS.TXN_PAYMENT_BASE ADD CONSTRAINT CC_TPB_PK PRIMARY KEY
        (OBJ_ID);



ALTER TABLE TESTDB.TESTS.ERROR ADD CONSTRAINT CC_EO_FK FOREIGN KEY
        (OBJ_ID)
        REFERENCES TESTDB.TESTS.OBJ_BASE
        (ID);


ALTER TABLE TESTDB.TESTS.OBJ_OBJ_REL ADD CONSTRAINT CC_O1_FK FOREIGN KEY
        (OBJ1_ID)
        REFERENCES TESTDB.TESTS.OBJ_BASE
        (ID);

ALTER TABLE TESTDB.TESTS.OBJ_OBJ_REL ADD CONSTRAINT CC_O2_FK FOREIGN KEY
        (OBJ2_ID)
        REFERENCES TESTDB.TESTS.OBJ_BASE
        (ID);

ALTER TABLE TESTDB.TESTS.TRANSACTION_BASE ADD CONSTRAINT CC_TO_FK FOREIGN KEY
        (OBJ_ID)
        REFERENCES TESTDB.TESTS.OBJ_BASE
        (ID)
        ON DELETE CASCADE;

ALTER TABLE TESTDB.TESTS.TRANSACTION_BASE ADD CONSTRAINT TRANSACTION_BASE_TRANSMISSION_BASE_FK FOREIGN KEY
        (TRANSMISSION_ID)
        REFERENCES TESTDB.TESTS.TRANSMISSION_BASE
        (OBJ_ID)
        ON DELETE CASCADE;

ALTER TABLE TESTDB.TESTS.TRANSMISSION_BASE ADD CONSTRAINT CC_TR_FK FOREIGN KEY
        (OBJ_ID)
        REFERENCES TESTDB.TESTS.OBJ_BASE
        (ID)
        ON DELETE CASCADE;

ALTER TABLE TESTDB.TESTS.TXN_PAYMENT_BASE ADD CONSTRAINT CC_PT_FK FOREIGN KEY
        (OBJ_ID)
        REFERENCES TESTDB.TESTS.TRANSACTION_BASE
        (OBJ_ID)
        ON DELETE CASCADE;