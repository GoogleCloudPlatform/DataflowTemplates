# Copyright 2024 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Checks that are intended to run on PRs containing Java code.

name: Spanner PR

on:
  pull_request:
    branches:
      - 'main'
    paths:
      # Template wide common modules
      - 'pom.xml'
      - 'v2/common/**'
      - 'v2/datastream-common/**'
      - 'it/google-cloud-platform/**'
      - 'it/conditions/**'
      # Component common modules
      - 'v2/spanner-common/**'
      - 'v2/spanner-migrations-sdk/**'
      - 'v2/spanner-custom-shard/**'
      # Include spanner paths
      - '.github/workflows/spanner-pr.yml'
      - 'v2/datastream-to-spanner/**'
      - 'v2/spanner-change-streams-to-sharded-file-sink/**'
      - 'v2/gcs-to-sourcedb/**'
      - 'v2/sourcedb-to-spanner/**'
      - 'v2/spanner-to-sourcedb/**'
      # Git action files
      - '.github/workflows/spanner-pr.yml'
  schedule:
    - cron: "3 */12 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  MAVEN_OPTS: -Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.shade=error

permissions: write-all

jobs:
  # Temporarily disabled for faster debugging
  # spotless_check:
  #   name: Spotless
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
  #   - name: Setup Environment
  #     id: setup-env
  #     uses: ./.github/actions/setup-env
  #   - name: Run Spotless
  #     run: |
  #       ./cicd/run-spotless \
  #       --modules-to-build="SPANNER"

  # Temporarily disabled for faster debugging
  # checkstyle_check:
  #   name: Checkstyle
  #   timeout-minutes: 10
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
  #   - name: Setup Environment
  #     id: setup-env
  #     uses: ./.github/actions/setup-env
  #   - name: Run Checkstyle
  #     run: |
  #       ./cicd/run-checkstyle \
  #       --modules-to-build="SPANNER"

  java_build:
    name: Build
    timeout-minutes: 60
    runs-on: [self-hosted, it]
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Environment
        id: setup-env
        uses: ./.github/actions/setup-env
      - name: Run Build
        run: |
          ./cicd/run-build \
          --modules-to-build="SPANNER"
      - name: Cleanup Java Environment
        uses: ./.github/actions/cleanup-java-env

  # Temporarily disabled the Unit Test job to speed up debugging
  # java_unit_tests:
  #   name: Unit Tests
  #   needs: [java_build]
  #   timeout-minutes: 60
  #   runs-on: [self-hosted, it]
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
  #   - name: Setup Environment
  #     id: setup-env
  #     uses: ./.github/actions/setup-env
  #   - name: Run Unit Tests
  #     run: |
  #       ./cicd/run-unit-tests \
  #       --modules-to-build="SPANNER"
  #   - name: Upload Unit Tests Report
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: surefire-unit-test-results
  #       path: |
  #           **/surefire-reports/TEST-*.xml
  #           **/surefire-reports/*.html
  #           **/surefire-reports/html/**
  #       retention-days: 1
  #   - name: Upload coverage reports to Codecov
  #     uses: codecov/codecov-action@v5.5.1
  #     with:
  #       token: ${{ secrets.CODECOV_TOKEN }}
  #       slug: GoogleCloudPlatform/DataflowTemplates
  #       files: 'target/site/jacoco-aggregate/jacoco.xml'
  #   - name: Cleanup Java Environment
  #     uses: ./.github/actions/cleanup-java-env

  # Temporarily disabled for faster debugging
  # java_integration_smoke_tests_templates:
  #   name: Dataflow Templates Integration Smoke Tests
  #   needs: [spotless_check, checkstyle_check, java_build, java_unit_tests]
  #   timeout-minutes: 60
  #   runs-on: [self-hosted, it]
  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
  #   - name: Setup Environment
  #     id: setup-env
  #     uses: ./.github/actions/setup-env
  #   - name: Run Integration Smoke Tests
  #     run: |
  #       ./cicd/run-it-smoke-tests \
  #       --modules-to-build="SPANNER" \
  #       --it-region="us-central1" \
  #       --it-project="cloud-teleport-testing" \
  #       --it-artifact-bucket="cloud-teleport-testing-it-gitactions" \
  #       --it-private-connectivity="datastream-connect-2"
  #   - name: Upload Smoke Tests Report
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: surefire-smoke-test-results
  #       path: |
  #         **/surefire-reports/TEST-*.xml
  #         **/surefire-reports/*.html
  #         **/surefire-reports/html/**
  #       retention-days: 1
  #   - name: Cleanup Java Environment
  #     uses: ./.github/actions/cleanup-java-env

  java_integration_tests_templates:
    name: Dataflow Templates Integration Tests
    # Updated dependencies to run directly after build
    needs: [java_build]
    timeout-minutes: 180
    runs-on: [self-hosted, it]
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Environment
        id: setup-env
        uses: ./.github/actions/setup-env
      - name: Run Integration Tests
        run: |
          ./cicd/run-it-tests \
          --modules-to-build="SPANNER" \
          --it-region="us-central1" \
          --it-project="cloud-teleport-testing" \
          --it-artifact-bucket="cloud-teleport-testing-it-gitactions" \
          --it-private-connectivity="datastream-connect-2" \
          --it-module-to-test="v2/spanner-to-sourcedb" \
          --it-test-to-run="SpannerToSourceDbIT"
      - name: Upload Integration Tests Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: surefire-integration-test-results
          path: |
            **/surefire-reports/TEST-*.xml
            **/surefire-reports/*.html
            **/surefire-reports/html/**
          retention-days: 10
      - name: Integration Test report on GitHub
        uses: dorny/test-reporter@v2
        if: always()
        with:
          name: Integration Test report on GitHub
          path: '**/surefire-reports/TEST-*.xml'
          reporter: java-junit
          only-summary: 'true'
          token: ${{ secrets.GITHUB_TOKEN }}
          fail-on-error: 'false'
          list-suites: 'failed'
          list-tests: 'failed'
      - name: Cleanup Java Environment
        uses: ./.github/actions/cleanup-java-env
  java_load_tests_templates:
    if: contains(github.event.pull_request.labels.*.name, 'run-load-tests')
    name: Dataflow Templates Load Tests
    # Updated dependencies
    needs: [java_build, java_integration_tests_templates]
    timeout-minutes: 600
    runs-on: [self-hosted, perf]
    steps:
      - name: Checkout Code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Setup Environment
        id: setup-env
        uses: ./.github/actions/setup-env
      - name: Run Load Tests
        run: |
          ./cicd/run-load-tests \
          --modules-to-build="SPANNER" \
          --it-region="us-central1" \
          --it-project="cloud-teleport-testing" \
          --it-artifact-bucket="cloud-teleport-testing-it-gitactions" \
          --it-private-connectivity="datastream-connect-2"
      - name: Cleanup Java Environment
        uses: ./.github/actions/cleanup-java-env