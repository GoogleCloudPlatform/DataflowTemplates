{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "recaptchaenterprise:v1",
  "name": "recaptchaenterprise",
  "canonicalName": "Recaptcha Enterprise",
  "version": "v1",
  "revision": "0",
  "title": "reCAPTCHA Enterprise API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/recaptcha-enterprise/",
  "protocol": "rest",
  "rootUrl": "https://recaptchaenterprise.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://recaptchaenterprise.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudRecaptchaenterpriseV1Assessment": {
      "id": "GoogleCloudRecaptchaenterpriseV1Assessment",
      "description": "A recaptcha assessment resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name for the Assessment in the format\n\"projects\/{project_number}\/assessments\/{assessment_id}\".",
          "type": "string"
        },
        "event": {
          "description": "The event being assessed.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1Event"
        },
        "riskAnalysis": {
          "description": "Output only. The risk analysis result for the event being assessed.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1RiskAnalysis"
        },
        "tokenProperties": {
          "description": "Output only. Properties of the provided event token.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1TokenProperties"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1Event": {
      "id": "GoogleCloudRecaptchaenterpriseV1Event",
      "type": "object",
      "properties": {
        "token": {
          "description": "Optional. The user response token provided by the reCAPTCHA client-side integration\non your site.",
          "type": "string"
        },
        "siteKey": {
          "description": "Optional. The site key that was used to invoke reCAPTCHA on your site and generate\nthe token.",
          "type": "string"
        },
        "userAgent": {
          "description": "Optional. The user agent present in the request from the user's device related to\nthis event.",
          "type": "string"
        },
        "userIpAddress": {
          "description": "Optional. The IP address in the request from the user's device related to this event.",
          "type": "string"
        },
        "expectedAction": {
          "description": "Optional. The expected action for this type of event. This should be the same action\nprovided at token generation time on client-side platforms already\nintegrated with recaptcha enterprise.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1RiskAnalysis": {
      "id": "GoogleCloudRecaptchaenterpriseV1RiskAnalysis",
      "description": "Risk analysis result for an event.",
      "type": "object",
      "properties": {
        "score": {
          "description": "Legitimate event score from 0.0 to 1.0.\n(1.0 means very likely legitimate traffic while 0.0 means very likely\nnon-legitimate traffic).",
          "type": "number",
          "format": "float"
        },
        "reasons": {
          "description": "Reasons contributing to the risk analysis verdict.",
          "enumDescriptions": [
            "Default unspecified type.",
            "Interactions matched the behavior of an automated agent.",
            "The event originated from an illegitimate environment.",
            "Traffic volume from the event source is higher than normal.",
            "Interactions with the site were significantly different than expected\npatterns.",
            "Too little traffic has been received from this site thus far to generate\nquality risk analysis."
          ],
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CLASSIFICATION_REASON_UNSPECIFIED",
              "AUTOMATION",
              "UNEXPECTED_ENVIRONMENT",
              "TOO_MUCH_TRAFFIC",
              "UNEXPECTED_USAGE_PATTERNS",
              "LOW_CONFIDENCE_SCORE"
            ]
          }
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1TokenProperties": {
      "id": "GoogleCloudRecaptchaenterpriseV1TokenProperties",
      "type": "object",
      "properties": {
        "valid": {
          "description": "Whether the provided user response token is valid. When valid = false, the\nreason could be specified in invalid_reason or it could also be due to\na user failing to solve a challenge or a sitekey mismatch (i.e the sitekey\nused to generate the token was different than the one specified in the\nassessment).",
          "type": "boolean"
        },
        "invalidReason": {
          "description": "Reason associated with the response when valid = false.",
          "enumDescriptions": [
            "Default unspecified type.",
            "If the failure reason was not accounted for.",
            "The provided user verification token was malformed.",
            "The user verification token had expired.",
            "The user verification had already been seen.",
            "The user verification token was not present."
          ],
          "type": "string",
          "enum": [
            "INVALID_REASON_UNSPECIFIED",
            "UNKNOWN_INVALID_REASON",
            "MALFORMED",
            "EXPIRED",
            "DUPE",
            "MISSING"
          ]
        },
        "createTime": {
          "description": "The timestamp corresponding to the generation of the token.",
          "type": "string",
          "format": "google-datetime"
        },
        "hostname": {
          "description": "The hostname of the page on which the token was generated.",
          "type": "string"
        },
        "action": {
          "description": "Action name provided at token generation.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest": {
      "id": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest",
      "description": "The request message to annotate an Assessment.",
      "type": "object",
      "properties": {
        "annotation": {
          "description": "Required. The annotation that will be assigned to the Event.",
          "enumDescriptions": [
            "Default unspecified type.",
            "Provides information that the event turned out to be legitimate.",
            "Provides information that the event turned out to be fraudulent."
          ],
          "type": "string",
          "enum": [
            "ANNOTATION_UNSPECIFIED",
            "LEGITIMATE",
            "FRAUDULENT"
          ]
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse": {
      "id": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse",
      "description": "Empty response for AnnotateAssessment.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudRecaptchaenterpriseV1Key": {
      "id": "GoogleCloudRecaptchaenterpriseV1Key",
      "description": "A key used to identify and configure applications (web and\/or mobile) that\nuse reCAPTCHA Enterprise.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name for the Key in the format\n\"projects\/{project_number}\/keys\/{key_id}\".",
          "type": "string"
        },
        "displayName": {
          "description": "Human-readable display name of this key. Modifiable by user.",
          "type": "string"
        },
        "webSettings": {
          "description": "Settings for keys that can be used by websites.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1WebKeySettings"
        },
        "androidSettings": {
          "description": "Settings for keys that can be used by Android apps.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings"
        },
        "iosSettings": {
          "description": "Settings for keys that can be used by iOS apps.",
          "$ref": "GoogleCloudRecaptchaenterpriseV1IOSKeySettings"
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1WebKeySettings": {
      "id": "GoogleCloudRecaptchaenterpriseV1WebKeySettings",
      "description": "Settings specific to keys that can be used by websites.",
      "type": "object",
      "properties": {
        "allowAllDomains": {
          "description": "If set to true, it means allowed_domains will not be enforced.",
          "type": "boolean"
        },
        "allowedDomains": {
          "description": "Domains or subdomains of websites allowed to use the key. All subdomains\nof an allowed domain are automatically allowed. A valid domain requires a\nhost and must not include any path, port, query or fragment.\nExamples: 'example.com' or 'subdomain.example.com'",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowAmpTraffic": {
          "description": "Required. Whether this key can be used on AMP (Accelerated Mobile Pages) websites.",
          "type": "boolean"
        },
        "integrationType": {
          "description": "Required. Describes how this key is integrated with the website.",
          "enumDescriptions": [
            "Default type that indicates this enum hasn't been specified. This is not\na valid IntegrationType, one of the other types must be specified\ninstead.",
            "Only used to produce scores. It doesn't display the \"I'm not a robot\"\ncheckbox and never shows captcha challenges.",
            "Displays the \"I'm not a robot\" checkbox and may show captcha challenges\nafter it is checked."
          ],
          "type": "string",
          "enum": [
            "INTEGRATION_TYPE_UNSPECIFIED",
            "SCORE",
            "CHECKBOX"
          ]
        },
        "challengeSecurityPreference": {
          "description": "Settings for the frequency and difficulty at which this key triggers\ncaptcha challenges. This should only be specified for IntegrationType\nCHECKBOX_CHALLENGE.",
          "enumDescriptions": [
            "Default type that indicates this enum hasn't been specified.",
            "Key tends to show fewer and easier challenges.",
            "Key tends to show balanced (in amount and difficulty) challenges.",
            "Key tends to show more and harder challenges."
          ],
          "type": "string",
          "enum": [
            "CHALLENGE_SECURITY_PREFERENCE_UNSPECIFIED",
            "USABILITY",
            "BALANCE",
            "SECURITY"
          ]
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings": {
      "id": "GoogleCloudRecaptchaenterpriseV1AndroidKeySettings",
      "description": "Settings specific to keys that can be used by Android apps.",
      "type": "object",
      "properties": {
        "allowedPackageNames": {
          "description": "Android package names of apps allowed to use the key.\nExample: 'com.companyname.appname'",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1IOSKeySettings": {
      "id": "GoogleCloudRecaptchaenterpriseV1IOSKeySettings",
      "description": "Settings specific to keys that can be used by iOS apps.",
      "type": "object",
      "properties": {
        "allowedBundleIds": {
          "description": "iOS bundle ids of apps allowed to use the key.\nExample: 'com.companyname.productname.appname'",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRecaptchaenterpriseV1ListKeysResponse": {
      "id": "GoogleCloudRecaptchaenterpriseV1ListKeysResponse",
      "description": "Response to request to list keys in a project.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "Key details.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results. It is set to empty if no keys\nremain in results.",
          "type": "string"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "assessments": {
          "methods": {
            "create": {
              "id": "recaptchaenterprise.projects.assessments.create",
              "path": "v1/{+parent}/assessments",
              "flatPath": "v1/projects/{projectsId}/assessments",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project in which the assessment will be created,\nin the format \"projects\/{project_number}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Assessment"
              },
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Assessment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates an Assessment of the likelihood an event is legitimate."
            },
            "annotate": {
              "id": "recaptchaenterprise.projects.assessments.annotate",
              "path": "v1/{+name}:annotate",
              "flatPath": "v1/projects/{projectsId}/assessments/{assessmentsId}:annotate",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the Assessment, in the format\n\"projects\/{project_number}\/assessments\/{assessment_id}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/assessments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentRequest"
              },
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1AnnotateAssessmentResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Annotates a previously created Assessment to provide additional information\non whether the event turned out to be authentic or fradulent."
            }
          }
        },
        "keys": {
          "methods": {
            "create": {
              "id": "recaptchaenterprise.projects.keys.create",
              "path": "v1/{+parent}/keys",
              "flatPath": "v1/projects/{projectsId}/keys",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project in which the key will be created, in the\nformat \"projects\/{project_number}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a new reCAPTCHA Enterprise key."
            },
            "list": {
              "id": "recaptchaenterprise.projects.keys.list",
              "path": "v1/{+parent}/keys",
              "flatPath": "v1/projects/{projectsId}/keys",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the project that contains the keys that will be\nlisted, in the format \"projects\/{project_number}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional. The maximum number of keys to return. Default is 10. Max limit is\n1000.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional. The next_page_token value returned from a previous.\nListKeysRequest, if any.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1ListKeysResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns the list of all keys that belong to a project."
            },
            "get": {
              "id": "recaptchaenterprise.projects.keys.get",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The name of the requested key, in the format\n\"projects\/{project_number}\/keys\/{key_id}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/keys\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Returns the specified key."
            },
            "patch": {
              "id": "recaptchaenterprise.projects.keys.patch",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The resource name for the Key in the format\n\"projects\/{project_number}\/keys\/{key_id}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/keys\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Optional. The mask to control which field of the key get updated. If the mask is not\npresent, all fields will be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "response": {
                "$ref": "GoogleCloudRecaptchaenterpriseV1Key"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates the specified key."
            },
            "delete": {
              "id": "recaptchaenterprise.projects.keys.delete",
              "path": "v1/{+name}",
              "flatPath": "v1/projects/{projectsId}/keys/{keysId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The name of the key to be deleted, in the format\n\"projects\/{project_number}\/keys\/{key_id}\".",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/keys\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes the specified key."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}