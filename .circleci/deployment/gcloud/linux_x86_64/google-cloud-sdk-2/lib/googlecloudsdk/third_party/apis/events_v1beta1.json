{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "events:v1beta1",
  "name": "events",
  "canonicalName": "Events for Cloud Run",
  "version": "v1beta1",
  "revision": "0",
  "title": "Events for Cloud Run API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "",
  "protocol": "rest",
  "rootUrl": "https://events.googleapis.com/",
  "mtlsRootUrl": "https://events.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://events.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Trigger": {
      "id": "Trigger",
      "description": "Represents a request to have events delivered to a consumer from a Broker's event pool.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"eventing.knative.dev\/v1beta1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource, in this case \"Trigger\".",
          "type": "string"
        },
        "metadata": {
          "description": "Optional. Metadata associated with this Trigger, including name, namespace, and annotations. .",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "Spec defines the desired state of the Trigger.",
          "$ref": "TriggerSpec"
        },
        "status": {
          "description": "Optional. Status represents the current state of the Trigger. This data may be out of date.",
          "$ref": "TriggerStatus"
        }
      }
    },
    "ObjectMeta": {
      "id": "ObjectMeta",
      "description": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names +optional",
          "type": "string"
        },
        "generateName": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#idempotency string generateName = 2;",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number.",
          "type": "string"
        },
        "selfLink": {
          "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;",
          "type": "string"
        },
        "uid": {
          "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids",
          "type": "string"
        },
        "resourceVersion": {
          "description": "(Optional) An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency",
          "type": "string"
        },
        "generation": {
          "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "type": "integer",
          "format": "int32"
        },
        "creationTimestamp": {
          "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http:\/\/kubernetes.io\/docs\/user-guide\/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "annotations": {
          "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http:\/\/kubernetes.io\/docs\/user-guide\/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ownerReferences": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected.",
          "type": "array",
          "items": {
            "$ref": "OwnerReference"
          }
        },
        "deletionTimestamp": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#metadata",
          "type": "string",
          "format": "google-datetime"
        },
        "deletionGracePeriodSeconds": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer",
          "format": "int32"
        },
        "finalizers": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterName": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        }
      }
    },
    "OwnerReference": {
      "id": "OwnerReference",
      "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "kind": {
          "description": "Kind of the referent. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#types-kinds",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#names",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: http:\/\/kubernetes.io\/docs\/user-guide\/identifiers#uids",
          "type": "string"
        },
        "controller": {
          "description": "If true, this reference points to the managing controller. +optional",
          "type": "boolean"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional",
          "type": "boolean"
        }
      }
    },
    "TriggerSpec": {
      "id": "TriggerSpec",
      "description": "The desired state of the Trigger.",
      "type": "object",
      "properties": {
        "broker": {
          "description": "Optional. Broker is the broker that this trigger receives events from. If not provided, fully-managed Events for Cloud Run uses the `google` broker by default",
          "type": "string"
        },
        "filter": {
          "description": "Optional. Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber.",
          "$ref": "TriggerFilter"
        },
        "subscriber": {
          "description": "Required. Subscriber is the addressable that receives events from the Broker that pass the Filter.",
          "$ref": "Destination"
        },
        "serviceAccountEmail": {
          "description": "Optional. Email address of the IAM service account associated with the trigger. The service account represents the identity of the trigger and used to generate identity tokens when invoking Cloud Run service specified in the \"subscriber\" field. See also https:\/\/cloud.google.com\/run\/docs\/triggering\/pubsub-push#create-service-account for information on how to invoke authenticated Cloud Run services.",
          "type": "string"
        }
      }
    },
    "TriggerFilter": {
      "id": "TriggerFilter",
      "description": "Filters events based on exact matches on the attributes.",
      "type": "object",
      "properties": {
        "attributes": {
          "description": "Optional. Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values. Nested context attributes are not supported as keys. Only string values are supported.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Destination": {
      "id": "Destination",
      "description": "Represents a target of an invocation over HTTP.",
      "type": "object",
      "properties": {
        "ref": {
          "description": "Optional. ObjectReference points to an Addressable.",
          "$ref": "ObjectReference"
        },
        "uri": {
          "description": "Optional. URI is for direct URI Designations or used with the resulting URL from Addressable ObjectReference. If used with an ObjectReference, will be appended to the path of the resulting URL from the Addressable.",
          "type": "string"
        }
      }
    },
    "ObjectReference": {
      "id": "ObjectReference",
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of the referent. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#types-kinds +optional",
          "type": "string"
        },
        "namespace": {
          "description": "Namespace of the referent. More info: https:\/\/kubernetes.io\/docs\/concepts\/overview\/working-with-objects\/namespaces\/ +optional",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: https:\/\/kubernetes.io\/docs\/concepts\/overview\/working-with-objects\/names\/#names +optional",
          "type": "string"
        },
        "uid": {
          "description": "UID of the referent. More info: https:\/\/kubernetes.io\/docs\/concepts\/overview\/working-with-objects\/names\/#uids +optional",
          "type": "string"
        },
        "apiVersion": {
          "description": "API version of the referent. +optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency +optional",
          "type": "string"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON\/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        }
      }
    },
    "TriggerStatus": {
      "id": "TriggerStatus",
      "description": "The current state of a Trigger.",
      "type": "object",
      "properties": {
        "conditions": {
          "description": "As a Trigger is being prepared, it will incrementally update conditions. Trigger-specific conditions include: * \"Subscriber\": True when the target Cloud Run service is resolved. * \"Subscribed\": True when the Pub\/Sub topic and subscription associated with the trigger is successfully set up.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Trigger that was last processed by the controller.",
          "type": "integer",
          "format": "int32"
        },
        "subscriberUri": {
          "description": "SubscriberURI is the resolved URI of the receiver for this Trigger.",
          "type": "string"
        }
      }
    },
    "Condition": {
      "id": "Condition",
      "description": "Condition defines a generic condition for a Resource",
      "type": "object",
      "properties": {
        "type": {
          "description": "type is used to communicate the status of the reconciliation process. See also: https:\/\/github.com\/knative\/serving\/blob\/master\/docs\/spec\/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready.",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "reason": {
          "description": "Optional. One-word CamelCase reason for the condition's last transition.",
          "type": "string"
        },
        "message": {
          "description": "Optional. Human readable message indicating details about the current status.",
          "type": "string"
        },
        "lastTransitionTime": {
          "description": "Optional. Last time the condition transitioned from one status to another.",
          "type": "string",
          "format": "google-datetime"
        },
        "severity": {
          "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info",
          "type": "string"
        }
      }
    },
    "ListTriggersResponse": {
      "id": "ListTriggersResponse",
      "description": "ListTriggersResponse is a list of Trigger resources.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"eventing.knative.dev\/v1beta1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"TriggerList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Optional. Metadata associated with this Trigger list.",
          "$ref": "ListMeta"
        },
        "items": {
          "description": "List of Triggers.",
          "type": "array",
          "items": {
            "$ref": "Trigger"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListMeta": {
      "id": "ListMeta",
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "type": "object",
      "properties": {
        "selfLink": {
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional",
          "type": "string"
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https:\/\/git.k8s.io\/community\/contributors\/devel\/api-conventions.md#concurrency-control-and-consistency +optional",
          "type": "string"
        },
        "continue": {
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CustomResourceDefinition": {
      "id": "CustomResourceDefinition",
      "description": "CustomResourceDefinition represents a resource that should be exposed on the API server. Its name MUST be in the format <.spec.name>.<.spec.group>.",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"k8s.apiextensions.io\/v1beta1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource, in this case always \"CustomResourceDefinition\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this CustomResourceDefinition.",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "Spec describes how the user wants the resources to appear",
          "$ref": "CustomResourceDefinitionSpec"
        }
      }
    },
    "CustomResourceDefinitionSpec": {
      "id": "CustomResourceDefinitionSpec",
      "description": "CustomResourceDefinitionSpec describes how a user wants their resource to appear",
      "type": "object",
      "properties": {
        "group": {
          "description": "Group is the group this resource belongs in",
          "type": "string"
        },
        "version": {
          "description": "Version is the version this resource belongs in Should be always first item in Versions field if provided. Optional, but at least one of Version or Versions must be set. Deprecated: Please use `Versions`. +optional",
          "type": "string"
        },
        "names": {
          "description": "Names are the names used to describe this custom resource",
          "$ref": "CustomResourceDefinitionNames"
        },
        "scope": {
          "description": "Scope indicates whether this resource is cluster or namespace scoped. Default is namespaced",
          "type": "string"
        },
        "validation": {
          "description": "Validation describes the validation methods for CustomResources +optional",
          "$ref": "CustomResourceValidation"
        },
        "subresources": {
          "description": "Subresources describes the subresources for CustomResources +optional",
          "$ref": "CustomResourceSubresources"
        },
        "versions": {
          "description": "Versions is the list of all supported versions for this resource. If Version field is provided, this field is optional. Validation: All versions must use the same validation schema for now. i.e., top level Validation field is applied to all of these versions. Order: The version name will be used to compute the order. If the version string is \"kube-like\", it will sort above non \"kube-like\" version strings, which are ordered lexicographically. \"Kube-like\" versions start with a \"v\", then are followed by a number (the major version), then optionally the string \"alpha\" or \"beta\" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10. +optional",
          "type": "array",
          "items": {
            "$ref": "CustomResourceDefinitionVersion"
          }
        },
        "additionalPrinterColumns": {
          "description": "AdditionalPrinterColumns are additional columns shown e.g. in kubectl next to the name. Defaults to a created-at column. +optional",
          "type": "array",
          "items": {
            "$ref": "CustomResourceColumnDefinition"
          }
        }
      }
    },
    "CustomResourceDefinitionNames": {
      "id": "CustomResourceDefinitionNames",
      "description": "CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition",
      "type": "object",
      "properties": {
        "plural": {
          "description": "Plural is the plural name of the resource to serve. It must match the name of the CustomResourceDefinition-registration too: plural.group and it must be all lowercase.",
          "type": "string"
        },
        "singular": {
          "description": "Singular is the singular name of the resource. It must be all lowercase Defaults to lowercased +optional",
          "type": "string"
        },
        "shortNames": {
          "description": "ShortNames are short names for the resource. It must be all lowercase. +optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "Kind is the serialized kind of the resource. It is normally CamelCase and singular.",
          "type": "string"
        },
        "listKind": {
          "description": "ListKind is the serialized kind of the list for this resource. Defaults to List. +optional",
          "type": "string"
        },
        "categories": {
          "description": "Categories is a list of grouped resources custom resources belong to (e.g. 'all') +optional",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomResourceValidation": {
      "id": "CustomResourceValidation",
      "description": "CustomResourceValidation is a list of validation methods for CustomResources.",
      "type": "object",
      "properties": {
        "openAPIV3Schema": {
          "description": "OpenAPIV3Schema is the OpenAPI v3 schema to be validated against. +optional",
          "$ref": "JSONSchemaProps"
        }
      }
    },
    "JSONSchemaProps": {
      "id": "JSONSchemaProps",
      "description": "JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http:\/\/json-schema.org\/).",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "schema": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "default": {
          "$ref": "JSON"
        },
        "maximum": {
          "type": "number",
          "format": "double"
        },
        "exclusiveMaximum": {
          "type": "boolean"
        },
        "minimum": {
          "type": "number",
          "format": "double"
        },
        "exclusiveMinimum": {
          "type": "boolean"
        },
        "maxLength": {
          "type": "string",
          "format": "int64"
        },
        "minLength": {
          "type": "string",
          "format": "int64"
        },
        "pattern": {
          "type": "string"
        },
        "maxItems": {
          "type": "string",
          "format": "int64"
        },
        "minItems": {
          "type": "string",
          "format": "int64"
        },
        "uniqueItems": {
          "type": "boolean"
        },
        "multipleOf": {
          "type": "number",
          "format": "double"
        },
        "enum": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxProperties": {
          "type": "string",
          "format": "int64"
        },
        "minProperties": {
          "type": "string",
          "format": "int64"
        },
        "required": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "items": {
          "$ref": "JSONSchemaPropsOrArray"
        },
        "allOf": {
          "type": "array",
          "items": {
            "$ref": "JSONSchemaProps"
          }
        },
        "oneOf": {
          "type": "array",
          "items": {
            "$ref": "JSONSchemaProps"
          }
        },
        "anyOf": {
          "type": "array",
          "items": {
            "$ref": "JSONSchemaProps"
          }
        },
        "not": {
          "$ref": "JSONSchemaProps"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "JSONSchemaProps"
          }
        },
        "additionalProperties": {
          "$ref": "JSONSchemaPropsOrBool"
        },
        "patternProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "JSONSchemaProps"
          }
        },
        "dependencies": {
          "type": "object",
          "additionalProperties": {
            "$ref": "JSONSchemaPropsOrStringArray"
          }
        },
        "additionalItems": {
          "$ref": "JSONSchemaPropsOrBool"
        },
        "definitions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "JSONSchemaProps"
          }
        },
        "externalDocs": {
          "$ref": "ExternalDocumentation"
        },
        "example": {
          "$ref": "JSON"
        }
      }
    },
    "JSON": {
      "id": "JSON",
      "description": "JSON represents any valid JSON value. These types are supported: bool, int64, float64, string, []interface{}, map[string]interface{} and nil.",
      "type": "object",
      "properties": {
        "raw": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "JSONSchemaPropsOrArray": {
      "id": "JSONSchemaPropsOrArray",
      "description": "JSONSchemaPropsOrArray represents a value that can either be a JSONSchemaProps or an array of JSONSchemaProps. Mainly here for serialization purposes.",
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "JSONSchemaProps"
        },
        "jsonSchemas": {
          "type": "array",
          "items": {
            "$ref": "JSONSchemaProps"
          }
        }
      }
    },
    "JSONSchemaPropsOrBool": {
      "id": "JSONSchemaPropsOrBool",
      "description": "JSONSchemaPropsOrBool represents JSONSchemaProps or a boolean value. Defaults to true for the boolean property.",
      "type": "object",
      "properties": {
        "allows": {
          "type": "boolean"
        },
        "schema": {
          "$ref": "JSONSchemaProps"
        }
      }
    },
    "JSONSchemaPropsOrStringArray": {
      "id": "JSONSchemaPropsOrStringArray",
      "description": "JSONSchemaPropsOrStringArray represents a JSONSchemaProps or a string array.",
      "type": "object",
      "properties": {
        "schema": {
          "$ref": "JSONSchemaProps"
        },
        "property": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExternalDocumentation": {
      "id": "ExternalDocumentation",
      "description": "ExternalDocumentation allows referencing an external resource for extended documentation.",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "CustomResourceSubresources": {
      "id": "CustomResourceSubresources",
      "description": "CustomResourceSubresources defines the status and scale subresources for CustomResources.",
      "type": "object",
      "properties": {
        "status": {
          "description": "Status denotes the status subresource for CustomResources +optional",
          "$ref": "CustomResourceSubresourceStatus"
        },
        "scale": {
          "description": "Scale denotes the scale subresource for CustomResources +optional",
          "$ref": "CustomResourceSubresourceScale"
        }
      }
    },
    "CustomResourceSubresourceStatus": {
      "id": "CustomResourceSubresourceStatus",
      "description": "CustomResourceSubresourceStatus defines how to serve the status subresource for CustomResources. Status is represented by the `.status` JSON path inside of a CustomResource. When set, * exposes a \/status subresource for the custom resource * PUT requests to the \/status subresource take a custom resource object, and ignore changes to anything except the status stanza * PUT\/POST\/PATCH requests to the custom resource ignore changes to the status stanza",
      "type": "object",
      "properties": {
      }
    },
    "CustomResourceSubresourceScale": {
      "id": "CustomResourceSubresourceScale",
      "description": "CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.",
      "type": "object",
      "properties": {
        "specReplicasPath": {
          "description": "SpecReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Spec.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .spec. If there is no value under the given path in the CustomResource, the \/scale subresource will return an error on GET.",
          "type": "string"
        },
        "statusReplicasPath": {
          "description": "StatusReplicasPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Replicas. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. If there is no value under the given path in the CustomResource, the status replica value in the \/scale subresource will default to 0.",
          "type": "string"
        },
        "labelSelectorPath": {
          "description": "LabelSelectorPath defines the JSON path inside of a CustomResource that corresponds to Scale.Status.Selector. Only JSON paths without the array notation are allowed. Must be a JSON Path under .status. Must be set to work with HPA. If there is no value under the given path in the CustomResource, the status label selector value in the \/scale subresource will default to the empty string. +optional",
          "type": "string"
        }
      }
    },
    "CustomResourceDefinitionVersion": {
      "id": "CustomResourceDefinitionVersion",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name is the version name, e.g. \u201Cv1\u201D, \u201Cv2beta1\u201D, etc.",
          "type": "string"
        },
        "served": {
          "description": "Served is a flag enabling\/disabling this version from being served via REST APIs",
          "type": "boolean"
        },
        "storage": {
          "description": "Storage flags the version as storage version. There must be exactly one flagged as storage version.",
          "type": "boolean"
        }
      }
    },
    "CustomResourceColumnDefinition": {
      "id": "CustomResourceColumnDefinition",
      "description": "CustomResourceColumnDefinition specifies a column for server side printing.",
      "type": "object",
      "properties": {
        "name": {
          "description": "name is a human readable name for the column.",
          "type": "string"
        },
        "type": {
          "description": "type is an OpenAPI type definition for this column. See https:\/\/github.com\/OAI\/OpenAPI-Specification\/blob\/master\/versions\/2.0.md#data-types for more.",
          "type": "string"
        },
        "format": {
          "description": "format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https:\/\/github.com\/OAI\/OpenAPI-Specification\/blob\/master\/versions\/2.0.md#data-types for more. +optional",
          "type": "string"
        },
        "description": {
          "description": "description is a human readable description of this column. +optional",
          "type": "string"
        },
        "priority": {
          "description": "priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a higher priority. +optional",
          "type": "integer",
          "format": "int32"
        },
        "jsonPath": {
          "description": "JSONPath is a simple JSON path, i.e. with array notation.",
          "type": "string"
        }
      }
    },
    "ListCustomResourceDefinitionsResponse": {
      "id": "ListCustomResourceDefinitionsResponse",
      "type": "object",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"k8s.apiextensions.io\/v1beta1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"CustomResourceDefinitionList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this CustomResourceDefinition list.",
          "$ref": "ListMeta"
        },
        "items": {
          "description": "List of CustomResourceDefinitions.",
          "type": "array",
          "items": {
            "$ref": "CustomResourceDefinition"
          }
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "triggers": {
              "methods": {
                "create": {
                  "id": "events.projects.locations.triggers.create",
                  "path": "v1beta1/{+parent}/triggers",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "The project ID or project number in which this trigger should be created.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Trigger"
                  },
                  "response": {
                    "$ref": "Trigger"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new trigger."
                },
                "list": {
                  "id": "events.projects.locations.triggers.list",
                  "path": "v1beta1/{+parent}/triggers",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "The project ID or project number from which the triggers should be listed.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "includeUninitialized": {
                      "description": "If true, partially initialized resources are included in the response. Not currently used by Events for Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Events for Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Events for Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Events for Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "continue": {
                      "description": "Optional. Encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListTriggersResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to list triggers."
                },
                "get": {
                  "id": "events.projects.locations.triggers.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the trigger being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/triggers\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Trigger"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to get information about a trigger."
                },
                "replaceTrigger": {
                  "id": "events.projects.locations.triggers.replaceTrigger",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "httpMethod": "PUT",
                  "parameters": {
                    "name": {
                      "description": "The name of the trigger being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/triggers\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Trigger"
                  },
                  "response": {
                    "$ref": "Trigger"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to replace a trigger. Only the spec and metadata labels and annotations are modifiable. After the Update request, Events for Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control."
                },
                "delete": {
                  "id": "events.projects.locations.triggers.delete",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the trigger being deleted. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/triggers\/[^\/]+$",
                      "type": "string"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Events for Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io\/docs\/concepts\/workloads\/controllers\/garbage-collection\/ for more information.",
                      "location": "query",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Specifies the cascading deletion policy, in conjunction of `progation_policy` field. Events for Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    },
                    "apiVersion": {
                      "description": "Specifies the target version for the cascading deletion policy. Events for Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to delete a trigger."
                }
              }
            },
            "customresourcedefinitions": {
              "methods": {
                "get": {
                  "id": "events.projects.locations.customresourcedefinitions.get",
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/customresourcedefinitions/{customresourcedefinitionsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the CustomResourceDefinition being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/customresourcedefinitions\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "CustomResourceDefinition"
                  },
                  "description": "Rpc to get information about a CustomResourceDefinition."
                },
                "list": {
                  "id": "events.projects.locations.customresourcedefinitions.list",
                  "path": "v1beta1/{+parent}/customresourcedefinitions",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/customresourcedefinitions",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "The project ID or project number from which the storages should be listed.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "limit": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListCustomResourceDefinitionsResponse"
                  },
                  "description": "Rpc to list custom resource definitions."
                }
              }
            }
          }
        }
      }
    },
    "namespaces": {
      "resources": {
        "triggers": {
          "methods": {
            "create": {
              "id": "events.namespaces.triggers.create",
              "path": "apis/eventing.knative.dev/v1beta1/{+parent}/triggers",
              "flatPath": "apis/eventing.knative.dev/v1beta1/namespaces/{namespacesId}/triggers",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The project ID or project number in which this trigger should be created.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "Trigger"
              },
              "response": {
                "$ref": "Trigger"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Creates a new trigger."
            },
            "list": {
              "id": "events.namespaces.triggers.list",
              "path": "apis/eventing.knative.dev/v1beta1/{+parent}/triggers",
              "flatPath": "apis/eventing.knative.dev/v1beta1/namespaces/{namespacesId}/triggers",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The project ID or project number from which the triggers should be listed.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+$",
                  "type": "string"
                },
                "limit": {
                  "description": "The maximum number of records that should be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "includeUninitialized": {
                  "description": "If true, partially initialized resources are included in the response. Not currently used by Events for Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Events for Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "labelSelector": {
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "location": "query",
                  "type": "string"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Events for Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Events for Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "continue": {
                  "description": "Optional. Encoded string to continue paging.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListTriggersResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Rpc to list triggers."
            },
            "get": {
              "id": "events.namespaces.triggers.get",
              "path": "apis/eventing.knative.dev/v1beta1/{+name}",
              "flatPath": "apis/eventing.knative.dev/v1beta1/namespaces/{namespacesId}/triggers/{triggersId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the trigger being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/triggers\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Trigger"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Rpc to get information about a trigger."
            },
            "replaceTrigger": {
              "id": "events.namespaces.triggers.replaceTrigger",
              "path": "apis/eventing.knative.dev/v1beta1/{+name}",
              "flatPath": "apis/eventing.knative.dev/v1beta1/namespaces/{namespacesId}/triggers/{triggersId}",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "description": "The name of the trigger being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/triggers\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "Trigger"
              },
              "response": {
                "$ref": "Trigger"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Rpc to replace a trigger. Only the spec and metadata labels and annotations are modifiable. After the Update request, Events for Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control."
            },
            "delete": {
              "id": "events.namespaces.triggers.delete",
              "path": "apis/eventing.knative.dev/v1beta1/{+name}",
              "flatPath": "apis/eventing.knative.dev/v1beta1/namespaces/{namespacesId}/triggers/{triggersId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the trigger being deleted. If needed, replace {namespace_id} with the project ID.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/triggers\/[^\/]+$",
                  "type": "string"
                },
                "propagationPolicy": {
                  "description": "Specifies the propagation policy of delete. Events for Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io\/docs\/concepts\/workloads\/controllers\/garbage-collection\/ for more information.",
                  "location": "query",
                  "type": "string"
                },
                "kind": {
                  "description": "Specifies the cascading deletion policy, in conjunction of `progation_policy` field. Events for Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "apiVersion": {
                  "description": "Specifies the target version for the cascading deletion policy. Events for Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Rpc to delete a trigger."
            }
          }
        },
        "customresourcedefinitions": {
          "methods": {
            "get": {
              "id": "events.namespaces.customresourcedefinitions.get",
              "path": "apis/apiextensions.k8s.io/v1beta1/{+name}",
              "flatPath": "apis/apiextensions.k8s.io/v1beta1/namespaces/{namespacesId}/customresourcedefinitions/{customresourcedefinitionsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the CustomResourceDefinition being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces\/[^\/]+\/customresourcedefinitions\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "CustomResourceDefinition"
              },
              "description": "Rpc to get information about a CustomResourceDefinition."
            }
          }
        }
      }
    },
    "customresourcedefinitions": {
      "methods": {
        "list": {
          "id": "events.customresourcedefinitions.list",
          "path": "apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions",
          "flatPath": "apis/apiextensions.k8s.io/v1beta1/customresourcedefinitions",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "The project ID or project number from which the storages should be listed.",
              "location": "query",
              "type": "string"
            },
            "limit": {
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "includeUninitialized": {
              "description": "Not currently used by Cloud Run.",
              "location": "query",
              "type": "boolean"
            },
            "fieldSelector": {
              "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
              "location": "query",
              "type": "string"
            },
            "labelSelector": {
              "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
              "location": "query",
              "type": "string"
            },
            "resourceVersion": {
              "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
              "location": "query",
              "type": "string"
            },
            "watch": {
              "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
              "location": "query",
              "type": "boolean"
            },
            "continue": {
              "description": "Optional encoded string to continue paging.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListCustomResourceDefinitionsResponse"
          },
          "description": "Rpc to list custom resource definitions."
        }
      }
    }
  },
  "basePath": ""
}