{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "recommender:v1alpha1",
  "name": "recommender",
  "canonicalName": "Recommender",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Recommender API",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/recommender/docs/",
  "protocol": "rest",
  "rootUrl": "https://recommender.googleapis.com/",
  "mtlsRootUrl": "https://recommender.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://recommender.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudRecommenderV1alpha1ListRecommendationsResponse": {
      "id": "GoogleCloudRecommenderV1alpha1ListRecommendationsResponse",
      "description": "Response to the `ListRecommendations` method.",
      "type": "object",
      "properties": {
        "recommendations": {
          "description": "The set of recommendations for the `parent` resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1alpha1Recommendation"
          }
        },
        "nextPageToken": {
          "description": "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1Recommendation": {
      "id": "GoogleCloudRecommenderV1alpha1Recommendation",
      "description": "A recommendation along with a suggested action. E.g., a rightsizing recommendation for an underutilized VM, next product suggestion for billing account.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of recommendation. * A project recommendation is represented as projects\/[PROJECT_NUMBER]\/locations\/[LOCATION]\/recommenders\/[RECOMMENDER_ID]\/recommendations\/[RECOMMENDATION_ID] Example: A recommendation for a GCP resource such as compute instance, storage bucket is represented as a project recommendation. projects\/[PROJECT_NUMBER]\/locations\/[LOCATION]\/recommenders\/[RECOMMENDER_ID]\/recommendations\/[RECOMMENDATION_ID]",
          "type": "string"
        },
        "description": {
          "description": "Required. Free-form human readable summary in English. The maximum length is 500 characters.",
          "type": "string"
        },
        "lastRefreshTime": {
          "description": "Output only. Last time this recommendation was refreshed by the system that created it in the first place.",
          "type": "string",
          "format": "google-datetime"
        },
        "primaryImpact": {
          "description": "Required. The primary impact that this recommendation can have while trying to optimize for one category.",
          "$ref": "GoogleCloudRecommenderV1alpha1Impact"
        },
        "additionalImpact": {
          "description": "Optional set of additional impact that this recommendation may have when trying to optimize for the primary category. These may be positive or negative.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1alpha1Impact"
          }
        },
        "content": {
          "description": "Output only. Content of the recommendation describing why a recommendation was generated and what the changes are.",
          "$ref": "GoogleCloudRecommenderV1alpha1RecommendationContent"
        },
        "stateInfo": {
          "description": "Information for state. Contains state and metadata.",
          "$ref": "GoogleCloudRecommenderV1alpha1RecommendationStateInfo"
        },
        "etag": {
          "description": "Output only. Fingerprint of the Recommendation. Provides optimistics locking when updating states.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1Impact": {
      "id": "GoogleCloudRecommenderV1alpha1Impact",
      "description": "Contains the impact a recommendation can have for a given category.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Category that is being targeted.",
          "type": "string",
          "enumDescriptions": [
            "Default unspecified category. Don't use directly.",
            "Indicates a potential increase or decrease in cost.",
            "Indicates a potential increase or decrease in security.",
            "Indicates a potential increase or decrease in performance."
          ],
          "enum": [
            "CATEGORY_UNSPECIFIED",
            "COST",
            "SECURITY",
            "PERFORMANCE"
          ]
        },
        "costProjection": {
          "description": "Optional. Use with CategoryType.COST",
          "$ref": "GoogleCloudRecommenderV1alpha1CostProjection"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1CostProjection": {
      "id": "GoogleCloudRecommenderV1alpha1CostProjection",
      "description": "Contains metadata about how much money a recommendation can save or incur.",
      "type": "object",
      "properties": {
        "cost": {
          "description": "An approximate projection on amount saved or amount incurred. Negative cost units indicate cost savings and positive cost units indicate increase. See google.type.Money documentation for positive\/negative units.",
          "$ref": "GoogleTypeMoney"
        },
        "duration": {
          "description": "Duration for which this cost applies.",
          "type": "string",
          "format": "google-duration"
        }
      }
    },
    "GoogleTypeMoney": {
      "id": "GoogleTypeMoney",
      "description": "Represents an amount of money with its currency type.",
      "type": "object",
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1RecommendationContent": {
      "id": "GoogleCloudRecommenderV1alpha1RecommendationContent",
      "description": "Contains reasoning around why a recommendation is generated, what resources are changing and how they are changing.",
      "type": "object",
      "properties": {
        "justification": {
          "description": "Required. A struct of custom fields per recommender to explain the rationale behind generating this recommendation. Example: \"numGrantedPermissions\": \"1000\"",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "operationGroups": {
          "description": "Operations to one or more Google Cloud resources grouped in such a way that, all operations within one group are expected to be performed atomically and in an order.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1alpha1OperationGroup"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1OperationGroup": {
      "id": "GoogleCloudRecommenderV1alpha1OperationGroup",
      "description": "Group of operations that need to be performed atomically.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "List of operations across one or more resources that belong to this group. Loosely based on RFC6902 and should be performed in the order they appear.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1alpha1Operation"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1Operation": {
      "id": "GoogleCloudRecommenderV1alpha1Operation",
      "description": "Contains an operation for a resource inspired by the JSON-PATCH format with support for: * Custom filters for describing partial array patch. * Extended path values for describing nested arrays. * Custom fields for describing the resource for which the operation is being described. * Allows extension to custom operations not natively supported by RFC6902. See https:\/\/tools.ietf.org\/html\/rfc6902 for details on the original RFC.",
      "type": "object",
      "properties": {
        "action": {
          "description": "Required. Type of this operation. Supports 'add', 'remove', 'replace', 'move', 'copy', 'test' and custom operations. This field is also case-insensitive.",
          "type": "string"
        },
        "resourceType": {
          "description": "Required. Type of GCP resource being modified\/tested. Example: cloudresourcemanager.googleapis.com\/Project, compute.googleapis.com\/Instance",
          "type": "string"
        },
        "resource": {
          "description": "Required. Contains the fully qualified resource name. ex: \/\/cloudresourcemanager.googleapis.com\/projects\/foo.",
          "type": "string"
        },
        "path": {
          "description": "Required. Path to the target field being operated on. If the operation is at the resource level, then path should be \"\/\".",
          "type": "string"
        },
        "sourceResource": {
          "description": "Use for COPY operation across different resources (of the same type). Example: A resource clone can be done via action = 'copy', path = \"\/\", from = \"\/\", source_resource = and resource_name = .",
          "type": "string"
        },
        "sourcePath": {
          "description": "Required if action is 'copy' or 'move' to indicate the source field or resource, ignored if provided for other operation types.",
          "type": "string"
        },
        "value": {
          "description": "Value for the `path` field. Required if action is 'add'\/'replace'\/'test'.",
          "type": "any"
        },
        "pathFilter": {
          "description": "Set of filters to apply if `path` refers to array elements or nested array elements in order to narrow down to a single unique element that is being tested\/modified. Example: { \"\/versions\/*\/name\" : \"it-123\" \"\/versions\/*\/targetSize\/percent\": \"20\" }",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1RecommendationStateInfo": {
      "id": "GoogleCloudRecommenderV1alpha1RecommendationStateInfo",
      "description": "Information for state. Contains state and metadata.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Output only. The state of the recommendation, Eg ACTIVE, SUCCEEDED, FAILED.",
          "type": "string",
          "enumDescriptions": [
            "Default state. Don't use directly.",
            "Recommendation is active and can be applied. Recommendations content can be updated by Google. ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in claimed state. Recommendations content is immutable and cannot be updated by Google. CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in succeeded state. Recommendations content is immutable and cannot be updated by Google. SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in failed state. Recommendations content is immutable and cannot be updated by Google. FAILED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in dismissed state. DISMISSED recommendations can be marked as ACTIVE."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CLAIMED",
            "SUCCEEDED",
            "FAILED",
            "DISMISSED"
          ]
        },
        "stateMetadata": {
          "description": "A map of metadata for the state, provided by user or automations systems.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1MarkClaimedRequest": {
      "id": "GoogleCloudRecommenderV1alpha1MarkClaimedRequest",
      "description": "Request for the `MarkClaimed` Method.",
      "type": "object",
      "properties": {
        "stateMetadata": {
          "description": "State properties user wish to include with this state. Full replace of the current state_metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "Fingerprint of the Recommendation. Provides optimistic locking.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1MarkSucceededRequest": {
      "id": "GoogleCloudRecommenderV1alpha1MarkSucceededRequest",
      "description": "Request for the `MarkSucceeded` Method.",
      "type": "object",
      "properties": {
        "stateMetadata": {
          "description": "State properties user wish to include with this state. Full replace of the current state_metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "Fingerprint of the Recommendation. Provides optimistic locking.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1MarkFailedRequest": {
      "id": "GoogleCloudRecommenderV1alpha1MarkFailedRequest",
      "description": "Request for the `MarkFailed` Method.",
      "type": "object",
      "properties": {
        "stateMetadata": {
          "description": "State properties user wish to include with this state. Full replace of the current state_metadata.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "etag": {
          "description": "Fingerprint of the Recommendation. Provides optimistics locking.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1MarkActiveRequest": {
      "id": "GoogleCloudRecommenderV1alpha1MarkActiveRequest",
      "description": "Request for the `MarkActive` Method.",
      "type": "object",
      "properties": {
        "etag": {
          "description": "Fingerprint of the Recommendation. Provides optimistic locking.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1ListRulesResponse": {
      "id": "GoogleCloudRecommenderV1alpha1ListRulesResponse",
      "description": "Response for the 'ListRules' method.",
      "type": "object",
      "properties": {
        "rules": {
          "description": "Rules listed. Ordered by id by default.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRecommenderV1alpha1Rule"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1Rule": {
      "id": "GoogleCloudRecommenderV1alpha1Rule",
      "description": "Rule is used to set states for Recommendations matching the conditions. Rule can be applied to current and future recommendations.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Unique name of the rule, generated by the server. Eg, projects\/*\/rules\/*",
          "type": "string"
        },
        "condition": {
          "description": "Condition of the rule, conditions matches all fields specified in the conditions.",
          "$ref": "GoogleCloudRecommenderV1alpha1Condition"
        },
        "updateTime": {
          "description": "Output only. Last update time for the rule.",
          "type": "string",
          "format": "google-datetime"
        },
        "targetState": {
          "description": "State to set for recommendations matching the conditions.",
          "type": "string",
          "enumDescriptions": [
            "Default state. Don't use directly.",
            "Recommendation is active and can be applied. Recommendations content can be updated by Google. ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in claimed state. Recommendations content is immutable and cannot be updated by Google. CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in succeeded state. Recommendations content is immutable and cannot be updated by Google. SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in failed state. Recommendations content is immutable and cannot be updated by Google. FAILED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in dismissed state. DISMISSED recommendations can be marked as ACTIVE."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CLAIMED",
            "SUCCEEDED",
            "FAILED",
            "DISMISSED"
          ]
        }
      }
    },
    "GoogleCloudRecommenderV1alpha1Condition": {
      "id": "GoogleCloudRecommenderV1alpha1Condition",
      "description": "Condition of the rule. Condition will match all fields specified within the Condition.",
      "type": "object",
      "properties": {
        "recommenderId": {
          "description": "Id of the Recommender to match. Eg, com.google.iam.RoleRecommender.",
          "type": "string"
        },
        "resources": {
          "description": "Resource names to match.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fields": {
          "description": "Fields and value of recommendation to match, this will be part of the recommendation.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "GoogleCloudRecommenderV1alpha1CreateRecommendationRuleRequest": {
      "id": "GoogleCloudRecommenderV1alpha1CreateRecommendationRuleRequest",
      "description": "Request for the 'CreateRecommendationRule' method.",
      "type": "object",
      "properties": {
        "targetState": {
          "description": "State to set for the recommendation. Only DISMISSED state is allowed.",
          "type": "string",
          "enumDescriptions": [
            "Default state. Don't use directly.",
            "Recommendation is active and can be applied. Recommendations content can be updated by Google. ACTIVE recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in claimed state. Recommendations content is immutable and cannot be updated by Google. CLAIMED recommendations can be marked as CLAIMED, SUCCEEDED, or FAILED.",
            "Recommendation is in succeeded state. Recommendations content is immutable and cannot be updated by Google. SUCCEEDED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in failed state. Recommendations content is immutable and cannot be updated by Google. FAILED recommendations can be marked as SUCCEEDED, or FAILED.",
            "Recommendation is in dismissed state. DISMISSED recommendations can be marked as ACTIVE."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "CLAIMED",
            "SUCCEEDED",
            "FAILED",
            "DISMISSED"
          ]
        }
      }
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "recommenders": {
              "resources": {
                "recommendations": {
                  "methods": {
                    "list": {
                      "id": "recommender.projects.locations.recommenders.recommendations.list",
                      "path": "v1alpha1/{+parent}/recommendations",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "Required. The container resource on which to execute the request. Acceptable formats: 1. \"projects\/[PROJECT_NUMBER]\/locations\/[LOCATION]\/recommenders\/[RECOMMENDER_ID]\", LOCATION here refers to GCP Locations: https:\/\/cloud.google.com\/about\/locations\/",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "Optional. The maximum number of results to return from this request. Non-positive values are ignored. The presence of `next_page_token` in the response indicates that more results might be available. If not specified, the default page_size is 50.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. If present, retrieves the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters should be identical to those in the previous call.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter expression to restrict the recommendations returned. Supported filter fields: state_info.state Eg: `stateInfo.state:\"DISMISSED\" or stateInfo.state:\"FAILED\"",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1ListRecommendationsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists recommendations for a Cloud project and requires the recommendation.*.list IAM permission."
                    },
                    "get": {
                      "id": "recommender.projects.locations.recommenders.recommendations.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "Name of the recommendation.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+\/recommendations\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Gets the requested recommendation and requires the recommendation.*.get IAM permission."
                    },
                    "markClaimed": {
                      "id": "recommender.projects.locations.recommenders.recommendations.markClaimed",
                      "path": "v1alpha1/{+name}:markClaimed",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markClaimed",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Name of the recommendation.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+\/recommendations\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1alpha1MarkClaimedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Mark the Recommendation State as Claimed. Users can use this method to indicate to the Recommender API that they are starting to apply the recommendation themselves. This stops the recommendation content from being updated. MarkClaimed can be applied to recommendations in CLAIMED, or ACTIVE state. recommendation.*.update IAM permission is required to make this change."
                    },
                    "markSucceeded": {
                      "id": "recommender.projects.locations.recommenders.recommendations.markSucceeded",
                      "path": "v1alpha1/{+name}:markSucceeded",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markSucceeded",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Name of the recommendation.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+\/recommendations\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1alpha1MarkSucceededRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Mark the Recommendation State as Succeeded. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation was successful. This stops the recommendation content from being updated. MarkSucceeded can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. recommendation.*.update IAM permission is required to make this change."
                    },
                    "markFailed": {
                      "id": "recommender.projects.locations.recommenders.recommendations.markFailed",
                      "path": "v1alpha1/{+name}:markFailed",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markFailed",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Name of the recommendation.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+\/recommendations\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1alpha1MarkFailedRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Mark the Recommendation State as Failed. Users can use this method to indicate to the Recommender API that they have applied the recommendation themselves, and the operation failed. This stops the recommendation content from being updated. MarkFailed can be applied to recommendations in ACTIVE, CLAIMED, SUCCEEDED, or FAILED state. recommendation.*.update IAM permission is required to make this change."
                    },
                    "markActive": {
                      "id": "recommender.projects.locations.recommenders.recommendations.markActive",
                      "path": "v1alpha1/{+name}:markActive",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:markActive",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Name of the recommendation.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+\/recommendations\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1alpha1MarkActiveRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1Recommendation"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Mark the Recommendation State as Active. Users can use this method to indicate to the Recommender API that a DISMISSED recommendation has to be marked back as ACTIVE. MarkActive can be applied to recommendations in DISMISSED state. recommendation.*.update IAM permission is required to make this change."
                    },
                    "createRule": {
                      "id": "recommender.projects.locations.recommenders.recommendations.createRule",
                      "path": "v1alpha1/{+name}:createRule",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/recommenders/{recommendersId}/recommendations/{recommendationsId}:createRule",
                      "httpMethod": "POST",
                      "parameters": {
                        "name": {
                          "description": "Name of Recommendation to create from, the recommendation will be used as the template for creating a Rule. The API will use predefined methods to generate Rules \"similar\" to the given Recommendation.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/recommenders\/[^\/]+\/recommendations\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudRecommenderV1alpha1CreateRecommendationRuleRequest"
                      },
                      "response": {
                        "$ref": "GoogleCloudRecommenderV1alpha1Rule"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Create a Rule from the recommendation. Check recommender.*.list and recommender.rule.create IAM permissions."
                    }
                  }
                }
              }
            }
          }
        },
        "rules": {
          "methods": {
            "list": {
              "id": "recommender.projects.rules.list",
              "path": "v1alpha1/{+parent}/rules",
              "flatPath": "v1alpha1/projects/{projectsId}/rules",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Parent name of the rules to list.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of rules to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The next_page_token value returned from a previous List request, if any.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudRecommenderV1alpha1ListRulesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List Rules. Check recommender.rule.list IAM permission."
            },
            "get": {
              "id": "recommender.projects.rules.get",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/rules/{rulesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Name of rule to get.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/rules\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudRecommenderV1alpha1Rule"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a Rule. Check recommender.rule.list IAM permission."
            },
            "delete": {
              "id": "recommender.projects.rules.delete",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/rules/{rulesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Name of rule to delete.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/rules\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deleting a Rule. Deleting a rule does not affect recommendations. Check recommender.rule.delete IAM permission."
            },
            "apply": {
              "id": "recommender.projects.rules.apply",
              "path": "v1alpha1/{+name}:apply",
              "flatPath": "v1alpha1/projects/{projectsId}/rules/{rulesId}:apply",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Name of rule to apply.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/rules\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Apply a rule. This will set the specified state on all matching recommendations. This is a long running operation. Checks recommender.rule.list and recommender.*.update IAM permissions."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}