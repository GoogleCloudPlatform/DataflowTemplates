{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "cloudshell:v1",
  "name": "cloudshell",
  "canonicalName": "Cloud Shell",
  "version": "v1",
  "revision": "0",
  "title": "Cloud Shell API",
  "description": "Allows users to start, configure, and connect to interactive shell sessions running in the cloud. ",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/shell/docs/",
  "protocol": "rest",
  "rootUrl": "https://cloudshell.googleapis.com/",
  "mtlsRootUrl": "https://cloudshell.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://cloudshell.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "Environment": {
      "id": "Environment",
      "description": "A Cloud Shell environment, which is defined as the combination of a Docker image specifying what is installed on the environment and a home directory containing the user's data that will remain across sessions. Each user has at least an environment with the ID \"default\".",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. Full name of this resource, in the format `users\/{owner_email}\/environments\/{environment_id}`. `{owner_email}` is the email address of the user to whom this environment belongs, and `{environment_id}` is the identifier of this environment. For example, `users\/someone@example.com\/environments\/default`.",
          "type": "string"
        },
        "id": {
          "description": "Output only. The environment's identifier, unique among the user's environments.",
          "readOnly": true,
          "type": "string"
        },
        "dockerImage": {
          "description": "Required. Immutable. Full path to the Docker image used to run this environment, e.g. \"gcr.io\/dev-con\/cloud-devshell:latest\".",
          "type": "string"
        },
        "state": {
          "description": "Output only. Current execution state of this environment.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "The environment's states is unknown.",
            "The environment is not running and can't be connected to. Starting the environment will transition it to the PENDING state.",
            "The environment is being started but is not yet ready to accept connections.",
            "The environment is running and ready to accept connections. It will automatically transition back to DISABLED after a period of inactivity or if another environment is started.",
            "The environment is being deleted and can't be connected to."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "SUSPENDED",
            "PENDING",
            "RUNNING",
            "DELETING"
          ]
        },
        "webHost": {
          "description": "Output only. Host to which clients can connect to initiate HTTPS or WSS connections with the environment.",
          "readOnly": true,
          "type": "string"
        },
        "sshUsername": {
          "description": "Output only. Username that clients should use when initiating SSH sessions with the environment.",
          "readOnly": true,
          "type": "string"
        },
        "sshHost": {
          "description": "Output only. Host to which clients can connect to initiate SSH sessions with the environment.",
          "readOnly": true,
          "type": "string"
        },
        "sshPort": {
          "description": "Output only. Port to which clients can connect to initiate SSH sessions with the environment.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "publicKeys": {
          "description": "Output only. Public keys associated with the environment. Clients can connect to this environment via SSH only if they possess a private key corresponding to at least one of these public keys. Keys can be added to or removed from the environment using the AddPublicKey and RemovePublicKey methods.",
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "StartEnvironmentRequest": {
      "id": "StartEnvironmentRequest",
      "description": "Request message for StartEnvironment.",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "The initial access token passed to the environment. If this is present and valid, the environment will be pre-authenticated with gcloud so that the user can run gcloud commands in Cloud Shell without having to log in. This code can be updated later by calling AuthorizeEnvironment.",
          "type": "string"
        },
        "publicKeys": {
          "description": "Public keys that should be added to the environment before it is started.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuthorizeEnvironmentRequest": {
      "id": "AuthorizeEnvironmentRequest",
      "description": "Request message for AuthorizeEnvironment.",
      "type": "object",
      "properties": {
        "accessToken": {
          "description": "The OAuth access token that should be sent to the environment.",
          "type": "string"
        },
        "idToken": {
          "description": "The OAuth ID token that should be sent to the environment.",
          "type": "string"
        },
        "expireTime": {
          "description": "The time when the credentials expire. If not set, defaults to one hour from when the server received the request.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "AddPublicKeyRequest": {
      "id": "AddPublicKeyRequest",
      "description": "Request message for AddPublicKey.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key that should be added to the environment. Supported formats are `ssh-dss` (see RFC4253), `ssh-rsa` (see RFC4253), `ecdsa-sha2-nistp256` (see RFC5656), `ecdsa-sha2-nistp384` (see RFC5656) and `ecdsa-sha2-nistp521` (see RFC5656). It should be structured as , where part is encoded with Base64.",
          "type": "string"
        }
      }
    },
    "RemovePublicKeyRequest": {
      "id": "RemovePublicKeyRequest",
      "description": "Request message for RemovePublicKey.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key that should be removed from the environment.",
          "type": "string"
        }
      }
    },
    "AddPublicKeyMetadata": {
      "id": "AddPublicKeyMetadata",
      "description": "Message included in the metadata field of operations returned from AddPublicKey.",
      "type": "object",
      "properties": {
      }
    },
    "AddPublicKeyResponse": {
      "id": "AddPublicKeyResponse",
      "description": "Response message for AddPublicKey.",
      "type": "object",
      "properties": {
        "key": {
          "description": "Key that was added to the environment.",
          "type": "string"
        }
      }
    },
    "AuthorizeEnvironmentMetadata": {
      "id": "AuthorizeEnvironmentMetadata",
      "description": "Message included in the metadata field of operations returned from AuthorizeEnvironment.",
      "type": "object",
      "properties": {
      }
    },
    "AuthorizeEnvironmentResponse": {
      "id": "AuthorizeEnvironmentResponse",
      "description": "Response message for AuthorizeEnvironment.",
      "type": "object",
      "properties": {
      }
    },
    "CreateEnvironmentMetadata": {
      "id": "CreateEnvironmentMetadata",
      "description": "Message included in the metadata field of operations returned from CreateEnvironment.",
      "type": "object",
      "properties": {
      }
    },
    "DeleteEnvironmentMetadata": {
      "id": "DeleteEnvironmentMetadata",
      "description": "Message included in the metadata field of operations returned from DeleteEnvironment.",
      "type": "object",
      "properties": {
      }
    },
    "RemovePublicKeyMetadata": {
      "id": "RemovePublicKeyMetadata",
      "description": "Message included in the metadata field of operations returned from RemovePublicKey.",
      "type": "object",
      "properties": {
      }
    },
    "RemovePublicKeyResponse": {
      "id": "RemovePublicKeyResponse",
      "description": "Response message for RemovePublicKey.",
      "type": "object",
      "properties": {
      }
    },
    "StartEnvironmentMetadata": {
      "id": "StartEnvironmentMetadata",
      "description": "Message included in the metadata field of operations returned from StartEnvironment.",
      "type": "object",
      "properties": {
        "state": {
          "description": "Current state of the environment being started.",
          "type": "string",
          "enumDescriptions": [
            "The environment's start state is unknown.",
            "The environment is in the process of being started, but no additional details are available.",
            "Startup is waiting for the user's disk to be unarchived. This can happen when the user returns to Cloud Shell after not having used it for a while, and suggests that startup will take longer than normal.",
            "Startup is waiting for compute resources to be assigned to the environment. This should normally happen very quickly, but an environment might stay in this state for an extended period of time if the system is experiencing heavy load.",
            "Startup has completed. If the start operation was successful, the user should be able to establish an SSH connection to their environment. Otherwise, the operation will contain details of the failure."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTING",
            "UNARCHIVING_DISK",
            "AWAITING_COMPUTE_RESOURCES",
            "FINISHED"
          ]
        }
      }
    },
    "StartEnvironmentResponse": {
      "id": "StartEnvironmentResponse",
      "description": "Message included in the response field of operations returned from StartEnvironment once the operation is complete.",
      "type": "object",
      "properties": {
        "environment": {
          "description": "Environment that was started.",
          "$ref": "Environment"
        }
      }
    }
  },
  "resources": {
    "operations": {
      "methods": {
        "list": {
          "id": "cloudshell.operations.list",
          "path": "v1/{+name}",
          "flatPath": "v1/operations",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the operation's parent resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations$",
              "type": "string"
            },
            "filter": {
              "description": "The standard list filter.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "The standard list page size.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "The standard list page token.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "ListOperationsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
        },
        "get": {
          "id": "cloudshell.operations.get",
          "path": "v1/{+name}",
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
        },
        "delete": {
          "id": "cloudshell.operations.delete",
          "path": "v1/{+name}",
          "flatPath": "v1/operations/{operationsId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be deleted.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
        },
        "cancel": {
          "id": "cloudshell.operations.cancel",
          "path": "v1/{+name}:cancel",
          "flatPath": "v1/operations/{operationsId}:cancel",
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "The name of the operation resource to be cancelled.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "CancelOperationRequest"
          },
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        }
      }
    },
    "users": {
      "resources": {
        "environments": {
          "methods": {
            "get": {
              "id": "cloudshell.users.environments.get",
              "path": "v1/{+name}",
              "flatPath": "v1/users/{usersId}/environments/{environmentsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. Name of the requested resource, for example `users\/me\/environments\/default` or `users\/someone@example.com\/environments\/default`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^users\/[^\/]+\/environments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Environment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets an environment. Returns NOT_FOUND if the environment does not exist."
            },
            "start": {
              "id": "cloudshell.users.environments.start",
              "path": "v1/{+name}:start",
              "flatPath": "v1/users/{usersId}/environments/{environmentsId}:start",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Name of the resource that should be started, for example `users\/me\/environments\/default` or `users\/someone@example.com\/environments\/default`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^users\/[^\/]+\/environments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "StartEnvironmentRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Starts an existing environment, allowing clients to connect to it. The returned operation will contain an instance of StartEnvironmentMetadata in its metadata field. Users can wait for the environment to start by polling this operation via GetOperation. Once the environment has finished starting and is ready to accept connections, the operation will contain a StartEnvironmentResponse in its response field."
            },
            "authorize": {
              "id": "cloudshell.users.environments.authorize",
              "path": "v1/{+name}:authorize",
              "flatPath": "v1/users/{usersId}/environments/{environmentsId}:authorize",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Name of the resource that should receive the credentials, for example `users\/me\/environments\/default` or `users\/someone@example.com\/environments\/default`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^users\/[^\/]+\/environments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "AuthorizeEnvironmentRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Sends OAuth credentials to a running environment on behalf of a user. When this completes, the environment will be authorized to run various Google Cloud command line tools without requiring the user to manually authenticate."
            },
            "addPublicKey": {
              "id": "cloudshell.users.environments.addPublicKey",
              "path": "v1/{+environment}:addPublicKey",
              "flatPath": "v1/users/{usersId}/environments/{environmentsId}:addPublicKey",
              "httpMethod": "POST",
              "parameters": {
                "environment": {
                  "description": "Environment this key should be added to, e.g. `users\/me\/environments\/default`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^users\/[^\/]+\/environments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "environment"
              ],
              "request": {
                "$ref": "AddPublicKeyRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Adds a public SSH key to an environment, allowing clients with the corresponding private key to connect to that environment via SSH. If a key with the same content already exists, this will error with ALREADY_EXISTS."
            },
            "removePublicKey": {
              "id": "cloudshell.users.environments.removePublicKey",
              "path": "v1/{+environment}:removePublicKey",
              "flatPath": "v1/users/{usersId}/environments/{environmentsId}:removePublicKey",
              "httpMethod": "POST",
              "parameters": {
                "environment": {
                  "description": "Environment this key should be removed from, e.g. `users\/me\/environments\/default`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^users\/[^\/]+\/environments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "environment"
              ],
              "request": {
                "$ref": "RemovePublicKeyRequest"
              },
              "response": {
                "$ref": "Operation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Removes a public SSH key from an environment. Clients will no longer be able to connect to the environment using the corresponding private key. If a key with the same content is not present, this will error with NOT_FOUND."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}