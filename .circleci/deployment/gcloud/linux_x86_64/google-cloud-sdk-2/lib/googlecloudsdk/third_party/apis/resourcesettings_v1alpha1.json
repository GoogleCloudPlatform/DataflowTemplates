{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "resourcesettings:v1alpha1",
  "name": "resourcesettings",
  "canonicalName": "Resource Settings",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Resource Settings API",
  "description": "The Resource Settings API allows users to control and modify the behavior of their GCP resources (e.g., VM, firewall, Project, etc.) across the Cloud Resource Hierarchy.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://docs.google.com/document/d/1tl-qGQuTCsYINVk2aCjhpFkqj4PdM0huO6uu3AS0MTA/preview",
  "protocol": "rest",
  "rootUrl": "https://resourcesettings.googleapis.com/",
  "mtlsRootUrl": "https://resourcesettings.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://resourcesettings.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleCloudResourcesettingsV1alpha1ListSettingsResponse": {
      "id": "GoogleCloudResourcesettingsV1alpha1ListSettingsResponse",
      "description": "The response from ListSettings.",
      "type": "object",
      "properties": {
        "settings": {
          "description": "A list of settings that are available at the specified Cloud resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudResourcesettingsV1alpha1Setting"
          }
        },
        "nextPageToken": {
          "description": "Unused. A page token used to retrieve the next page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudResourcesettingsV1alpha1Setting": {
      "id": "GoogleCloudResourcesettingsV1alpha1Setting",
      "description": "The schema for setting values. At a given Cloud resource, a setting can parent at most one setting value.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the setting. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}` * `folders\/{folder_id}\/settings\/{setting_name}` * `organizations\/{organization_id}\/settings\/{setting_name}` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\"",
          "type": "string"
        },
        "displayName": {
          "description": "The human readable name for this setting.",
          "type": "string"
        },
        "description": {
          "description": "A detailed description of what this setting does.",
          "type": "string"
        },
        "readOnly": {
          "description": "A flag indicating that values of this setting cannot be modified (see documentation of the specific setting for updates and reasons); however, it may be deleted using DeleteSettingValue if DeleteSettingValueRequest.ignore_read_only is set to true. Using this flag is considered an acknowledgement that the setting value cannot be recreated. See DeleteSettingValueRequest.ignore_read_only for more details.",
          "type": "boolean"
        },
        "dataType": {
          "description": "The data type for this setting.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified data type.",
            "A boolean setting.",
            "A string setting.",
            "A string set setting."
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "STRING_SET"
          ]
        },
        "defaultValue": {
          "description": "The value received by LookupEffectiveSettingValue if no setting value is explicitly set. Note: not all settings have a default value.",
          "$ref": "GoogleCloudResourcesettingsV1alpha1Value"
        }
      }
    },
    "GoogleCloudResourcesettingsV1alpha1Value": {
      "id": "GoogleCloudResourcesettingsV1alpha1Value",
      "description": "The data in a setting value.",
      "type": "object",
      "properties": {
        "booleanValue": {
          "description": "Defines this value as being a boolean value.",
          "type": "boolean"
        },
        "stringValue": {
          "description": "Defines this value as being a string value.",
          "type": "string"
        },
        "stringSetValue": {
          "description": "Defines this value as being a StringSet.",
          "$ref": "GoogleCloudResourcesettingsV1alpha1ValueStringSet"
        }
      }
    },
    "GoogleCloudResourcesettingsV1alpha1ValueStringSet": {
      "id": "GoogleCloudResourcesettingsV1alpha1ValueStringSet",
      "description": "A string set value that can hold a set of strings. The maximum length of each string is 60 characters and there can be a maximum of 50 strings in the string set.",
      "type": "object",
      "properties": {
        "values": {
          "description": "The strings in the set",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleCloudResourcesettingsV1alpha1SearchSettingValuesResponse": {
      "id": "GoogleCloudResourcesettingsV1alpha1SearchSettingValuesResponse",
      "description": "The response from SearchSettingValues.",
      "type": "object",
      "properties": {
        "settingValues": {
          "description": "All setting values that exist on the specified Cloud resource.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
          }
        },
        "nextPageToken": {
          "description": "Unused. A page token used to retrieve the next page.",
          "type": "string"
        }
      }
    },
    "GoogleCloudResourcesettingsV1alpha1SettingValue": {
      "id": "GoogleCloudResourcesettingsV1alpha1SettingValue",
      "description": "The instantiation of a setting. Every setting value is parented by its corresponding setting.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
          "type": "string"
        },
        "value": {
          "description": "The value of the setting. The data type of Value must always be consistent with the data type defined by the parent setting.",
          "$ref": "GoogleCloudResourcesettingsV1alpha1Value"
        },
        "etag": {
          "description": "A fingerprint used for optimistic concurrency. See UpdateSettingValue for more details.",
          "type": "string"
        },
        "readOnly": {
          "description": "Output only. A flag indicating that this setting value cannot be modified; however, it may be deleted using DeleteSettingValue if DeleteSettingValueRequest.ignore_read_only is set to true. Using this flag is considered an acknowledgement that the setting value cannot be recreated. This flag is inherited from its parent setting and is for convenience purposes. See Setting.read_only for more details.",
          "type": "boolean"
        },
        "updateTime": {
          "description": "Output only. The timestamp indicating when the setting value was last updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleProtobufEmpty": {
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "organizations": {
      "resources": {
        "settings": {
          "methods": {
            "list": {
              "id": "resourcesettings.organizations.settings.list",
              "path": "v1alpha1/{+parent}/settings",
              "flatPath": "v1alpha1/organizations/{organizationsId}/settings",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The Cloud resource that parents the setting. Must be in one of the following forms: * `projects\/{project_number}` * `projects\/{project_id}` * `folders\/{folder_id}` * `organizations\/{organization_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Unused. The size of the page to be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Unused. A page token used to retrieve the next page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1ListSettingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists all the settings that are available on the Cloud resource `parent`."
            },
            "search": {
              "id": "resourcesettings.organizations.settings.search",
              "path": "v1alpha1/{+parent}/settings:search",
              "flatPath": "v1alpha1/organizations/{organizationsId}/settings:search",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The Cloud resource that parents the setting. Must be in one of the following forms: * `projects\/{project_number}` * `projects\/{project_id}` * `folders\/{folder_id}` * `organizations\/{organization_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Unused. The size of the page to be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Unused. A page token used to retrieve the next page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SearchSettingValuesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Searches for all setting values that exist on the resource `parent`. The setting values are not limited to those of a particular setting."
            },
            "getValue": {
              "id": "resourcesettings.organizations.settings.getValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/organizations/{organizationsId}/settings/{settingsId}/value",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the setting value to get. See SettingValue for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting value does not exist."
            },
            "lookupEffectiveValue": {
              "id": "resourcesettings.organizations.settings.lookupEffectiveValue",
              "path": "v1alpha1/{+parent}:lookupEffectiveValue",
              "flatPath": "v1alpha1/organizations/{organizationsId}/settings/{settingsId}:lookupEffectiveValue",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The setting for which an effective value will be evaluated. See Setting for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/settings\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Computes the effective setting value of a setting at the Cloud resource `parent`. The effective setting value is the calculated setting value at a Cloud resource and evaluates to one of the following options in the given order (the next option is used if the previous one does not exist): 1. the setting value on the given resource 2. the setting value on the given resource's nearest ancestor 3. the setting's default value 4. an empty setting value, defined as a `SettingValue` with all fields unset Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist."
            },
            "updateValue": {
              "id": "resourcesettings.organizations.settings.updateValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/organizations/{organizationsId}/settings/{settingsId}/value",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting or the setting value does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. Note: the supplied setting value will perform a full overwrite of all fields."
            },
            "deleteValue": {
              "id": "resourcesettings.organizations.settings.deleteValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/organizations/{organizationsId}/settings/{settingsId}/value",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the setting value to delete. See SettingValue for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                },
                "ignoreReadOnly": {
                  "description": "A flag that allows the deletion of the value of a `read_only` setting. WARNING: use at your own risk. Deleting the value of a read only setting is an irreversible action (i.e., it cannot be created again).",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a setting value. If the setting value does not exist, the operation is a no-op. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting or the setting value does not exist. The setting value will not exist if a prior call to `DeleteSetting` for the setting value already returned a success code. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only."
            }
          }
          ,
          "resources": {
            "value": {
              "methods": {
                "create": {
                  "id": "resourcesettings.organizations.settings.value.create",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/organizations/{organizationsId}/settings/{settingsId}/value",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^organizations\/[^\/]+\/settings\/[^\/]+\/value$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
                  },
                  "response": {
                    "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the setting value already exists on the given Cloud resource. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only."
                }
              }
            }
          }
        }
      }
    },
    "folders": {
      "resources": {
        "settings": {
          "methods": {
            "list": {
              "id": "resourcesettings.folders.settings.list",
              "path": "v1alpha1/{+parent}/settings",
              "flatPath": "v1alpha1/folders/{foldersId}/settings",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The Cloud resource that parents the setting. Must be in one of the following forms: * `projects\/{project_number}` * `projects\/{project_id}` * `folders\/{folder_id}` * `organizations\/{organization_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Unused. The size of the page to be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Unused. A page token used to retrieve the next page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1ListSettingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists all the settings that are available on the Cloud resource `parent`."
            },
            "search": {
              "id": "resourcesettings.folders.settings.search",
              "path": "v1alpha1/{+parent}/settings:search",
              "flatPath": "v1alpha1/folders/{foldersId}/settings:search",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The Cloud resource that parents the setting. Must be in one of the following forms: * `projects\/{project_number}` * `projects\/{project_id}` * `folders\/{folder_id}` * `organizations\/{organization_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Unused. The size of the page to be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Unused. A page token used to retrieve the next page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SearchSettingValuesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Searches for all setting values that exist on the resource `parent`. The setting values are not limited to those of a particular setting."
            },
            "getValue": {
              "id": "resourcesettings.folders.settings.getValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/folders/{foldersId}/settings/{settingsId}/value",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the setting value to get. See SettingValue for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting value does not exist."
            },
            "lookupEffectiveValue": {
              "id": "resourcesettings.folders.settings.lookupEffectiveValue",
              "path": "v1alpha1/{+parent}:lookupEffectiveValue",
              "flatPath": "v1alpha1/folders/{foldersId}/settings/{settingsId}:lookupEffectiveValue",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The setting for which an effective value will be evaluated. See Setting for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/settings\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Computes the effective setting value of a setting at the Cloud resource `parent`. The effective setting value is the calculated setting value at a Cloud resource and evaluates to one of the following options in the given order (the next option is used if the previous one does not exist): 1. the setting value on the given resource 2. the setting value on the given resource's nearest ancestor 3. the setting's default value 4. an empty setting value, defined as a `SettingValue` with all fields unset Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist."
            },
            "updateValue": {
              "id": "resourcesettings.folders.settings.updateValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/folders/{foldersId}/settings/{settingsId}/value",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting or the setting value does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. Note: the supplied setting value will perform a full overwrite of all fields."
            },
            "deleteValue": {
              "id": "resourcesettings.folders.settings.deleteValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/folders/{foldersId}/settings/{settingsId}/value",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the setting value to delete. See SettingValue for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                },
                "ignoreReadOnly": {
                  "description": "A flag that allows the deletion of the value of a `read_only` setting. WARNING: use at your own risk. Deleting the value of a read only setting is an irreversible action (i.e., it cannot be created again).",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a setting value. If the setting value does not exist, the operation is a no-op. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting or the setting value does not exist. The setting value will not exist if a prior call to `DeleteSetting` for the setting value already returned a success code. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only."
            }
          }
          ,
          "resources": {
            "value": {
              "methods": {
                "create": {
                  "id": "resourcesettings.folders.settings.value.create",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/folders/{foldersId}/settings/{settingsId}/value",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^folders\/[^\/]+\/settings\/[^\/]+\/value$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
                  },
                  "response": {
                    "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the setting value already exists on the given Cloud resource. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only."
                }
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "settings": {
          "methods": {
            "list": {
              "id": "resourcesettings.projects.settings.list",
              "path": "v1alpha1/{+parent}/settings",
              "flatPath": "v1alpha1/projects/{projectsId}/settings",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The Cloud resource that parents the setting. Must be in one of the following forms: * `projects\/{project_number}` * `projects\/{project_id}` * `folders\/{folder_id}` * `organizations\/{organization_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Unused. The size of the page to be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Unused. A page token used to retrieve the next page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1ListSettingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists all the settings that are available on the Cloud resource `parent`."
            },
            "search": {
              "id": "resourcesettings.projects.settings.search",
              "path": "v1alpha1/{+parent}/settings:search",
              "flatPath": "v1alpha1/projects/{projectsId}/settings:search",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The Cloud resource that parents the setting. Must be in one of the following forms: * `projects\/{project_number}` * `projects\/{project_id}` * `folders\/{folder_id}` * `organizations\/{organization_id}`",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Unused. The size of the page to be returned.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Unused. A page token used to retrieve the next page.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SearchSettingValuesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Searches for all setting values that exist on the resource `parent`. The setting values are not limited to those of a particular setting."
            },
            "getValue": {
              "id": "resourcesettings.projects.settings.getValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/settings/{settingsId}/value",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The name of the setting value to get. See SettingValue for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting value does not exist."
            },
            "lookupEffectiveValue": {
              "id": "resourcesettings.projects.settings.lookupEffectiveValue",
              "path": "v1alpha1/{+parent}:lookupEffectiveValue",
              "flatPath": "v1alpha1/projects/{projectsId}/settings/{settingsId}:lookupEffectiveValue",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The setting for which an effective value will be evaluated. See Setting for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/settings\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Computes the effective setting value of a setting at the Cloud resource `parent`. The effective setting value is the calculated setting value at a Cloud resource and evaluates to one of the following options in the given order (the next option is used if the previous one does not exist): 1. the setting value on the given resource 2. the setting value on the given resource's nearest ancestor 3. the setting's default value 4. an empty setting value, defined as a `SettingValue` with all fields unset Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist."
            },
            "updateValue": {
              "id": "resourcesettings.projects.settings.updateValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/settings/{settingsId}/value",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "response": {
                "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Updates a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting or the setting value does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. Note: the supplied setting value will perform a full overwrite of all fields."
            },
            "deleteValue": {
              "id": "resourcesettings.projects.settings.deleteValue",
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/projects/{projectsId}/settings/{settingsId}/value",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The name of the setting value to delete. See SettingValue for naming requirements.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/settings\/[^\/]+\/value$",
                  "type": "string"
                },
                "ignoreReadOnly": {
                  "description": "A flag that allows the deletion of the value of a `read_only` setting. WARNING: use at your own risk. Deleting the value of a read only setting is an irreversible action (i.e., it cannot be created again).",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Deletes a setting value. If the setting value does not exist, the operation is a no-op. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting or the setting value does not exist. The setting value will not exist if a prior call to `DeleteSetting` for the setting value already returned a success code. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only."
            }
          }
          ,
          "resources": {
            "value": {
              "methods": {
                "create": {
                  "id": "resourcesettings.projects.settings.value.create",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/settings/{settingsId}/value",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the setting value. Must be in one of the following forms: * `projects\/{project_number}\/settings\/{setting_name}\/value` * `folders\/{folder_id}\/settings\/{setting_name}\/value` * `organizations\/{organization_id}\/settings\/{setting_name}\/value` For example, \"\/projects\/123\/settings\/gcp-enableMyFeature\/value\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/settings\/[^\/]+\/value$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
                  },
                  "response": {
                    "$ref": "GoogleCloudResourcesettingsV1alpha1SettingValue"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a setting value. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.ALREADY_EXISTS` if the setting value already exists on the given Cloud resource. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}