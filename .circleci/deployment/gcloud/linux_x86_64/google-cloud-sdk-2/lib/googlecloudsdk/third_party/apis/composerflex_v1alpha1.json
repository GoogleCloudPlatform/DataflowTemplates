{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "composerflex:v1alpha1",
  "name": "composerflex",
  "canonicalName": "Cloud Composer Flex",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Cloud Composer Flex API",
  "description": "Manages workflows on Google Cloud Platform using Apache Airflow. Composer Flex additionally provides per-workflow security, auto-scaling, and native GCP tooling for workflows and tasks. ",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/composer/",
  "protocol": "rest",
  "rootUrl": "https://composerflex.googleapis.com/",
  "mtlsRootUrl": "https://composerflex.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://composerflex.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Context": {
      "id": "Context",
      "description": "A resource to hold configurations that are common across multiple workflows.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the context, in the form: \"projects\/{projectId}\/locations\/{locationId}\/contexts\/{contextId}\"",
          "type": "string"
        },
        "airflowVariables": {
          "description": "Optional. Key value pairs to make available to a workflow. These are an application-level concept and are different from environment variables, which are a process-level concept.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "envVariables": {
          "description": "Optional. Environment variables to provide to the processes executing the workflow. Environment variable names must match the regular expression \"a-zA-Z_*\". They cannot specify Apache Airflow configuration overrides (they cannot match the regular expression `AIRFLOW__[A-Z0-9_]+__[A-Z0-9_]+`)",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "connections": {
          "description": "Optional. A mapping from connection ID to Connections to make available to the workflow. Each map entry's key should match the `id` field of the \/\/ value.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Connection"
          }
        },
        "pools": {
          "description": "Optional. A mapping from pool ID to Pools to make available to the workflow. Each map entry's key should match the `id` field of the value.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Pool"
          }
        },
        "airflowConfigOverrides": {
          "description": "Optional. A user defined mapping of key value pairs for Airflow Configurations.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "labels": {
          "description": "Optional. User-defined labels for this context. There can be no more than 64 labels entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. The time the context was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time the context was last updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Connection": {
      "id": "Connection",
      "description": "Represents an Airflow Connection. Usage of the fields within this message is described in Airflow documentation: https:\/\/airflow.apache.org\/howto\/connection\/index.html#editing-a-connection-with-the-ui",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier for the connection.",
          "type": "string"
        },
        "type": {
          "description": "The type of connection specified. This refers to the service for which this connection is created.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified connection type.",
            "Docker connection type.",
            "File connection type.",
            "FTP connection type.",
            "GCP connection type.",
            "HDFS connection type.",
            "HTTP connection type.",
            "Hive CLI connection type.",
            "Hive Metastore connection type.",
            "Hive server connection type.",
            "JDBC connection type.",
            "Jenkins connection type.",
            "MySQL connection type.",
            "Postgres connection type.",
            "Oracle connection type.",
            "Vertica connection type.",
            "Presto connection type.",
            "Amazon S3 connection type.",
            "Samba connection type.",
            "SQLite connection type.",
            "SSH connection type.",
            "Cloudant connection type.",
            "MsSQL connection type.",
            "Mesos Framework connection type.",
            "Jira connection type.",
            "Redis connection type.",
            "Wasb connection type.",
            "Databricks connection type.",
            "AWS connection type.",
            "EMR connection type.",
            "Snowflake connection type.",
            "Segment connection type.",
            "Azure Data Lake connection type.",
            "Cassandra connection type."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DOCKER",
            "FILE",
            "FTP",
            "GOOGLE_CLOUD_PLATFORM",
            "HDFS",
            "HTTP",
            "HIVE_CLI",
            "HIVE_METASTORE",
            "HIVE_SERVER_2",
            "JDBC",
            "JENKINS",
            "MYSQL",
            "POSTGRES",
            "ORACLE",
            "VERTICA",
            "PRESTO",
            "S3",
            "SAMBA",
            "SQLITE",
            "SSH",
            "CLOUDANT",
            "MSSQL",
            "MESOS_FRAMEWORK_ID",
            "JIRA",
            "REDIS",
            "WASB",
            "DATABRICKS",
            "AWS",
            "EMR",
            "SNOWFLAKE",
            "SEGMENT",
            "AZURE_DATA_LAKE",
            "CASSANDRA"
          ]
        },
        "host": {
          "description": "The target host for the service.",
          "type": "string"
        },
        "port": {
          "description": "The port for the service.",
          "type": "integer",
          "format": "int32"
        },
        "login": {
          "description": "The username if the service requires authentication.",
          "type": "string"
        },
        "password": {
          "description": "Input only. Users can provide the password in plain-text. It will be used to set the password in Airflow, but will not be stored for retrieval on Google systems.",
          "type": "string"
        },
        "schema": {
          "description": "The Airflow schema field for the connection.",
          "type": "string"
        },
        "extra": {
          "description": "The Airflow extra field for the connection.",
          "type": "string"
        }
      }
    },
    "Pool": {
      "id": "Pool",
      "description": "Represents an Airflow Pool.",
      "type": "object",
      "properties": {
        "id": {
          "description": "The identifier for the pool.",
          "type": "string"
        },
        "slots": {
          "description": "The number of slots available for the pool.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "ListContextsResponse": {
      "id": "ListContextsResponse",
      "description": "Response for a ListContextsRequest.",
      "type": "object",
      "properties": {
        "contexts": {
          "description": "The list of contexts returned.",
          "type": "array",
          "items": {
            "$ref": "Context"
          }
        },
        "nextPageToken": {
          "description": "The page token used to query for the next page if one exists.",
          "type": "string"
        }
      }
    },
    "WorkflowRun": {
      "id": "WorkflowRun",
      "description": "WorkflowRun represents a single execution of a Workflow.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The resource name of the workflow run, in the form: \"projects\/{projectId}\/locations\/{locationId}\/workflows\/{workflowId}\/runs\/{runId}\"",
          "type": "string"
        },
        "intervalStartTime": {
          "description": "Output only. The start of the time interval corresponding to this workflow run. Only set for SCHEDULED runs. This value is analagous to the Apache Airflow notion of `execution_date`; it refers to the left boundary of the scheduling interval.",
          "type": "string",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "Output only. The start time of the workflow run.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The end time of the workflow run.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The latest known state of the workflow run.",
          "type": "string",
          "enumDescriptions": [
            "The state of the WorkflowRun is unknown.",
            "The WorkflowRun is currently running.",
            "The WorkflowRun succeeded.",
            "The WorkflowRun failed."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "RUNNING",
            "SUCCESS",
            "FAILED"
          ]
        },
        "labels": {
          "description": "Optional. User-defined labels for this workflow run. The initial label entries for a workflow run are inherited from the workflow from which it was instantiated. There can be no more than 64 labels entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ListWorkflowRunsResponse": {
      "id": "ListWorkflowRunsResponse",
      "description": "Response for ListWorkflowRunsRequest.",
      "type": "object",
      "properties": {
        "workflowRuns": {
          "description": "The returned list of WorkflowRuns.",
          "type": "array",
          "items": {
            "$ref": "WorkflowRun"
          }
        },
        "nextPageToken": {
          "description": "The page token used to query for the next page if one exists.",
          "type": "string"
        }
      }
    },
    "Workflow": {
      "id": "Workflow",
      "description": "A Composer workflow resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The resource name of the workflow, in the form: \"projects\/{projectId}\/locations\/{locationId}\/workflows\/{workflowId}\"",
          "type": "string"
        },
        "composerVersion": {
          "description": "Output only. The version of Composer that created this workflow.",
          "type": "string"
        },
        "airflowVersion": {
          "description": "The version of Airflow at which to run the DAG. For example, \"1.10.0\".",
          "type": "string"
        },
        "state": {
          "description": "Output only. The current state of the workflow.",
          "type": "string",
          "enumDescriptions": [
            "The state of the workflow is unknown.",
            "The workflow is being created and cannot execute.",
            "The workflow is available for execution.",
            "The workflow is in an error state and cannot execute."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "CREATING",
            "ACTIVE",
            "ERROR"
          ]
        },
        "airflowDag": {
          "description": "A representation of the workflow as Python source code defining an Airflow DAG.",
          "$ref": "AirflowDag"
        },
        "labels": {
          "description": "Optional. User-defined labels for this workflow. Workflow runs instantiated from this workflow will inherit these labels. The labels map can contain no more than 64 entries. Entries of the labels map are UTF8 strings that comply with the following restrictions: * Keys must conform to regexp: \\p{Ll}\\p{Lo}{0,62} * Values must conform to regexp: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} * Both keys and values are additionally constrained to be <= 128 bytes in size.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createTime": {
          "description": "Output only. The time at which this workflow was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. The time at which this workflow was last updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "context": {
          "description": "The context to use when executing this workflow. The context resides in the same project and location as this workflow. The context must be specified as the full resource name. The format is: projects\/{projectId}\/locations\/{locationId}\/contexts\/{contextId}",
          "type": "string"
        },
        "pythonVersion": {
          "description": "The major version of Python used to run Apache Airflow processes. Can be set to '2' or '3'. If not specified, the default is '2'.",
          "type": "string"
        }
      }
    },
    "AirflowDag": {
      "id": "AirflowDag",
      "description": "A specification of an Apache Airflow DAG.",
      "type": "object",
      "properties": {
        "data": {
          "description": "The contents of a Python module or ZIP archive that specifies an Airflow DAG.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "ListWorkflowsResponse": {
      "id": "ListWorkflowsResponse",
      "description": "Response to ListWorkflowsRequest.",
      "type": "object",
      "properties": {
        "workflows": {
          "description": "The list of workflows returned.",
          "type": "array",
          "items": {
            "$ref": "Workflow"
          }
        },
        "nextPageToken": {
          "description": "The page token used to query for the next page if one exists.",
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "contexts": {
              "methods": {
                "create": {
                  "id": "composerflex.projects.locations.contexts.create",
                  "path": "v1alpha1/{+parent}/contexts",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contexts",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Parent resource of the context to create. The parent must be of the form \"projects\/{projectId}\/locations\/{locationId}\".",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Context"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a new context."
                },
                "delete": {
                  "id": "composerflex.projects.locations.contexts.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contexts/{contextsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the context to delete. Must be in the form \"projects\/{projectId}\/locations\/{locationId}\/contexts\/{contextId}.\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/contexts\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a context. A context cannot be deleted if any workflows are bound to it."
                },
                "get": {
                  "id": "composerflex.projects.locations.contexts.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contexts/{contextsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the context to retrieve. Must be in the form \"projects\/{projectId}\/locations\/{locationId}\/contexts\/{contextId}.\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/contexts\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Context"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a context."
                },
                "list": {
                  "id": "composerflex.projects.locations.contexts.list",
                  "path": "v1alpha1/{+parent}/contexts",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/contexts",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "List contexts in the given parent resource. Parent must be in the form \"projects\/{projectId}\/locations\/{locationId}\".",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of contexts to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token returned from a previous List request.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter will remain internal until its future implementation.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results following syntax at https:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order. Order by will remain internal until its future implementation.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListContextsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists contexts within a project and location."
                }
              }
            },
            "workflows": {
              "methods": {
                "create": {
                  "id": "composerflex.projects.locations.workflows.create",
                  "path": "v1alpha1/{+parent}/workflows",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/workflows",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Parent resource of the workflow to create. The parent must be of the form \"projects\/{projectId}\/locations\/{locationId}\".",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Workflow"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a workflow from an Airflow DAG."
                },
                "delete": {
                  "id": "composerflex.projects.locations.workflows.delete",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the workflow to delete. Must be in the form \"projects\/{projectId}\/locations\/{locationId}\/workflows\/{workflowId}.\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/workflows\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a workflow, forcefully stopping any pending workflow runs and task instances. Long-running operations executing in external systems will continue."
                },
                "get": {
                  "id": "composerflex.projects.locations.workflows.get",
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The resource name of the workflow to retrieve. Must be in the form \"projects\/{projectId}\/locations\/{locationId}\/workflows\/{workflowId}.\"",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/workflows\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Workflow"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Retrieves a workflow."
                },
                "list": {
                  "id": "composerflex.projects.locations.workflows.list",
                  "path": "v1alpha1/{+parent}/workflows",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/workflows",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "List workflows in the given parent resource. Parent must be in the form \"projects\/{projectId}\/locations\/{locationId}\".",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of workflows to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token returned from a previous List request.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Filter will remain internal until its future implementation.",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Specifies the ordering of results following syntax at https:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order. Order by will remain internal until its future implementation.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListWorkflowsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists workflows in a project and location."
                }
              }
              ,
              "resources": {
                "runs": {
                  "methods": {
                    "get": {
                      "id": "composerflex.projects.locations.workflows.runs.get",
                      "path": "v1alpha1/{+name}",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/runs/{runsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "description": "The resource name for the WorkflowRun in the form: \"projects\/{projectId}\/locations\/{locationId}\/workflows\/{workflowId}\/runs\/{runId}\".",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/workflows\/[^\/]+\/runs\/[^\/]+$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "WorkflowRun"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Retrieves a workflow run."
                    },
                    "list": {
                      "id": "composerflex.projects.locations.workflows.runs.list",
                      "path": "v1alpha1/{+parent}/runs",
                      "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/workflows/{workflowsId}/runs",
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "description": "The parent selector for the WorkflowRun. Supports parent in the form: \"projects\/{projectId}\/locations\/{locationId}\/workflows\/{workflowId}\".",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/workflows\/[^\/]+$",
                          "type": "string"
                        },
                        "pageSize": {
                          "description": "The maximum number of workflows to return.",
                          "location": "query",
                          "type": "integer",
                          "format": "int32"
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token returned from a previous List request.",
                          "location": "query",
                          "type": "string"
                        },
                        "filter": {
                          "description": "Filter will remain internal until its future implementation.",
                          "location": "query",
                          "type": "string"
                        },
                        "orderBy": {
                          "description": "Optional. Specifies the ordering of results following syntax at https:\/\/cloud.google.com\/apis\/design\/design_patterns#sorting_order. Order by will remain internal until its future implementation.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "ListWorkflowRunsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Lists runs of a workflow in a project and location. If the workflow is set to the wildcard \"-\", then workflow runs from all workflows in the project and location will be listed."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}