{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "artifactregistry:v1alpha1",
  "name": "artifactregistry",
  "canonicalName": "Artifact Registry",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Artifact Registry API",
  "description": "Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/artifacts/docs/",
  "protocol": "rest",
  "rootUrl": "https://artifactregistry.googleapis.com/",
  "mtlsRootUrl": "https://artifactregistry.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://artifactregistry.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "GoogleDevtoolsArtifactregistryV1alpha1ImportArtifactsRequest": {
      "id": "GoogleDevtoolsArtifactregistryV1alpha1ImportArtifactsRequest",
      "description": "The request to import new artifacts.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location where input content is located.",
          "$ref": "GoogleDevtoolsArtifactregistryV1alpha1GcsSource"
        }
      }
    },
    "GoogleDevtoolsArtifactregistryV1alpha1GcsSource": {
      "id": "GoogleDevtoolsArtifactregistryV1alpha1GcsSource",
      "description": "Google Cloud Storage location for the input content.",
      "type": "object",
      "properties": {
        "uris": {
          "description": "Cloud Storage paths URI (e.g., gs:\/\/my_bucket\/\/my_object).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "useWildcards": {
          "description": "Supports URI wildcards for matching multiple objects from a single URI.",
          "type": "boolean"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "GoogleDevtoolsArtifactregistryV1alpha1ImportArtifactsResponse": {
      "id": "GoogleDevtoolsArtifactregistryV1alpha1ImportArtifactsResponse",
      "description": "The response message from importing artifacts.",
      "type": "object",
      "properties": {
        "packages": {
          "description": "The packages updated.",
          "type": "array",
          "items": {
            "$ref": "GoogleDevtoolsArtifactregistryV1alpha1Package"
          }
        },
        "errors": {
          "description": "Detailed error info for packages that were not imported.",
          "type": "array",
          "items": {
            "$ref": "GoogleDevtoolsArtifactregistryV1alpha1ErrorInfo"
          }
        }
      }
    },
    "GoogleDevtoolsArtifactregistryV1alpha1Package": {
      "id": "GoogleDevtoolsArtifactregistryV1alpha1Package",
      "description": "Packages are named collections of versions.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the package, for example: \"projects\/p1\/locations\/us-central1\/repositories\/repo1\/packages\/pkg1\".",
          "type": "string"
        },
        "displayName": {
          "description": "The display name of the package.",
          "type": "string"
        },
        "createTime": {
          "description": "The time when the package was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "The time when the package was last updated. This includes publishing a new version of the package.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleDevtoolsArtifactregistryV1alpha1ErrorInfo": {
      "id": "GoogleDevtoolsArtifactregistryV1alpha1ErrorInfo",
      "description": "Error information explaining why a package was not imported.",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Google Cloud Storage location requested.",
          "$ref": "GoogleDevtoolsArtifactregistryV1alpha1GcsSource"
        },
        "error": {
          "description": "The detailed error status.",
          "$ref": "Status"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "repositories": {
              "methods": {
                "import": {
                  "id": "artifactregistry.projects.locations.repositories.import",
                  "path": "v1alpha1/{+parent}:import",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:import",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "The name of the parent resource where the artifacts will be imported.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/repositories\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleDevtoolsArtifactregistryV1alpha1ImportArtifactsRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Imports artifacts. The returned Operation will complete once the resources are imported. Package, Version, and File resources are created based on the imported artifacts. Imported artifacts that conflict with existing resources are ignored."
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}