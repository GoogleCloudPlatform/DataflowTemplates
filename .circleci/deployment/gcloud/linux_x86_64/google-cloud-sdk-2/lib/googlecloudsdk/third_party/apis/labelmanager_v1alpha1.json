{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "labelmanager:v1alpha1",
  "name": "labelmanager",
  "canonicalName": "Label Manager",
  "version": "v1alpha1",
  "revision": "0",
  "title": "Label Manager API",
  "description": "The Label Manager API allows users to create and manage definitions and permissions of labels (keys and values) across the Cloud Resource Hierarchy. The API also allows binding these user-created labels to cloud resources to affect policy evaluation.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/resource-manager/",
  "protocol": "rest",
  "rootUrl": "https://labelmanager.googleapis.com/",
  "mtlsRootUrl": "https://labelmanager.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://labelmanager.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListLabelBindingsResponse": {
      "id": "ListLabelBindingsResponse",
      "description": "The ListLabelBindings response.",
      "type": "object",
      "properties": {
        "bindings": {
          "description": "A possibly paginated list of LabelBindings for the specified LabelValue or resource.",
          "type": "array",
          "items": {
            "$ref": "LabelBinding"
          }
        },
        "nextPageToken": {
          "description": "Optional. A pagination token returned from a previous call to `ListLabelBindings` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "LabelBinding": {
      "id": "LabelBinding",
      "description": "A LabelBinding represents a connection between a LabelValue and a cloud resource (currently Project, Folder, or Organization). Once a LabelBinding is created, the LabelValue is applied to all the descendents of the cloud resource.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the LabelBinding. This is a String of the form: 'labelBindings\/{id}' (e.g. 'labelBindings\/bGFiZWx8vY2xvdWz').",
          "type": "string"
        },
        "labelValue": {
          "description": "The LabelValue of the LabelBinding. Must be of the form \"labelValues\/456.",
          "type": "string"
        },
        "resource": {
          "description": "The full resource name of the resource the LabelValue is bound to. E.g. \/\/cloudresourcemanager.googleapis.com\/organizations\/123",
          "type": "string"
        }
      }
    },
    "ListLabelKeysResponse": {
      "id": "ListLabelKeysResponse",
      "description": "The ListLabelKeys response message.",
      "type": "object",
      "properties": {
        "keys": {
          "description": "List of LabelKeys that live under the specified parent in the request.",
          "type": "array",
          "items": {
            "$ref": "LabelKey"
          }
        },
        "nextPageToken": {
          "description": "Optional. A pagination token returned from a previous call to `ListLabelKeys` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "LabelKey": {
      "id": "LabelKey",
      "description": "A LabelKey, used to group a set of LabelValues.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. Resource name for LabelKey. Must be in the format labelKeys\/123.",
          "type": "string"
        },
        "parent": {
          "description": "Immutable. The resource name of the new LabelKey's parent. Must be of the form `organizations\/{org_id}`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. Immutable. User-assigned display name for LabelKey. Display name should be unique for LabelKeys within the same parent resource. The display name must be 1-63 characters, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "type": "string"
        },
        "description": {
          "description": "Optional. User-assigned description of the LabelKey. Must not exceed 256 characters. Read-write.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateLabelKeyRequest for details.",
          "type": "string"
        },
        "state": {
          "description": "Output only. LabelKey lifecycle state.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state. This is only used\/useful for distinguishing unset values.",
            "The normal and active state.",
            "The LabelKey has been marked for deletion by the user (by invoking: DeleteLabelKey) or by the system (Google Cloud Platform). This can generally be reversed by invoking: [google.labelmanager.v1alpha1.LabelManager.UndeleteLabelKey]"
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETE_REQUESTED"
          ]
        },
        "createTime": {
          "description": "Output only. Creation time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Deletion time. This field is cleared on undelete.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "UndeleteLabelKeyRequest": {
      "id": "UndeleteLabelKeyRequest",
      "description": "The request message for undeleting a LabelKey.",
      "type": "object",
      "properties": {
      }
    },
    "ListLabelValuesResponse": {
      "id": "ListLabelValuesResponse",
      "description": "The ListLabelValues response.",
      "type": "object",
      "properties": {
        "values": {
          "description": "A possibly paginated list of LabelValues that are direct descendants of the specified parent LabelKey.",
          "type": "array",
          "items": {
            "$ref": "LabelValue"
          }
        },
        "nextPageToken": {
          "description": "Optional. A pagination token returned from a previous call to `ListLabelValues` that indicates from where listing should continue. This is currently not used, but the server may at any point start supplying a valid token.",
          "type": "string"
        }
      }
    },
    "LabelValue": {
      "id": "LabelValue",
      "description": "A LabelValue is a child of a particular LabelKey. This is used to group cloud resources for the purpose of controlling them via policies.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Immutable. Resource name for LabelValue in the format labelValues\/456.",
          "type": "string"
        },
        "parent": {
          "description": "Immutable. The resource name of the new LabelValue's parent LabelKey. Must be of the form `labelKeys\/{label_key_id}`.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. Immutable. User-assigned display name for LabelValue. Display name should be unique for LabelValues within the same parent LabelKey. The display name must be 63 characters or less, beginning and ending with an alphanumeric character ([a-z0-9A-Z]) with dashes (-), underscores (_), dots (.), and alphanumerics between.",
          "type": "string"
        },
        "description": {
          "description": "Optional. User-assigned description of the LabelValue. Must not exceed 256 characters. Read-write.",
          "type": "string"
        },
        "etag": {
          "description": "Optional. Entity tag which users can pass to prevent race conditions. This field is always set in server responses. See UpdateLabelValueRequest for details.",
          "type": "string"
        },
        "state": {
          "description": "Output only. LabelValue lifecycle state.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Unspecified state. This is only used\/useful for distinguishing unset values.",
            "The normal and active state.",
            "The LabelValue has been marked for deletion by the user (by invoking: DeleteLabelValue) or by the system (Google Cloud Platform). This can generally be reversed by invoking: [google.labelmanager.v1alpha1.LabelManager.UndeleteLabelValue]"
          ],
          "enum": [
            "LIFECYCLE_STATE_UNSPECIFIED",
            "ACTIVE",
            "DELETE_REQUESTED"
          ]
        },
        "createTime": {
          "description": "Output only. Creation time.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Deletion time. This value is cleared on undelete.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "UndeleteLabelValueRequest": {
      "id": "UndeleteLabelValueRequest",
      "description": "The request message for undeleting a LabelValue.",
      "type": "object",
      "properties": {
      }
    }
  },
  "resources": {
    "operations": {
      "methods": {
        "get": {
          "id": "labelmanager.operations.get",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/operations/{operationsId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "The name of the operation resource.",
              "location": "path",
              "required": true,
              "pattern": "^operations\/.*$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
        }
      }
    },
    "labelKeys": {
      "methods": {
        "setIamPolicy": {
          "id": "labelmanager.labelKeys.setIamPolicy",
          "path": "v1alpha1/{+resource}:setIamPolicy",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:setIamPolicy",
          "httpMethod": "POST",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "SetIamPolicyRequest"
          },
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
        },
        "getIamPolicy": {
          "id": "labelmanager.labelKeys.getIamPolicy",
          "path": "v1alpha1/{+resource}:getIamPolicy",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:getIamPolicy",
          "httpMethod": "GET",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            },
            "options.requestedPolicyVersion": {
              "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
              "location": "query",
              "type": "integer",
              "format": "int32"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "response": {
            "$ref": "Policy"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
        },
        "testIamPermissions": {
          "id": "labelmanager.labelKeys.testIamPermissions",
          "path": "v1alpha1/{+resource}:testIamPermissions",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:testIamPermissions",
          "httpMethod": "POST",
          "parameters": {
            "resource": {
              "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "resource"
          ],
          "request": {
            "$ref": "TestIamPermissionsRequest"
          },
          "response": {
            "$ref": "TestIamPermissionsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
        },
        "list": {
          "id": "labelmanager.labelKeys.list",
          "path": "v1alpha1/labelKeys",
          "flatPath": "v1alpha1/labelKeys",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "The resource name of the new LabelKey's parent. Must be of the form `folders\/{folder_id}` or `organizations\/{org_id}`.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of LabelKeys to return in the response. This is currently not used by the server and will return the full page even if a size is specified currently.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A pagination token returned from a previous call to `ListLabelKey` that indicates where this listing should continue from. This is currently not used by the server.",
              "location": "query",
              "type": "string"
            },
            "showDeleted": {
              "description": "Optional. Controls whether LabelKeys in the DELETE_REQUESTED state should be returned. Defaults to false.",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListLabelKeysResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists all LabelKeys for a parent resource."
        },
        "get": {
          "id": "labelmanager.labelKeys.get",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey to be fetched in the format labelKeys\/123.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "LabelKey"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves a LabelKey. This method will return PERMISSION_DENIED if the key does not exist or the user does not have permission to view it."
        },
        "create": {
          "id": "labelmanager.labelKeys.create",
          "path": "v1alpha1/labelKeys",
          "flatPath": "v1alpha1/labelKeys",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "LabelKey"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a new LabelKey. If another request with the same parameters is sent while the original request is in process, the second request will receive an error. A maximum of 300 LabelKeys (with any lifecycle state) can exist under a parent at any given time."
        },
        "patch": {
          "id": "labelmanager.labelKeys.patch",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "Immutable. Resource name for LabelKey. Must be in the format labelKeys\/123.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            },
            "updateMask": {
              "description": "Fields to be updated",
              "location": "query",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "LabelKey"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates the attributes of the LabelKey resource."
        },
        "delete": {
          "id": "labelmanager.labelKeys.delete",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey to be deleted in the format labelKeys\/123. The LabelKey cannot be a parent of any LabelValues in the active state to be deleted successfully.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Requests deletion of a LabelKey. The LabelKey is moved into the DELETE_REQUESTED state immediately, and is deleted approximately 30 days later. The LabelKey cannot be deleted if it has any child LabelValues in the ACTIVE state."
        },
        "undelete": {
          "id": "labelmanager.labelKeys.undelete",
          "path": "v1alpha1/{+name}:undelete",
          "flatPath": "v1alpha1/labelKeys/{labelKeysId}:undelete",
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "Resource name for LabelKey to be un-deleted in the format labelKeys\/123. The parent of this LabelKey must be in the active state.",
              "location": "path",
              "required": true,
              "pattern": "^labelKeys\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "UndeleteLabelKeyRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Cancels the deletion request for a LabelKey. This method may only be called on a LabelKey in the DELETE_REQUESTED state. In order to succeed, the LabelKey's parent must be in the active state."
        }
      }
    },
    "labelBindings": {
      "methods": {
        "list": {
          "id": "labelmanager.labelBindings.list",
          "path": "v1alpha1/labelBindings",
          "flatPath": "v1alpha1/labelBindings",
          "httpMethod": "GET",
          "parameters": {
            "filter": {
              "description": "Required. An expression for filtering the results of the request. The user must express one of the following filtering clauses: + `labelValue` + `resource` The two cases of using filters are as follows: | Filter | |----------------------------------------------------------------| | 1) labelValue:labelValues\/123 | | 2) resource:\/\/cloudresourcemanager.googleapis.com\/projects\/123 | |________________________________________________________________| In case 1), all LabelBindings bound to the LabelValue with ID '123' will be retrieved. In case 2), all LabelBindings bound to the Project with ID '123' will be retrieved.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of LabelBindings to return in the response. This is currently not used by the server and will return the full page even if a size is specified.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A pagination token returned from a previous call to `ListLabelBindings` that indicates where this listing should continue from. This is currently not used by the server.",
              "location": "query",
              "type": "string"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListLabelBindingsResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists the LabelBindings for the given LabelValue or cloud resource (currently Project, Folder, or Organization) determined by the given filter. List LabelBindings for LabelValue with id 123 will map to: \/v1alpha1\/labelBindings?filter=labelValue:labelValues\/123 List LabelBindings for Project resource with id 456 will map to: \/v1alpha1\/labelBindings?filter=resource:\/\/cloudresourcemanager.googleapis.com\/projects\/456 because the full resource name is required. For additional details see: https:\/\/cloud.google.com\/apis\/design\/resource_names#full_resource_name."
        },
        "create": {
          "id": "labelmanager.labelBindings.create",
          "path": "v1alpha1/labelBindings",
          "flatPath": "v1alpha1/labelBindings",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "LabelBinding"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a LabelBinding between a LabelValue and a cloud resource (currently Project, Folder, or Organization)."
        },
        "delete": {
          "id": "labelmanager.labelBindings.delete",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelBindings/{labelBindingsId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Required. The name of the LabelBinding. This is a String of the form: 'labelBindings\/{id}' (e.g. 'labelBindings\/bGFiZWx8vY2xvdWz').",
              "location": "path",
              "required": true,
              "pattern": "^labelBindings\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Deletes a LabelBinding."
        }
      }
    },
    "labelValues": {
      "methods": {
        "list": {
          "id": "labelmanager.labelValues.list",
          "path": "v1alpha1/labelValues",
          "flatPath": "v1alpha1/labelValues",
          "httpMethod": "GET",
          "parameters": {
            "parent": {
              "description": "Resource name for LabelKey, parent of the LabelValues to be listed, in the format labelKeys\/123.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "description": "Optional. The maximum number of LabelValues to return in the response. This is currently not used by the server and will return the full page even if a size is specified currently.",
              "location": "query",
              "type": "integer",
              "format": "int32"
            },
            "pageToken": {
              "description": "Optional. A pagination token returned from a previous call to `ListLabelValues` that indicates where this listing should continue from. This is currently not used by the server.",
              "location": "query",
              "type": "string"
            },
            "showDeleted": {
              "description": "Optional. Controls whether LabelValues in the DELETE_REQUESTED state should be returned. Defaults to false.",
              "location": "query",
              "type": "boolean"
            }
          },
          "parameterOrder": [
          ],
          "response": {
            "$ref": "ListLabelValuesResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Lists all LabelValues for a specific LabelKey."
        },
        "get": {
          "id": "labelmanager.labelValues.get",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue to be fetched in the format labelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "LabelValue"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Retrieves LabelValue. This method will return PERMISSION_DENIED if the LabelValue does not exist or the user does not have permission to view it."
        },
        "create": {
          "id": "labelmanager.labelValues.create",
          "path": "v1alpha1/labelValues",
          "flatPath": "v1alpha1/labelValues",
          "httpMethod": "POST",
          "parameters": {
          },
          "parameterOrder": [
          ],
          "request": {
            "$ref": "LabelValue"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Creates a LabelValue as a child of the specified LabelKey. If a another request with the same parameters is sent while the original request is in process the second request will receive an error. A maximum of 300 LabelValues (with any lifecycle state) can exist under a LabelKey at any given time."
        },
        "patch": {
          "id": "labelmanager.labelValues.patch",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}",
          "httpMethod": "PATCH",
          "parameters": {
            "name": {
              "description": "Immutable. Resource name for LabelValue in the format labelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            },
            "updateMask": {
              "description": "Fields to be updated.",
              "location": "query",
              "type": "string",
              "format": "google-fieldmask"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "LabelValue"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Updates the attributes of the LabelValue resource."
        },
        "delete": {
          "id": "labelmanager.labelValues.delete",
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}",
          "httpMethod": "DELETE",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue to be deleted in the format labelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Requests deletion of a LabelValue. The LabelValue is moved into the DELETE_REQUESTED state immediately, and is deleted approximately 30 days later. The LabelValue cannot have any bindings when it is deleted."
        },
        "undelete": {
          "id": "labelmanager.labelValues.undelete",
          "path": "v1alpha1/{+name}:undelete",
          "flatPath": "v1alpha1/labelValues/{labelValuesId}:undelete",
          "httpMethod": "POST",
          "parameters": {
            "name": {
              "description": "Resource name for LabelValue to be un-deleted in the format labelValues\/456.",
              "location": "path",
              "required": true,
              "pattern": "^labelValues\/[^\/]+$",
              "type": "string"
            }
          },
          "parameterOrder": [
            "name"
          ],
          "request": {
            "$ref": "UndeleteLabelValueRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ],
          "description": "Cancels the deletion request for a LabelValue. This method may only be called on a LabelValue in the DELETE_REQUESTED state. In order to succeed, the LabelValue's parent must be in the ACTIVE state."
        }
      }
    }
  },
  "basePath": ""
}