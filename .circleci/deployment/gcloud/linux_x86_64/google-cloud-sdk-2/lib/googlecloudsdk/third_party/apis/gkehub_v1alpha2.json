{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "gkehub:v1alpha2",
  "name": "gkehub",
  "canonicalName": "GKE Hub",
  "version": "v1alpha2",
  "revision": "0",
  "title": "GKE Hub",
  "description": "",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster",
  "protocol": "rest",
  "rootUrl": "https://gkehub.googleapis.com/",
  "mtlsRootUrl": "https://gkehub.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://gkehub.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ListOperationsResponse": {
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Operation": {
      "id": "Operation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations\/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`\/`Create`\/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https:\/\/github.com\/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https:\/\/cloud.google.com\/apis\/design\/errors).",
      "type": "object",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          }
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "CancelOperationRequest": {
      "id": "CancelOperationRequest",
      "description": "The request message for Operations.CancelOperation.",
      "type": "object",
      "properties": {
      }
    },
    "ListMembershipsResponse": {
      "id": "ListMembershipsResponse",
      "description": "Response message for the `GkeHub.ListMemberships` method.",
      "type": "object",
      "properties": {
        "resources": {
          "description": "The list of Memberships contained within the parent.",
          "type": "array",
          "items": {
            "$ref": "Membership"
          }
        },
        "nextPageToken": {
          "description": "A token to request the next page of resources from the `ListMemberships` method. The value of an empty string means that there are no more resources to return.",
          "type": "string"
        },
        "unreachable": {
          "description": "List of locations that could not be reached while fetching this list.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Membership": {
      "id": "Membership",
      "description": "Membership contains information about a member cluster.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. The unique name of this domain resource in the format: `projects\/[project_number]\/locations\/global\/memberships\/[membership_id]`. `membership_id` can only be set at creation time using the `membership_id` field in the creation request. `membership_id` must be a valid RFC 1123 compliant DNS label. In particular, it must be: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character I.e. `membership_id` must match the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?` with at most 63 characters.",
          "readOnly": true,
          "type": "string"
        },
        "labels": {
          "description": "Optional. GCP labels for this membership.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "description": {
          "description": "Output only. Description of this membership, limited to 63 characters. It will match the regex: `a-zA-Z0-9*` This field is present for legacy purposes.",
          "readOnly": true,
          "type": "string"
        },
        "endpoint": {
          "description": "Optional. Endpoint information to reach this member.",
          "$ref": "MembershipEndpoint"
        },
        "state": {
          "description": "Output only. State of the Membership resource.",
          "readOnly": true,
          "$ref": "MembershipState"
        },
        "createTime": {
          "description": "Output only. Timestamp for when the Membership was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Timestamp for when the Membership was last updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "deleteTime": {
          "description": "Output only. Timestamp for when the Membership was deleted.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "externalId": {
          "description": "Optional. An externally-generated and managed ID for this Membership. This ID may still be modified after creation but it is not recommended to do so. The ID must match the regex: `a-zA-Z0-9*` If this Membership represents a Kubernetes cluster, this value should be set to the UUID of the kube-system namespace object. For GKE clusters, `external_id` is updated by the Hub API server since the id can be determined and as such, the field should be treated as output-only (updates will be silently discarded).",
          "type": "string"
        },
        "authority": {
          "description": "Optional. How to identify workloads from this Membership. See the documentation on workload identity for more details: https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/workload-identity",
          "$ref": "Authority"
        },
        "lastConnectionTime": {
          "description": "Output only. For clusters using Connect, the timestamp of the most recent connection established with Google Cloud. This time is updated every several minutes, not continuously. For clusters that do not use GKE Connect, or that have never connected successfully, this field will be unset.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "uniqueId": {
          "description": "Output only. Google-generated UUID for this resource. This is unique across all Membership resources. If a Membership resource is deleted and another resource with the same name is created, it gets a different unique_id.",
          "readOnly": true,
          "type": "string"
        },
        "infrastructureType": {
          "description": "Optional. Specifies the infrastructure type that the API server represented by membership is running on.",
          "type": "string",
          "enumDescriptions": [
            "Default value for backward compatibility. Some Hub functionality may require users to set this value if left unspecified.",
            "OnPrem specifies Memberships running on infrastructure that is owned or operated by customers on private infrastructure. GKE Distributions like GKE-OnPrem and GKE-OnBareMetal will set this value at Membership creation time by default.",
            "This value indicates the membership is running on public cloud infrastructure."
          ],
          "enum": [
            "INFRASTRUCTURE_TYPE_UNSPECIFIED",
            "ON_PREM",
            "MULTI_CLOUD"
          ]
        }
      }
    },
    "MembershipEndpoint": {
      "id": "MembershipEndpoint",
      "description": "MembershipEndpoint contains the information to reach a member.",
      "type": "object",
      "properties": {
        "gkeCluster": {
          "description": "Optional. If this Membership is a Kubernetes API server hosted on GKE, this field will be populated and contain GKE-specific information.",
          "$ref": "GkeCluster"
        },
        "kubernetesMetadata": {
          "description": "Output only. For Memberships that point to Kubernetes Endpoints, this field provides useful metadata.",
          "readOnly": true,
          "$ref": "KubernetesMetadata"
        },
        "kubernetesResource": {
          "description": "Optional. A correctly registered cluster should have the Kubernetes resources applied to the clusters and settle at steady states. These resources are needed in order to: * Ensure that the cluster is exclusively registered to one and only one Hub Membership. * Propagate Workload Pool Information available in the Membership Authority field. * Ensure proper initial configuration of default Hub Features.",
          "$ref": "KubernetesResource"
        }
      }
    },
    "GkeCluster": {
      "id": "GkeCluster",
      "description": "GkeCluster represents a k8s cluster on GKE.",
      "type": "object",
      "properties": {
        "resourceLink": {
          "description": "Immutable. Self-link of the GCP resource for the GKE cluster. For example: \/\/container.googleapis.com\/projects\/my-project\/locations\/us-west1-a\/clusters\/my-cluster Using \"zones\" instead of \"locations\" is also valid. It can be at the most 1000 characters in length.",
          "type": "string"
        }
      }
    },
    "KubernetesMetadata": {
      "id": "KubernetesMetadata",
      "description": "KubernetesMetadata provides informational metadata for Memberships that are created from Kubernetes Endpoints (currently, these are equivalent to Kubernetes clusters).",
      "type": "object",
      "properties": {
        "kubernetesApiServerVersion": {
          "description": "Output only. Kubernetes API server version string as reported by '\/version'.",
          "readOnly": true,
          "type": "string"
        },
        "nodeProviderId": {
          "description": "Output only. Node providerID as reported by the first node in the list of nodes on the Kubernetes endpoint. It should be noted that some Kubernetes platforms (like GKE-on-GCP) support zero-node clusters. For these platforms, the node_count will be zero and the node_provider_id will be empty.",
          "readOnly": true,
          "type": "string"
        },
        "nodeCount": {
          "description": "Output only. Node count as reported by Kubernetes nodes resources.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "vcpuCount": {
          "description": "Output only. vCPU count as reported by Kubernetes nodes resources.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "memoryMb": {
          "description": "Output only. The total memory capacity as reported by the sum of all Kubernetes nodes resources, defined in MB.",
          "readOnly": true,
          "type": "integer",
          "format": "int32"
        },
        "updateTime": {
          "description": "Output only. The time at which these details were last updated. This update_time is different from the Membership-level update_time since EndpointDetails are updated internally for API consumers.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "KubernetesResource": {
      "id": "KubernetesResource",
      "description": "KubernetesResource contains the YAML manifests and configs for Kubernetes resources of the Membership in the cluster. Upon CreateMembership: - The caller should provide membership_cr_manifest if a Membership CR exists in the cluster. - The caller should provide connect_version if they wish to also install the Connect agent. - The caller should then apply resources from the successful GetMembership request. Upon UpdateMembership: - The caller should provide membership_cr_manifest if a Membership CR exists in the cluster. - The caller should re-apply the resources from the returned Membership.",
      "type": "object",
      "properties": {
        "membershipCrManifest": {
          "description": "Input only. The YAML representation of the Membership CR if already exists in the cluster. Leave empty if no Membership CR exists. The CR manifest will be used to validate that the cluster has not been registered with another Membership. For GKE clusters, the input from the caller will be ignored as Hub API server will directly fetch the Membership CR from the cluster.",
          "type": "string"
        },
        "membershipResources": {
          "description": "Output only. The additional Kubernetes resources that need to be applied to the cluster after the membership creation and every update. This field is only populated in the Membership returned after the long-running operation of Create\/UpdateMembership finished, but not in standalone Get\/ListMembership requests. To get the resource manifest after the initial registration, the caller could make an UpdateMembership call with an empty field mask.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ResourceManifest"
          }
        },
        "connectResources": {
          "description": "Output only. The Kubernetes resources for installing GKE Connect agent. This field is only populated in the Membership returned after the long-running operation of Create\/UpdateMembership finished, but not in standalone Get\/ListMembership requests. To get the resource manifest after the initial registration, the caller could make an UpdateMembership call with an empty field mask.",
          "readOnly": true,
          "type": "array",
          "items": {
            "$ref": "ResourceManifest"
          }
        },
        "resourceOptions": {
          "description": "Optional. The options to generate Kubernetes resources other than the default value supplied by the Hub API. Empty or unset fields will use the default value.",
          "$ref": "ResourceOptions"
        }
      }
    },
    "ResourceManifest": {
      "id": "ResourceManifest",
      "description": "ResourceManifest represents a Kubernetes resource to be applied to the cluster.",
      "type": "object",
      "properties": {
        "manifest": {
          "description": "YAML manifest of the resource.",
          "type": "string"
        },
        "clusterScoped": {
          "description": "Specifies whether the resource provided in the manifest is cluster_scoped. If set to false, the assumption is that it is namespace scoped. This field is used for default REST mapper when applying the resource to a cluster.",
          "type": "boolean"
        }
      }
    },
    "ResourceOptions": {
      "id": "ResourceOptions",
      "description": "ResourceOptions represents the supported options for generating the Kubernetes resources.",
      "type": "object",
      "properties": {
        "connectVersion": {
          "description": "Optional. The connect version to generate for connect_resources. If unset, default to the latest GKE Connect version. If set to a specific Connect version, the Connect resources of the version will be generated. If the version does not exist or is already out of support window, an INVALID_ARGUMENT error will be returned.",
          "type": "string"
        },
        "v1beta1Crd": {
          "description": "Optional. Use apiextensions\/v1beta1 instead of apiextensions\/v1 for CustomResourceDefinition resource. This option should be set for clusters with Kubernetes apiserver version <1.16.",
          "type": "boolean"
        }
      }
    },
    "MembershipState": {
      "id": "MembershipState",
      "description": "State of the Membership resource.",
      "type": "object",
      "properties": {
        "code": {
          "description": "Output only. Code indicating the state of the Membership resource.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "Not set.",
            "CREATING indicates the cluster is being registered.",
            "READY indicates the cluster is registered.",
            "DELETING indicates that the cluster is being unregistered.",
            "UPDATING indicates the Membership is being updated.",
            "SERVICE_UPDATING indicates the Membership is being updated by the Hub Service."
          ],
          "enum": [
            "CODE_UNSPECIFIED",
            "CREATING",
            "READY",
            "DELETING",
            "UPDATING",
            "SERVICE_UPDATING"
          ]
        }
      }
    },
    "Authority": {
      "id": "Authority",
      "description": "Authority encodes how Google will recognize identities from this Membership. A workload with a token from this issuer can call the IAM credentials API for the provided identity_namespace; the workload will receive a Google OAuth token that it can use for further API calls. See the workload identity documentation for more details: https:\/\/cloud.google.com\/kubernetes-engine\/docs\/how-to\/workload-identity",
      "type": "object",
      "properties": {
        "issuer": {
          "description": "Optional. A Json Web Token (JWT) issuer URI. If set, then Google will allow valid OIDC tokens from this issuer to authenticate within the below workload identity pool. OIDC discovery will be performed on this URI to validate tokens from the issuer, unless `oidc_jwks` is set. This can be updated from a non-empty to empty value and vice-versa. But cannot be changed from one non-empty value to another. Setting to empty will disable Workload Identity. issuer should be a valid URL of length < 2000 that can be parsed, and must start with https:\/\/.",
          "type": "string"
        },
        "oidcJwks": {
          "description": "Optional. OIDC verification keys for this Membership in JWKS format (RFC 7517). It contains a list of OIDC verification keys that can be used to verify OIDC JWT tokens. When this field is set, OIDC discovery will not be performed on the issuer and instead OIDC tokens will be validated using this field.",
          "type": "string",
          "format": "byte"
        },
        "identityProvider": {
          "description": "Output only. An identity provider that reflects this issuer in the workload identity pool.",
          "readOnly": true,
          "type": "string"
        },
        "workloadIdentityPool": {
          "description": "Output only. The name of the workload identity pool in which the above issuer will be recognized. There is a single Workload Identity Pool per Hub that is shared between all Memberships that belong to this Hub. For a Hub hosted in {PROJECT_ID}, the workload pool format is {PROJECT_ID}.hub.id.goog, although this is subject to change in newer versions of this API.",
          "readOnly": true,
          "type": "string"
        }
      }
    },
    "GenerateConnectManifestResponse": {
      "id": "GenerateConnectManifestResponse",
      "description": "Response message for `GkeHubService.GenerateConnectManifest` method.",
      "type": "object",
      "properties": {
        "manifest": {
          "description": "The ordered list of Kubernetes resources that need to be applied to the cluster for GKE Connect agent installation\/upgrade.",
          "type": "array",
          "items": {
            "$ref": "ConnectAgentResource"
          }
        }
      }
    },
    "ConnectAgentResource": {
      "id": "ConnectAgentResource",
      "description": "ConnectAgentResource represents a Kubernetes resource manifest for connect agnet deployment.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Kubernetes type of the resource.",
          "$ref": "TypeMeta"
        },
        "manifest": {
          "description": "YAML manifest of the resource.",
          "type": "string"
        }
      }
    },
    "TypeMeta": {
      "id": "TypeMeta",
      "description": "TypeMeta is the type information needed for content unmarshalling of the Kubernetes resources in the manifest.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "Kind of the resource (e.g. Deployment).",
          "type": "string"
        },
        "apiVersion": {
          "description": "APIVersion of the resource (e.g. v1).",
          "type": "string"
        }
      }
    },
    "InitializeHubRequest": {
      "id": "InitializeHubRequest",
      "description": "Request message for the InitializeHub method.",
      "type": "object",
      "properties": {
      }
    },
    "InitializeHubResponse": {
      "id": "InitializeHubResponse",
      "description": "Response message for the InitializeHub method.",
      "type": "object",
      "properties": {
        "serviceIdentity": {
          "description": "Name of the default service identity. This is of the format `service-@gcp-sa-gkehub.iam.gserviceaccount.com`. This service account has `roles\/gkehub.serviceAgent` role in this project.",
          "type": "string"
        },
        "workloadIdentityPool": {
          "description": "The Workload Identity Pool used for all clusters registered with Hub. This is used to enable Workload Identity for workloads running in these clusters. This is of the format `.hub.id.goog`",
          "type": "string"
        }
      }
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "description": "The response message for Locations.ListLocations.",
      "type": "object",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "type": "array",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      }
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects\/example-project\/locations\/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com\/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        }
      }
    },
    "SetIamPolicyRequest": {
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "type": "object",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string",
          "format": "google-fieldmask"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles\/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles\/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles\/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles\/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/docs\/).",
      "type": "object",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Binding": {
      "id": "Binding",
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles\/viewer`, `roles\/editor`, or `roles\/owner`.",
          "type": "string"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
          "$ref": "Expr"
        }
      }
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https:\/\/github.com\/google\/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "type": "object",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "location": {
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.",
          "type": "string"
        }
      }
    },
    "AuditConfig": {
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "properties": {
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        },
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "type": "object",
      "properties": {
        "logType": {
          "description": "The log type that this config enables.",
          "type": "string",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https:\/\/cloud.google.com\/iam\/docs\/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OperationMetadata": {
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation.",
      "type": "object",
      "properties": {
        "createTime": {
          "description": "Output only. The time the operation was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "target": {
          "description": "Output only. Server-defined resource path for the target of the operation.",
          "readOnly": true,
          "type": "string"
        },
        "verb": {
          "description": "Output only. Name of the verb executed by the operation.",
          "readOnly": true,
          "type": "string"
        },
        "statusDetail": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "readOnly": true,
          "type": "string"
        },
        "cancelRequested": {
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
          "readOnly": true,
          "type": "boolean"
        },
        "apiVersion": {
          "description": "Output only. API version used to start the operation.",
          "readOnly": true,
          "type": "string"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "list": {
              "id": "gkehub.projects.locations.list",
              "path": "v1alpha2/{+name}/locations",
              "flatPath": "v1alpha2/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists information about the supported locations for this service."
            },
            "get": {
              "id": "gkehub.projects.locations.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Location"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Gets information about a location."
            }
          }
          ,
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "id": "gkehub.projects.locations.operations.list",
                  "path": "v1alpha2/{+name}/operations",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users\/*\/operations`. To override the binding, API services can add a binding such as `\"\/v1\/{name=users\/*}\/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
                },
                "get": {
                  "id": "gkehub.projects.locations.operations.get",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."
                },
                "delete": {
                  "id": "gkehub.projects.locations.operations.delete",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be deleted.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."
                },
                "cancel": {
                  "id": "gkehub.projects.locations.operations.cancel",
                  "path": "v1alpha2/{+name}:cancel",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "httpMethod": "POST",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/operations\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
                }
              }
            },
            "memberships": {
              "methods": {
                "list": {
                  "id": "gkehub.projects.locations.memberships.list",
                  "path": "v1alpha2/{+parent}/memberships",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent in whose context the memberships are listed. The parent value is in the format: `projects\/[project_number]\/locations\/global`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. When requesting a 'page' of resources, `page_size` specifies number of resources to return. If unspecified or set to 0, all resources will be returned.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. Token returned by previous call to `ListMemberships` which specifies the position in the list from where to continue listing the resources.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "Optional. Lists the Memberships that match the filter expression. A filter expression filters the resources listed in the response. The expression must be of the form `{field} {operator} {value}` where operators: `<`, `>`, `<=`,`>=`, `!=`, `=`, `:` are supported (colon `:` represents a HAS operator which is roughly synonymous with equality). `{field}` can refer to a proto or JSON field, or a synthetic field. Field names can be camelCase or snake_case. Examples: - Filter by name: name = \"projects\/12345\/locations\/global\/membership\/bar - Filter by labels: - Resources that have a key called `foo` labels.foo:* - Resources that have a key called `foo` whose value is `bar` labels.foo = bar - Filter by state: - Members in CREATING state. state = CREATING",
                      "location": "query",
                      "type": "string"
                    },
                    "orderBy": {
                      "description": "Optional. Field to use to sort the list.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListMembershipsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists Memberships in a given project and location."
                },
                "get": {
                  "id": "gkehub.projects.locations.memberships.get",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The Membership resource name in the format: `projects\/[project_number]\/locations\/global\/memberships\/[membership_id]`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Membership"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets details of a single Membership."
                },
                "create": {
                  "id": "gkehub.projects.locations.memberships.create",
                  "path": "v1alpha2/{+parent}/memberships",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent in whose context the membership is created. The parent value is in the format: `projects\/[project_number]\/locations\/global`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+$",
                      "type": "string"
                    },
                    "membershipId": {
                      "description": "Required. Client chosen ID for the membership. The ID must be a valid RFC 1123 compliant DNS label. In particular, the ID must be: 1. At most 63 characters in length 2. It must consist of lower case alphanumeric characters or `-` 3. It must start and end with an alphanumeric character I.e. ID must match the regex: `[a-z0-9]([-a-z0-9]*[a-z0-9])?` with at most 63 characters.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "Membership"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Adds a new Membership."
                },
                "delete": {
                  "id": "gkehub.projects.locations.memberships.delete",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "httpMethod": "DELETE",
                  "parameters": {
                    "name": {
                      "description": "Required. The membership resource name in the format: `projects\/[project_number]\/locations\/global\/memberships\/[membership_id]`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Removes a single Membership."
                },
                "patch": {
                  "id": "gkehub.projects.locations.memberships.patch",
                  "path": "v1alpha2/{+name}",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}",
                  "httpMethod": "PATCH",
                  "parameters": {
                    "name": {
                      "description": "Required. The membership resource name in the format: `projects\/[project_number]\/locations\/global\/memberships\/[membership_id]`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    },
                    "updateMask": {
                      "description": "Required. Mask of fields to update. At least one field path must be specified in this mask.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "Membership"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates an existing Membership."
                },
                "generateConnectManifest": {
                  "id": "gkehub.projects.locations.memberships.generateConnectManifest",
                  "path": "v1alpha2/{+name}:generateConnectManifest",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:generateConnectManifest",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "description": "Required. The membership resource the connect agent is associated with. `projects\/[project_number]\/locations\/global\/memberships\/[membership_id]`.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    },
                    "namespace": {
                      "description": "Optional. Namespace for GKE Connect agent resources. If empty, uses 'gke-connect'.",
                      "location": "query",
                      "type": "string"
                    },
                    "proxy": {
                      "description": "Optional. URI of a proxy if connectivity from the agent to gkeconnect.googleapis.com requires the use of a proxy. Format must be in the form http(s):\/\/{proxy_address}, depending on the HTTP\/HTTPS protocol supported by the proxy. This will direct the connect agent's outbound traffic through a HTTP(S) proxy.",
                      "location": "query",
                      "type": "string",
                      "format": "byte"
                    },
                    "version": {
                      "description": "Optional. The version to use for connect agent. If empty, the current default version will be used.",
                      "location": "query",
                      "type": "string"
                    },
                    "isUpgrade": {
                      "description": "Optional. If true, generate the resources for upgrade only. Some resources (e.g. secrets) generated for installation will be excluded.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "registry": {
                      "description": "Optional. The registry to fetch connect agent image; default to gcr.io\/gkeconnect.",
                      "location": "query",
                      "type": "string"
                    },
                    "imagePullSecretContent": {
                      "description": "Optional. The image pull secret content for the registry, if not public.",
                      "location": "query",
                      "type": "string",
                      "format": "byte"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GenerateConnectManifestResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Generate the manifest for deployment of GKE connect agent."
                },
                "setIamPolicy": {
                  "id": "gkehub.projects.locations.memberships.setIamPolicy",
                  "path": "v1alpha2/{+resource}:setIamPolicy",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:setIamPolicy",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."
                },
                "getIamPolicy": {
                  "id": "gkehub.projects.locations.memberships.getIamPolicy",
                  "path": "v1alpha2/{+resource}:getIamPolicy",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:getIamPolicy",
                  "httpMethod": "GET",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https:\/\/cloud.google.com\/iam\/help\/conditions\/resource-policies).",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."
                },
                "testIamPermissions": {
                  "id": "gkehub.projects.locations.memberships.testIamPermissions",
                  "path": "v1alpha2/{+resource}:testIamPermissions",
                  "flatPath": "v1alpha2/projects/{projectsId}/locations/{locationsId}/memberships/{membershipsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/locations\/[^\/]+\/memberships\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."
                }
              }
            },
            "global": {
              "resources": {
                "memberships": {
                  "methods": {
                    "initializeHub": {
                      "id": "gkehub.projects.locations.global.memberships.initializeHub",
                      "path": "v1alpha2/{+project}:initializeHub",
                      "flatPath": "v1alpha2/projects/{projectsId}/locations/global/memberships:initializeHub",
                      "httpMethod": "POST",
                      "parameters": {
                        "project": {
                          "description": "Required. The project in whose context this initialize is requested. The value is in the format: `projects\/[project_number]\/locations\/global\/memberships`.",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects\/[^\/]+\/locations\/global\/memberships$",
                          "type": "string"
                        }
                      },
                      "parameterOrder": [
                        "project"
                      ],
                      "request": {
                        "$ref": "InitializeHubRequest"
                      },
                      "response": {
                        "$ref": "InitializeHubResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Initializes the project to start creating Hub Memberships and Features. Using this API is optional and customers can instead directly create the Membership or Feature. Using this API is required only if IAM permissions need to be added for the default Hub Service Account or Hub Workload Identity Pool before registering the first Membership. Calling this API will create the default Hub Service Account and Hub Workload Identity Pool."
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "basePath": ""
}