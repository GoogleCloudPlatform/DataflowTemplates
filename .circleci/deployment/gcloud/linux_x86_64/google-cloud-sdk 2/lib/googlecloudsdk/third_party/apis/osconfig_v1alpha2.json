{
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "id": "osconfig:v1alpha2",
  "name": "osconfig",
  "canonicalName": "OS Config",
  "version": "v1alpha2",
  "revision": "0",
  "title": "OS Config API",
  "description": "OS management tools that can be used for patch management, patch compliance, and configuration management on VM instances.",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
   },
  "documentationLink": "https://cloud.google.com/compute/docs/manage-os",
  "protocol": "rest",
  "rootUrl": "https://osconfig.googleapis.com/",
  "mtlsRootUrl": "https://osconfig.mtls.googleapis.com/",
  "servicePath": "",
  "baseUrl": "https://osconfig.googleapis.com/",
  "batchPath": "batch",
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "description": "Data format for response.",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "callback": {
      "type": "string",
      "description": "JSONP",
      "location": "query"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query"
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "schemas": {
    "ExecutePatchJobRequest": {
      "id": "ExecutePatchJobRequest",
      "description": "A request message to initiate patching across Compute Engine instances.",
      "type": "object",
      "properties": {
        "description": {
          "description": "Description of the PatchJob. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "filter": {
          "description": "Instances to patch. This is the same filter used when listing compute instances. Use instance_filter instead.",
          "type": "string"
        },
        "instanceFilter": {
          "description": "Instances to patch, either explicitly or filtered by some criteria like zone or labels.",
          "$ref": "PatchInstanceFilter"
        },
        "patchConfig": {
          "description": "Optional. Patch configuration being applied. If omitted, instances will be patched using the default configurations.",
          "$ref": "PatchConfig"
        },
        "duration": {
          "description": "Optional. Duration of the patch job. After the duration ends, the patch job will time out.",
          "type": "string",
          "format": "google-duration"
        },
        "dryRun": {
          "description": "Should this patch be a dry-run only. Instances will be contacted, but they will do nothing.",
          "type": "boolean"
        },
        "displayName": {
          "description": "Display name for this patch job. This does not have to be unique.",
          "type": "string"
        },
        "rollout": {
          "description": "Optional. Rollout strategy of the patch job.",
          "$ref": "PatchRollout"
        }
      }
    },
    "PatchInstanceFilter": {
      "id": "PatchInstanceFilter",
      "description": "A filter to target VM instances for patching. The targeted VMs must meet all criteria specified. So if both labels and zones are specified, the patch job will target only VMs with those labels AND in those zones.",
      "type": "object",
      "properties": {
        "all": {
          "description": "Target all instances in the project. If true, no other criteria is permitted.",
          "type": "boolean"
        },
        "groupLabels": {
          "description": "Targets VM instances matching at least one of these label sets. This allows targeting of disparate groups, for example \"env=prod or env=staging\".",
          "type": "array",
          "items": {
            "$ref": "PatchInstanceFilterGroupLabel"
          }
        },
        "zones": {
          "description": "Targets VM instances in ANY of these zones. Leave empty to target instances in any zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "description": "Targets any of the VM instances specified. Instances are specified by their URI in the form `zones\/[ZONE]\/instances\/[INSTANCE_NAME], `projects\/[PROJECT_ID]\/zones\/[ZONE]\/instances\/[INSTANCE_NAME]`, or `https:\/\/www.googleapis.com\/compute\/v1\/projects\/[PROJECT_ID]\/zones\/[ZONE]\/instances\/[INSTANCE_NAME]`",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instanceNamePrefixes": {
          "description": "Targets VMs whose name starts with one of these prefixes. Like labels, this is another way to group VMs when targeting configs, for example prefix=\u201Dprod-\u201D.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PatchInstanceFilterGroupLabel": {
      "id": "PatchInstanceFilterGroupLabel",
      "description": "Represents a group of VMs that can be identified as having all these labels, for example \"env=prod and app=web\".",
      "type": "object",
      "properties": {
        "labels": {
          "description": "Compute Engine instance labels that must be present for an instance to be targeted by this filter.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "PatchConfig": {
      "id": "PatchConfig",
      "description": "Patch configuration specifications. Contains details on specifically how to apply the patch(es) to an instance.",
      "type": "object",
      "properties": {
        "rebootConfig": {
          "description": "Optional. Post-patch reboot settings.",
          "type": "string",
          "enumDescriptions": [
            "The default behavior is DEFAULT.",
            "The agent will decide if a reboot is necessary by checking well known signals such as registry keys on Windows or `\/var\/run\/reboot-required` on APT based systems. On RPM based systems a set of core system package install times will be compared with system boot time.",
            "Always reboot the machine after the update has completed.",
            "Never reboot the machine after the update has completed."
          ],
          "enum": [
            "REBOOT_CONFIG_UNSPECIFIED",
            "DEFAULT",
            "ALWAYS",
            "NEVER"
          ]
        },
        "retryStrategy": {
          "description": "Optional. Retry strategy can be defined to have the agent retry patching during the window if patching fails. If omitted, the agent will use its default retry strategy.",
          "$ref": "RetryStrategy"
        },
        "apt": {
          "description": "Apt update settings. Use this override the default apt patch rules.",
          "$ref": "AptSettings"
        },
        "yum": {
          "description": "Yum update settings. Use this override the default yum patch rules.",
          "$ref": "YumSettings"
        },
        "goo": {
          "description": "Goo update settings. Use this override the default goo patch rules.",
          "$ref": "GooSettings"
        },
        "zypper": {
          "description": "Zypper update settings. Use this override the default zypper patch rules.",
          "$ref": "ZypperSettings"
        },
        "windowsUpdate": {
          "description": "Windows update settings. Use this override the default windows patch rules.",
          "$ref": "WindowsUpdateSettings"
        },
        "preStep": {
          "description": "Optional. The ExecStep to run before the patch update.",
          "$ref": "ExecStep"
        },
        "postStep": {
          "description": "Optional. The ExecStep to run after the patch update.",
          "$ref": "ExecStep"
        }
      }
    },
    "RetryStrategy": {
      "id": "RetryStrategy",
      "description": "The strategy for retrying failed patches during the patch window.",
      "type": "object",
      "properties": {
        "enabled": {
          "description": "If true, the agent will continue to try and patch until the window has ended.",
          "type": "boolean"
        }
      }
    },
    "AptSettings": {
      "id": "AptSettings",
      "description": "Apt patching will be performed by executing `apt-get update && apt-get upgrade`. Additional options can be set to control how this is executed.",
      "type": "object",
      "properties": {
        "type": {
          "description": "Optional. By changing the type to DIST, the patching will be performed using `apt-get dist-upgrade` instead.",
          "type": "string",
          "enumDescriptions": [
            "By default, upgrade will be performed.",
            "Runs `apt-get dist-upgrade`.",
            "Runs `apt-get upgrade`."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "DIST",
            "UPGRADE"
          ]
        },
        "excludes": {
          "description": "List of packages to exclude from update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePackages": {
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field cannot be specified with any other patch configuration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "YumSettings": {
      "id": "YumSettings",
      "description": "Yum patching will be performed by executing `yum update`. Additional options can be set to control how this is executed. Note that not all settings are supported on all platforms.",
      "type": "object",
      "properties": {
        "security": {
          "description": "Optional. Adds the `--security` flag to `yum update`. Not supported on all platforms.",
          "type": "boolean"
        },
        "minimal": {
          "description": "Optional. Will cause patch to run `yum update-minimal` instead.",
          "type": "boolean"
        },
        "excludes": {
          "description": "List of packages to exclude from update. These packages will be excluded by using the yum `--exclude` field.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePackages": {
          "description": "An exclusive list of packages to be updated. These are the only packages that will be updated. If these packages are not installed, they will be ignored. This field must not be specified with any other patch configuration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GooSettings": {
      "id": "GooSettings",
      "description": "Googet patching is performed by running `googet update`.",
      "type": "object",
      "properties": {
      }
    },
    "ZypperSettings": {
      "id": "ZypperSettings",
      "description": "Zypper patching is performed by running `zypper patch`. See also https:\/\/en.opensuse.org\/SDB:Zypper_manual.",
      "type": "object",
      "properties": {
        "withOptional": {
          "description": "Optional. Adds the `--with-optional` flag to `zypper patch`.",
          "type": "boolean"
        },
        "withUpdate": {
          "description": "Optional. Adds the `--with-update` flag, to `zypper patch`.",
          "type": "boolean"
        },
        "categories": {
          "description": "Optional. Install only patches with these categories. Common categories include security, recommended, and feature.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severities": {
          "description": "Optional. Install only patches with these severities. Common severities include critical, important, moderate, and low.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "excludes": {
          "description": "List of patches to exclude from update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePatches": {
          "description": "An exclusive list of patches to be updated. These are the only patches that will be installed using 'zypper patch patch:' command. This field must not be used with any other patch configuration fields.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "WindowsUpdateSettings": {
      "id": "WindowsUpdateSettings",
      "description": "Windows patching is performed using the Windows Update Agent.",
      "type": "object",
      "properties": {
        "classifications": {
          "description": "Only apply updates of these windows update classifications. If empty, all updates will be applied.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Invalid. If classifications are included, they must be specified.",
              "\"A widely released fix for a specific problem that addresses a critical, non-security-related bug.\" [1]",
              "\"A widely released fix for a product-specific, security-related vulnerability. Security vulnerabilities are rated by their severity. The severity rating is indicated in the Microsoft security bulletin as critical, important, moderate, or low.\" [1]",
              "\"A widely released and frequent software update that contains additions to a product\u2019s definition database. Definition databases are often used to detect objects that have specific attributes, such as malicious code, phishing websites, or junk mail.\" [1]",
              "\"Software that controls the input and output of a device.\" [1]",
              "\"New product functionality that is first distributed outside the context of a product release and that is typically included in the next full product release.\" [1]",
              "\"A tested, cumulative set of all hotfixes, security updates, critical updates, and updates. Additionally, service packs may contain additional fixes for problems that are found internally since the release of the product. Service packs my also contain a limited number of customer-requested design changes or features.\" [1]",
              "\"A utility or feature that helps complete a task or set of tasks.\" [1]",
              "\"A tested, cumulative set of hotfixes, security updates, critical updates, and updates that are packaged together for easy deployment. A rollup generally targets a specific area, such as security, or a component of a product, such as Internet Information Services (IIS).\" [1]",
              "\"A widely released fix for a specific problem. An update addresses a noncritical, non-security-related bug.\" [1]"
            ],
            "enum": [
              "CLASSIFICATION_UNSPECIFIED",
              "CRITICAL",
              "SECURITY",
              "DEFINITION",
              "DRIVER",
              "FEATURE_PACK",
              "SERVICE_PACK",
              "TOOL",
              "UPDATE_ROLLUP",
              "UPDATE"
            ]
          }
        },
        "excludes": {
          "description": "Optional. List of KBs to exclude from update.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "exclusivePatches": {
          "description": "An exclusive list of kbs to be updated. These are the only patches that will be updated. This field must not be used with other patch configurations.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ExecStep": {
      "id": "ExecStep",
      "description": "A step that runs an executable for a PatchJob.",
      "type": "object",
      "properties": {
        "linuxExecStepConfig": {
          "description": "The ExecStepConfig for all Linux VMs targeted by the PatchJob.",
          "$ref": "ExecStepConfig"
        },
        "windowsExecStepConfig": {
          "description": "The ExecStepConfig for all Windows VMs targeted by the PatchJob.",
          "$ref": "ExecStepConfig"
        }
      }
    },
    "ExecStepConfig": {
      "id": "ExecStepConfig",
      "description": "Common configurations for an ExecStep.",
      "type": "object",
      "properties": {
        "localPath": {
          "description": "An absolute path to the executable on the VM.",
          "type": "string"
        },
        "gcsObject": {
          "description": "A GCS object containing the executable.",
          "$ref": "GcsObject"
        },
        "allowedSuccessCodes": {
          "description": "Optional. Defaults to [0]. A list of possible return values that the execution can return to indicate a success.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "interpreter": {
          "description": "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with shebang lines. [Wikipedia shebang](https:\/\/en.wikipedia.org\/wiki\/Shebang_(Unix)).",
          "type": "string",
          "enumDescriptions": [
            "Default value.",
            "Indicates that the script will be run with \/bin\/sh on Linux and cmd on windows.",
            "Indicates that the file will be run with PowerShell."
          ],
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ]
        }
      }
    },
    "GcsObject": {
      "id": "GcsObject",
      "description": "GCS object representation.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Bucket of the GCS object.",
          "type": "string"
        },
        "object": {
          "description": "Name of the GCS object.",
          "type": "string"
        },
        "generationNumber": {
          "description": "Generation number of the GCS object. This is used to ensure that the ExecStep specified by this PatchJob does not change.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "PatchRollout": {
      "id": "PatchRollout",
      "description": "Patch rollout configuration specifications. Contains details on the concurrency control when applying patch(es) to all targeted VMs.",
      "type": "object",
      "properties": {
        "mode": {
          "description": "Mode of the patch rollout.",
          "type": "string",
          "enumDescriptions": [
            "Mode must be specified.",
            "Patches are applied one zone at a time. The patch job begins in the region with the lowest number of targeted VMs. Within the region, patching begins in the zone with the lowest number of targeted VMs. If multiple regions (or zones within a region) have the same number of targeted VMs, a tie-breaker is achieved by sorting the regions or zones in alphabetical order.",
            "Patches are applied to VMs in all zones at the same time."
          ],
          "enum": [
            "MODE_UNSPECIFIED",
            "ZONE_BY_ZONE",
            "CONCURRENT_ZONES"
          ]
        },
        "disruptionBudget": {
          "description": "The maximum number (or percentage) of VMs per zone to disrupt at any given moment. The number of VMs calculated from multiplying the percentage by the total number of VMs in a zone is rounded up. During patching, a VM is considered disrupted from the time the agent is notified to begin until patching has completed. This disruption time includes the time to complete reboot and any post-patch steps. A VM contributes to the disruption budget if its patching operation fails either when applying the patches, running pre or post patch steps, or if it fails to respond with a success notification before timing out. VMs that are not running or do not have an active agent do not count toward this disruption budget. For zone-by-zone rollouts, if the disruption budget in a zone is exceeded, the patch job stops, because continuing to the next zone requires completion of the patch process in the previous zone. For example, if the disruption budget has a fixed value of `10`, and 8 VMs fail to patch in the current zone, the patch job continues to patch 2 VMs at a time until the zone is completed. When that zone is completed successfully, patching begins with 10 VMs at a time in the next zone. If 10 VMs in the next zone fail to patch, the patch job stops.",
          "$ref": "FixedOrPercent"
        }
      }
    },
    "FixedOrPercent": {
      "id": "FixedOrPercent",
      "description": "Message encapsulating a value that can be either absolute (\"fixed\") or relative (\"percent\") to a value.",
      "type": "object",
      "properties": {
        "fixed": {
          "description": "Specifies a fixed value.",
          "type": "integer",
          "format": "int32"
        },
        "percent": {
          "description": "Specifies the relative value defined as a percentage, which will be multiplied by a reference value.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PatchJob": {
      "id": "PatchJob",
      "description": "A high level representation of a patch job that is either in progress or has completed. Instance details are not included in the job. To paginate through instance details, use `ListPatchJobInstanceDetails`.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Unique identifier for this patch job in the form `projects\/*\/patchJobs\/*`",
          "readOnly": true,
          "type": "string"
        },
        "displayName": {
          "description": "Display name for this patch job. This is not a unique identifier.",
          "type": "string"
        },
        "description": {
          "description": "Description of the patch job. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time this PatchJob was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Last time this PatchJob was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "description": "Output only. The current state of the PatchJob.",
          "readOnly": true,
          "type": "string",
          "enumDescriptions": [
            "State must be specified.",
            "The patch job was successfully initiated.",
            "The patch job is looking up instances to run the patch on.",
            "Instances are being patched.",
            "Patch job completed successfully.",
            "Patch job completed but there were errors.",
            "The patch job was canceled.",
            "The patch job has timed out."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STARTED",
            "INSTANCE_LOOKUP",
            "PATCHING",
            "SUCCEEDED",
            "COMPLETED_WITH_ERRORS",
            "CANCELED",
            "TIMED_OUT"
          ]
        },
        "filter": {
          "description": "Instances to patch. This is the same filter used when listing compute instances. Use instance_filter instead.",
          "type": "string"
        },
        "instanceFilter": {
          "description": "Instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "patchConfig": {
          "description": "Patch configuration being applied.",
          "$ref": "PatchConfig"
        },
        "duration": {
          "description": "Duration of the patch job. After the duration ends, the patch job will time out.",
          "type": "string",
          "format": "google-duration"
        },
        "instanceDetailsSummary": {
          "description": "Summary of instance details.",
          "$ref": "PatchJobInstanceDetailsSummary"
        },
        "dryRun": {
          "description": "If this patch job is a dry run, the agent will report that it has finished without running any updates on the VM.",
          "type": "boolean"
        },
        "errorMessage": {
          "description": "If this patch job failed, this message will provide information about the failure.",
          "type": "string"
        },
        "percentComplete": {
          "description": "Reflects the overall progress of the patch job in the range of 0.0 being no progress to 100.0 being complete.",
          "type": "number",
          "format": "double"
        },
        "patchDeployment": {
          "description": "Output only. Name of the patch deployment that created this patch job.",
          "readOnly": true,
          "type": "string"
        },
        "rollout": {
          "description": "Optional. Rollout strategy being applied.",
          "$ref": "PatchRollout"
        }
      }
    },
    "PatchJobInstanceDetailsSummary": {
      "id": "PatchJobInstanceDetailsSummary",
      "description": "A summary of the current patch state across all instances this patch job affects. Contains counts of instances in different states. These states map to `InstancePatchState`. List patch job instance details to see the specific states of each instance.",
      "type": "object",
      "properties": {
        "instancesPending": {
          "description": "Number of instances pending patch job.",
          "type": "string",
          "format": "int64"
        },
        "instancesInactive": {
          "description": "Number of instances that are inactive.",
          "type": "string",
          "format": "int64"
        },
        "instancesNotified": {
          "description": "Number of instances notified about patch job.",
          "type": "string",
          "format": "int64"
        },
        "instancesStarted": {
          "description": "Number of instances that have started.",
          "type": "string",
          "format": "int64"
        },
        "instancesDownloadingPatches": {
          "description": "Number of instances that are downloading patches.",
          "type": "string",
          "format": "int64"
        },
        "instancesApplyingPatches": {
          "description": "Number of instances that are applying patches.",
          "type": "string",
          "format": "int64"
        },
        "instancesRebooting": {
          "description": "Number of instances rebooting.",
          "type": "string",
          "format": "int64"
        },
        "instancesSucceeded": {
          "description": "Number of instances that have completed successfully.",
          "type": "string",
          "format": "int64"
        },
        "instancesSucceededRebootRequired": {
          "description": "Number of instances that require reboot.",
          "type": "string",
          "format": "int64"
        },
        "instancesFailed": {
          "description": "Number of instances that failed.",
          "type": "string",
          "format": "int64"
        },
        "instancesAcked": {
          "description": "Number of instances that have acked and will start shortly.",
          "type": "string",
          "format": "int64"
        },
        "instancesTimedOut": {
          "description": "Number of instances that exceeded the time out while applying the patch.",
          "type": "string",
          "format": "int64"
        },
        "instancesRunningPrePatchStep": {
          "description": "Number of instances that are running the pre-patch step.",
          "type": "string",
          "format": "int64"
        },
        "instancesRunningPostPatchStep": {
          "description": "Number of instances that are running the post-patch step.",
          "type": "string",
          "format": "int64"
        },
        "instancesNoAgentDetected": {
          "description": "Number of instances that do not appear to be running the agent. Check to ensure that the agent is installed, running, and able to communicate with the service.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "CancelPatchJobRequest": {
      "id": "CancelPatchJobRequest",
      "description": "Message for canceling a patch job.",
      "type": "object",
      "properties": {
      }
    },
    "ListPatchJobsResponse": {
      "id": "ListPatchJobsResponse",
      "description": "A response message for listing patch jobs.",
      "type": "object",
      "properties": {
        "patchJobs": {
          "description": "The list of patch jobs.",
          "type": "array",
          "items": {
            "$ref": "PatchJob"
          }
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of results.",
          "type": "string"
        }
      }
    },
    "ReportPatchJobInstanceDetailsRequest": {
      "id": "ReportPatchJobInstanceDetailsRequest",
      "description": "Deprecated. Use AgentEndpointProto.ReportTaskExecutionRequest instead.",
      "type": "object",
      "properties": {
        "instanceSystemId": {
          "description": "Required. The unique, system-generated identifier for the instance. This is the auto-generated ID assigned to the instance upon creation. This is needed here because Compute Engine instance names are not tombstoned; it is possible to delete an instance and create a new one with the same name; this provides a mechanism for this API to identify distinct instances in this case.",
          "type": "string"
        },
        "patchJob": {
          "description": "Unique identifier of the patch job this request applies to.",
          "type": "string"
        },
        "state": {
          "description": "State of current patch execution on the instance.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "The instance has not been notified yet.",
            "Instance is inactive and cannot be patched.",
            "The instance has been notified that it should patch.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."
          ],
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ]
        },
        "failureReason": {
          "description": "Reason for failure.",
          "type": "string"
        },
        "attemptCount": {
          "description": "Number of times the agent attempted to apply the patch.",
          "type": "string",
          "format": "int64"
        },
        "instanceIdToken": {
          "description": "This is the Compute Engine [instance identity token](\/compute\/docs\/instances\/verifying-instance-identity). The audience for this token is `osconfig.googleapis.com` and the format is `full`.",
          "type": "string"
        }
      }
    },
    "ReportPatchJobInstanceDetailsResponse": {
      "id": "ReportPatchJobInstanceDetailsResponse",
      "description": "(Deprecated) Use `AgentEndpointProto.ReportTaskExecutionResponse` instead.",
      "type": "object",
      "properties": {
        "patchJob": {
          "description": "Unique identifier for the current patch job.",
          "type": "string"
        },
        "patchConfig": {
          "description": "Patch configuration the agent should apply.",
          "$ref": "PatchConfig"
        },
        "patchJobState": {
          "description": "State of the overall patch. If the patch is no longer active, the agent should not begin a new patch step.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified is invalid.",
            "The patch job is running. Instances continue to run patch job steps.",
            "The patch job is complete."
          ],
          "enum": [
            "PATCH_JOB_STATE_UNSPECIFIED",
            "ACTIVE",
            "COMPLETED"
          ]
        },
        "dryRun": {
          "description": "If this patch job is a dry run, the agent reports its status as it goes through the motions but won't actually run any updates or perform any reboots.",
          "type": "boolean"
        }
      }
    },
    "ListPatchJobInstanceDetailsResponse": {
      "id": "ListPatchJobInstanceDetailsResponse",
      "description": "A response message for listing the instances' details for a patch job.",
      "type": "object",
      "properties": {
        "patchJobInstanceDetails": {
          "description": "The list of instance status.",
          "type": "array",
          "items": {
            "$ref": "PatchJobInstanceDetails"
          }
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of results.",
          "type": "string"
        }
      }
    },
    "PatchJobInstanceDetails": {
      "id": "PatchJobInstanceDetails",
      "description": "Patch details of an instance.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The instance name in the form `projects\/*\/zones\/*\/instances\/*`",
          "type": "string"
        },
        "instanceSystemId": {
          "description": "The unique, system-generated identifier for the instance.",
          "type": "string"
        },
        "state": {
          "description": "Current state of instance patch.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "The instance has not been notified yet.",
            "Instance is inactive and cannot be patched.",
            "The instance has been notified that it should patch.",
            "The instance has started the patching process.",
            "The instance is downloading patches.",
            "The instance is applying patches.",
            "The instance is rebooting.",
            "The instance has completed applying patches.",
            "The instance has completed applying patches but a reboot is required.",
            "The instance has failed to apply the patch.",
            "The instance acked the notification and will start shortly.",
            "The instance exceeded the time out while applying the patch.",
            "The instance is running the pre-patch step.",
            "The instance is running the post-patch step.",
            "The service could not detect the presence of the agent. Check to ensure that the agent is installed, running, and able to communicate with the service."
          ],
          "enum": [
            "PATCH_STATE_UNSPECIFIED",
            "PENDING",
            "INACTIVE",
            "NOTIFIED",
            "STARTED",
            "DOWNLOADING_PATCHES",
            "APPLYING_PATCHES",
            "REBOOTING",
            "SUCCEEDED",
            "SUCCEEDED_REBOOT_REQUIRED",
            "FAILED",
            "ACKED",
            "TIMED_OUT",
            "RUNNING_PRE_PATCH_STEP",
            "RUNNING_POST_PATCH_STEP",
            "NO_AGENT_DETECTED"
          ]
        },
        "failureReason": {
          "description": "If the patch has failed, this is the reason.",
          "type": "string"
        },
        "attemptCount": {
          "description": "Number of times the agent attempted to apply the patch.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "PatchDeployment": {
      "id": "PatchDeployment",
      "description": "An OS Config resource representing a patch deployment. These deployments represent configurations that individual patch jobs should be executed with, such as the instance filter, package repository settings, and a schedule.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the resource in this project using the form: `projects\/{project_id}\/patchDeployments\/{patch_deployment_id}`. Ignored when creating a new PatchDeployment.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of the patch deployment. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "instanceFilter": {
          "description": "Required. Instances to patch.",
          "$ref": "PatchInstanceFilter"
        },
        "patchConfig": {
          "description": "Optional. Patch configuration being applied.",
          "$ref": "PatchConfig"
        },
        "duration": {
          "description": "Optional. Duration of the patch. After the duration ends, patch will time out.",
          "type": "string",
          "format": "google-duration"
        },
        "oneTimeSchedule": {
          "description": "Required. Schedule with an one-time execution.",
          "$ref": "OneTimeSchedule"
        },
        "recurringSchedule": {
          "description": "Required. Schedule with recurring executions.",
          "$ref": "RecurringSchedule"
        },
        "createTime": {
          "description": "Output only. Time this patch deployment was created.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Time this patch deployment was updated.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lastExecuteTime": {
          "description": "Output only. The last execution time of a patch job triggered by this deployment.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "rollout": {
          "description": "Optional. Rollout strategy of the patch job.",
          "$ref": "PatchRollout"
        }
      }
    },
    "OneTimeSchedule": {
      "id": "OneTimeSchedule",
      "description": "Represents the time for a patch job execution.",
      "type": "object",
      "properties": {
        "executeTime": {
          "description": "Required. The desired patch job execution time.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "RecurringSchedule": {
      "id": "RecurringSchedule",
      "description": "Represents a recurring schedule for patch job executions.",
      "type": "object",
      "properties": {
        "timeZone": {
          "description": "Required. Defines the time zone that day_time will be relative to. The rules for daylight saving time are determined by the chosen time zone. , see b\/141445686.",
          "$ref": "TimeZone"
        },
        "startTime": {
          "description": "Optional. The start time for a recurring schedule to be active. Defaults to create_time of the patch deployment.",
          "type": "string",
          "format": "google-datetime"
        },
        "endTime": {
          "description": "Optional. The end time for a recurring schedule to be active.",
          "type": "string",
          "format": "google-datetime"
        },
        "timeOfDay": {
          "description": "Required. Time of the day for an instance of the recurrence.",
          "$ref": "TimeOfDay"
        },
        "frequency": {
          "description": "Required. The frequency unit of this recurring schedule.",
          "type": "string",
          "enumDescriptions": [
            "Invalid. A frequency must be specified.",
            "Indicates that the recurrence frequency should be expressed in terms of weeks.",
            "Indicates that the recurrence frequency should be expressed in terms of months."
          ],
          "enum": [
            "FREQUENCY_UNSPECIFIED",
            "WEEKLY",
            "MONTHLY"
          ]
        },
        "weekly": {
          "description": "Required. Schedule with weekly executions.",
          "$ref": "WeeklySchedule"
        },
        "monthly": {
          "description": "Required. Schedule with monthly executions.",
          "$ref": "MonthlySchedule"
        },
        "lastExecuteTime": {
          "description": "Output only. The last actual patch execution time for display.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "nextExecuteTime": {
          "description": "Output only. The next expected patch execution time for display.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "TimeZone": {
      "id": "TimeZone",
      "description": "Represents a time zone from the [IANA Time Zone Database](https:\/\/www.iana.org\/time-zones).",
      "type": "object",
      "properties": {
        "id": {
          "description": "IANA Time Zone Database time zone, e.g. \"America\/New_York\".",
          "type": "string"
        },
        "version": {
          "description": "Optional. IANA Time Zone Database version number, e.g. \"2019a\".",
          "type": "string"
        }
      }
    },
    "TimeOfDay": {
      "id": "TimeOfDay",
      "description": "Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.",
      "type": "object",
      "properties": {
        "hours": {
          "description": "Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value \"24:00:00\" for scenarios like business closing time.",
          "type": "integer",
          "format": "int32"
        },
        "minutes": {
          "description": "Minutes of hour of day. Must be from 0 to 59.",
          "type": "integer",
          "format": "int32"
        },
        "seconds": {
          "description": "Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.",
          "type": "integer",
          "format": "int32"
        },
        "nanos": {
          "description": "Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WeeklySchedule": {
      "id": "WeeklySchedule",
      "description": "Represents a weekly schedule.",
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "description": "Required. Day of the week.",
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        }
      }
    },
    "MonthlySchedule": {
      "id": "MonthlySchedule",
      "description": "Represents a monthly schedule. An example of a valid monthly schedule is \"on the third Tuesday of the month\" or \"on the 15th of the month\".",
      "type": "object",
      "properties": {
        "weekDayOfMonth": {
          "description": "Required. Week day in a month.",
          "$ref": "WeekDayOfMonth"
        },
        "monthDay": {
          "description": "Required. One day of the month. 1-31 indicates the 1st to the 31st day. -1 indicates the last day of the month. Months without the target day will be skipped. For example, a schedule to run \"every month on the 31st\" will not run in February, April, June, etc.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WeekDayOfMonth": {
      "id": "WeekDayOfMonth",
      "description": "Represents one week day in a month. An example is \"the 4th Sunday\".",
      "type": "object",
      "properties": {
        "weekOrdinal": {
          "description": "Required. Week number in a month. 1-4 indicates the 1st to 4th week of the month. -1 indicates the last week of the month.",
          "type": "integer",
          "format": "int32"
        },
        "dayOfWeek": {
          "description": "Required. A day of the week.",
          "type": "string",
          "enumDescriptions": [
            "The day of the week is unspecified.",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday",
            "Sunday"
          ],
          "enum": [
            "DAY_OF_WEEK_UNSPECIFIED",
            "MONDAY",
            "TUESDAY",
            "WEDNESDAY",
            "THURSDAY",
            "FRIDAY",
            "SATURDAY",
            "SUNDAY"
          ]
        }
      }
    },
    "ListPatchDeploymentsResponse": {
      "id": "ListPatchDeploymentsResponse",
      "description": "A response message for listing patch deployments.",
      "type": "object",
      "properties": {
        "patchDeployments": {
          "description": "The list of patch deployments.",
          "type": "array",
          "items": {
            "$ref": "PatchDeployment"
          }
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of patch deployments.",
          "type": "string"
        }
      }
    },
    "Empty": {
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {
      }
    },
    "GuestPolicy": {
      "id": "GuestPolicy",
      "description": "An OS Config resource representing a guest configuration policy. These policies represent the desired state for a VM's guest environment including packages to install or remove, package repository configurations, and software to install.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique name of the resource in this project using the form: `projects\/{project_id}\/guestPolicies\/{guest_policy_id}`.",
          "type": "string"
        },
        "description": {
          "description": "Description of the GuestPolicy. Length of the description is limited to 1024 characters.",
          "type": "string"
        },
        "createTime": {
          "description": "Output only. Time this GuestPolicy was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "updateTime": {
          "description": "Output only. Last time this GuestPolicy was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "assignment": {
          "description": "Specifies the VMs that are assigned this policy. This allows you to target sets or groups of VMs by different parameters such as labels, names, OS, or zones. Empty assignments will target ALL VMs underneath this policy. Conflict Management Policies that exist higher up in the resource hierarchy (closer to the Org) will override those lower down if there is a conflict. At the same level in the resource hierarchy (ie. within a project), the service will prevent the creation of multiple policies that conflict with each other. If there are multiple policies that specify the same config (eg. package, software recipe, repository, etc.), the service will ensure that no VM could potentially receive instructions from both policies. To create multiple policies that specify different versions of a package or different configs for different Operating Systems, each policy must be mutually exclusive in their targeting according to labels, OS, or other criteria. Different configs are identified for conflicts in different ways. Packages are identified by their name and the package manager(s) they target. Package repositories are identified by their unique id where applicable. Some package managers don't have a unique identifier for repositories and where that's the case, no uniqueness is validated by the service. Note that if OS Inventory is disabled, a VM will not be assigned a policy that targets by OS because the service will see this VM's OS as unknown.",
          "$ref": "Assignment"
        },
        "packages": {
          "description": "The software packages to be managed by this policy.",
          "type": "array",
          "items": {
            "$ref": "Package"
          }
        },
        "packageRepositories": {
          "description": "Optional. A list of package repositories to configure on the VM. This will be done before any other configs are applied so they can use these repos. Package repositories will only be configured if the corresponding package manager(s) are available.",
          "type": "array",
          "items": {
            "$ref": "PackageRepository"
          }
        },
        "recipes": {
          "description": "Optional. A list of Recipes to install on the VM.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipe"
          }
        },
        "etag": {
          "description": "The etag for this GuestPolicy. If this is provided on update, it must match the server's etag.",
          "type": "string"
        }
      }
    },
    "Assignment": {
      "id": "Assignment",
      "description": "An Assignment represents the group or groups of VMs that the policy applies to. If an Assignment is empty, it applies to all VMs. Otherwise, the targeted VMs must meet ALL criteria specified. So if both labels and zones are specified, the policy will apply to VMs with those labels AND in those zones.",
      "type": "object",
      "properties": {
        "groupLabels": {
          "description": "Targets instances matching at least one of these label sets. This allows an assignment to target disparate groups, for example \"env=prod or env=staging\".",
          "type": "array",
          "items": {
            "$ref": "AssignmentGroupLabel"
          }
        },
        "zones": {
          "description": "Targets instances in ANY of these zones. Leave empty to target instances in any zone. Zonal targeting is uncommon and is supported to facilitate orchestrating changes by zone.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instances": {
          "description": "Targets any of the instances specified. Instances are specified by their URI in the form `zones\/[ZONE]\/instances\/[INSTANCE_NAME]` or `https:\/\/www.googleapis.com\/compute\/v1\/projects\/[PROJECT_ID]\/zones\/[ZONE]\/instances\/[INSTANCE_NAME]` Instance targeting is uncommon and is supported to facilitate orchestrating changes by instance or to target specific VMs for development and testing. Only supported for project-level policies and must reference instances within this project.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "instanceNamePrefixes": {
          "description": "Targets VMs whose name starts with one of these prefixes. Like labels, this is another way to group VMs when targeting configs, for example prefix=\u201Dprod-\u201D. Only supported for project-level policies.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "osShortNames": {
          "description": "Targets VMs with OS Inventory enabled and having one of the following OS short names, for example \"debian\", \"windows\".",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "osVersions": {
          "description": "Targets VMs with OS Inventory enabled and having one of the following OS versions.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "osArchitectures": {
          "description": "Targets VMs with OS Inventory enabled and having one of the following OS architectures.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AssignmentGroupLabel": {
      "id": "AssignmentGroupLabel",
      "description": "Represents a group of VMs that can be identified as having all these labels, for example \"env=prod and app=web\".",
      "type": "object",
      "properties": {
        "labels": {
          "description": "GCE instance labels that must be present for an instance to be included in this assignment group.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Package": {
      "id": "Package",
      "description": "Package is a reference to the software package to be installed or removed. The agent on the VM will use the system package manager to apply the config. These are the commands that the agent will use to install or remove packages. Apt install: `apt-get update && apt-get -y install package1 package2 package3` remove: `apt-get -y remove package1 package2 package3` Yum install: `yum -y install package1 package2 package3` remove: `yum -y remove package1 package2 package3` Zypper install: `zypper install package1 package2 package3` remove: `zypper rm package1 package2` Googet install: `googet -noconfirm install package1 package2 package3` remove: `googet -noconfirm remove package1 package2 package3`",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of the package. A package is uniquely identified for conflict validation by checking its name and the manager(s) it targets.",
          "type": "string"
        },
        "desiredState": {
          "description": "Optional. The desired_state the agent should maintain for this package. The default is to ensure the package is installed.",
          "type": "string",
          "enumDescriptions": [
            "The default is to ensure the package is installed.",
            "The agent will ensure that the package is installed.",
            "The agent will ensure that the package is installed and will periodically check for and install any updates.",
            "The agent will ensure that the package is not installed and uninstall it if detected."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "UPDATED",
            "REMOVED"
          ]
        },
        "manager": {
          "description": "Optional. Type of package manager that can be used to install this package. If a system does not have the package manager, the package will not be installed\/removed and there is no error. By default or when specifying ANY, the agent will attempt to install and remove this package using the default package manager. This is helpful when creating a policy that applies to different types of systems. The default behavior is ANY.",
          "type": "string",
          "enumDescriptions": [
            "The default behavior is ANY.",
            "Apply this package config using the default system package manager.",
            "Apply this package config only if Apt is available on the system.",
            "Apply this package config only if Yum is available on the system.",
            "Apply this package config only if Zypper is available on the system.",
            "Apply this package config only if GooGet is available on the system."
          ],
          "enum": [
            "MANAGER_UNSPECIFIED",
            "ANY",
            "APT",
            "YUM",
            "ZYPPER",
            "GOO"
          ]
        }
      }
    },
    "PackageRepository": {
      "id": "PackageRepository",
      "description": "A package repository.",
      "type": "object",
      "properties": {
        "apt": {
          "description": "An Apt Repository.",
          "$ref": "AptRepository"
        },
        "yum": {
          "description": "A Yum Repository.",
          "$ref": "YumRepository"
        },
        "zypper": {
          "description": "A Zypper Repository.",
          "$ref": "ZypperRepository"
        },
        "goo": {
          "description": "A Goo Repository.",
          "$ref": "GooRepository"
        }
      }
    },
    "AptRepository": {
      "id": "AptRepository",
      "description": "Represents a single apt package repository. These will be added to a repo file that will be managed at \/etc\/apt\/sources.list.d\/google_osconfig.list.",
      "type": "object",
      "properties": {
        "archiveType": {
          "description": "Type of archive files in this repository. The default behavior is DEB.",
          "type": "string",
          "enumDescriptions": [
            "Unspecified.",
            "Deb indicates that the archive contains binary files.",
            "Deb-src indicates that the archive contains source files."
          ],
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "DEB",
            "DEB_SRC"
          ]
        },
        "uri": {
          "description": "Required. URI for this repository.",
          "type": "string"
        },
        "distribution": {
          "description": "Required. Distribution of this repository.",
          "type": "string"
        },
        "components": {
          "description": "List of components for this repository. Must contain at least one item.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "gpgKey": {
          "description": "Optional. URI of the key file for this repository. The agent will maintain a keyring at \/etc\/apt\/trusted.gpg.d\/osconfig_agent_managed.gpg containing all the keys in any applied GuestPolicy.",
          "type": "string"
        }
      }
    },
    "YumRepository": {
      "id": "YumRepository",
      "description": "Represents a single yum package repository. These will be added to a repo file that will be managed at \/etc\/yum.repos.d\/google_osconfig.repo.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. A one word, unique name for this repository. This will be the `repo id` in the yum config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional.",
          "type": "string"
        },
        "baseUrl": {
          "description": "Required. The location of the repository directory.",
          "type": "string"
        },
        "gpgKeys": {
          "description": "Optional. URIs of GPG keys.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ZypperRepository": {
      "id": "ZypperRepository",
      "description": "Represents a single zypper package repository. These will be added to a repo file that will be managed at \/etc\/zypp\/repos.d\/google_osconfig.repo.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Required. A one word, unique name for this repository. This will be the `repo id` in the zypper config file and also the `display_name` if `display_name` is omitted. This id is also used as the unique identifier when checking for GuestPolicy conflicts.",
          "type": "string"
        },
        "displayName": {
          "description": "Optional.",
          "type": "string"
        },
        "baseUrl": {
          "description": "Required. The location of the repository directory.",
          "type": "string"
        },
        "gpgKeys": {
          "description": "Optional. URIs of GPG keys.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GooRepository": {
      "id": "GooRepository",
      "description": "Represents a Goo package repository. These will be added to a repo file that will be managed at C:\/ProgramData\/GooGet\/repos\/google_osconfig.repo.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Required. The name of the repository.",
          "type": "string"
        },
        "url": {
          "description": "Required. The url of the repository.",
          "type": "string"
        }
      }
    },
    "SoftwareRecipe": {
      "id": "SoftwareRecipe",
      "description": "A software recipe is a set of instructions for installing and configuring a piece of software. It consists of a set of artifacts that will be downloaded and a set of steps that install, configure, and\/or update th software. Recipes supports installing and updating software from artifacts in the following formats: Zip archive, Tar archive, Windows MSI, Debian package, and RPM package. Additionally it supports executing a script (either defined in a file or directly in this api) in bash, sh, cmd, and powershell. Updating a Software Recipe If a recipe is assigned to an instance and there is a recipe with the same name but a lower version already installed on the instance and the state of the recipe is INSTALLED_KEEP_UPDATED then the recipe will be updated to the new version. Script Working Directories Each script or exec step will be run in its own temporary directory which is deleted after completing the step.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Unique identifier for the recipe. Only one recipe with a given name will be installed on an instance. Names are also used to identify resource to determine whether guest policies conflict. This means that requests to create multiple recipes with the same name and version that could possibly have conflicting assignments will be rejected.",
          "type": "string"
        },
        "version": {
          "description": "The version of this software recipe. Version can be up to 4 period separated numbers (e.g. 12.34.56.78).",
          "type": "string"
        },
        "artifacts": {
          "description": "Resources available to be used in the steps in the recipe.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeArtifact"
          }
        },
        "installSteps": {
          "description": "Actions to be taken for installing this recipe. On failure it will stop executing steps and not attempt another installation. Any steps taken (including partially completed steps) will not be rolled back.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeStep"
          }
        },
        "updateSteps": {
          "description": "Actions to be taken for updating this recipe. On failure it will stop executing steps and not attempt another update for this recipe. Any steps taken (including partially completed steps) will not be rolled back.",
          "type": "array",
          "items": {
            "$ref": "SoftwareRecipeStep"
          }
        },
        "desiredState": {
          "description": "Default is INSTALLED. The desired state the agent should maintain for this recipe. INSTALLED: The software recipe will be installed on the instance but won't be updated to new versions. INSTALLED_KEEP_UPDATED: The software recipe will be installed on the instance. It will also be updated to a higher version of the recipe if a higher version is assigned to this instance. REMOVE: Remove is unsupported for software recipes and attempts to create or update a recipe to the REMOVE state will be rejected.",
          "type": "string",
          "enumDescriptions": [
            "The default is to ensure the package is installed.",
            "The agent will ensure that the package is installed.",
            "The agent will ensure that the package is installed and will periodically check for and install any updates.",
            "The agent will ensure that the package is not installed and uninstall it if detected."
          ],
          "enum": [
            "DESIRED_STATE_UNSPECIFIED",
            "INSTALLED",
            "UPDATED",
            "REMOVED"
          ]
        }
      }
    },
    "SoftwareRecipeArtifact": {
      "id": "SoftwareRecipeArtifact",
      "description": "Specifies a resource to be used in the recipe.",
      "type": "object",
      "properties": {
        "id": {
          "description": "Id of the artifact, which the installation and update steps of this recipe can reference. Artifacts in a recipe cannot have the same id.",
          "type": "string"
        },
        "remote": {
          "description": "A generic remote artifact.",
          "$ref": "SoftwareRecipeArtifactRemote"
        },
        "gcs": {
          "description": "A GCS artifact.",
          "$ref": "SoftwareRecipeArtifactGcs"
        },
        "allowInsecure": {
          "description": "Defaults to false. When false, recipes will be subject to validations based on the artifact type: Remote: A checksum must be specified, and only protocols with transport-layer security will be permitted. GCS: An object generation number must be specified.",
          "type": "boolean"
        }
      }
    },
    "SoftwareRecipeArtifactRemote": {
      "id": "SoftwareRecipeArtifactRemote",
      "description": "Specifies an artifact available via some URI.",
      "type": "object",
      "properties": {
        "uri": {
          "description": "URI from which to fetch the object. It should contain both the protocol and path following the format {protocol}:\/\/{location}.",
          "type": "string"
        },
        "checksum": {
          "description": "Optional if allow_insecure is true. SHA256 checksum to compare to the checksum of the artifact. If the checksum is not empty and it doesn't match the artifact then the recipe installation will fail before running any of the steps.",
          "type": "string"
        }
      }
    },
    "SoftwareRecipeArtifactGcs": {
      "id": "SoftwareRecipeArtifactGcs",
      "description": "Specifies an artifact available as a GCS Object.",
      "type": "object",
      "properties": {
        "bucket": {
          "description": "Bucket of the GCS object.",
          "type": "string"
        },
        "object": {
          "description": "Name of the GCS object.",
          "type": "string"
        },
        "generation": {
          "description": "Optional if allow_insecure is true. Generation number of the GCS object.",
          "type": "string",
          "format": "int64"
        }
      }
    },
    "SoftwareRecipeStep": {
      "id": "SoftwareRecipeStep",
      "description": "An action that can be taken as part of installing or updating a recipe.",
      "type": "object",
      "properties": {
        "fileCopy": {
          "description": "Copies a file onto the instance.",
          "$ref": "SoftwareRecipeStepCopyFile"
        },
        "archiveExtraction": {
          "description": "Extracts an archive into the specified directory.",
          "$ref": "SoftwareRecipeStepExtractArchive"
        },
        "msiInstallation": {
          "description": "Installs an MSI file.",
          "$ref": "SoftwareRecipeStepInstallMsi"
        },
        "dpkgInstallation": {
          "description": "Installs a deb file via dpkg.",
          "$ref": "SoftwareRecipeStepInstallDpkg"
        },
        "rpmInstallation": {
          "description": "Installs an rpm file via the rpm utility.",
          "$ref": "SoftwareRecipeStepInstallRpm"
        },
        "fileExec": {
          "description": "Executes an artifact or local file.",
          "$ref": "SoftwareRecipeStepExecFile"
        },
        "scriptRun": {
          "description": "Runs commands in a shell.",
          "$ref": "SoftwareRecipeStepRunScript"
        }
      }
    },
    "SoftwareRecipeStepCopyFile": {
      "id": "SoftwareRecipeStepCopyFile",
      "description": "Copies the artifact to the specified path on the instance.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "destination": {
          "description": "The absolute path on the instance to put the file.",
          "type": "string"
        },
        "overwrite": {
          "description": "Whether to allow this step to overwrite existing files. If this is false and the file already exists the file will not be overwritten and the step will be considered a success. Defaults to false.",
          "type": "boolean"
        },
        "permissions": {
          "description": "Consists of three octal digits which represent, in order, the permissions of the owner, group, and other users for the file (similarly to the numeric mode used in the linux chmod utility). Each digit represents a three bit number with the 4 bit corresponding to the read permissions, the 2 bit corresponds to the write bit, and the one bit corresponds to the execute permission. Default behavior is 755. Below are some examples of permissions and their associated values: read, write, and execute: 7 read and execute: 5 read and write: 6 read only: 4",
          "type": "string"
        }
      }
    },
    "SoftwareRecipeStepExtractArchive": {
      "id": "SoftwareRecipeStepExtractArchive",
      "description": "Extracts an archive of the type specified in the specified directory.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "destination": {
          "description": "Directory to extract archive to. Defaults to \/ on Linux or C:\\ on Windows.",
          "type": "string"
        },
        "type": {
          "description": "The type of the archive to extract.",
          "type": "string",
          "enumDescriptions": [
            "Indicates that the archive type isn't specified.",
            "Indicates that the archive is a tar archive with no encryption.",
            "Indicates that the archive is a tar archive with gzip encryption.",
            "Indicates that the archive is a tar archive with bzip encryption.",
            "Indicates that the archive is a tar archive with lzma encryption.",
            "Indicates that the archive is a tar archive with xz encryption.",
            "Indicates that the archive is a zip archive."
          ],
          "enum": [
            "ARCHIVE_TYPE_UNSPECIFIED",
            "TAR",
            "TAR_GZIP",
            "TAR_BZIP",
            "TAR_LZMA",
            "TAR_XZ",
            "ZIP"
          ]
        }
      }
    },
    "SoftwareRecipeStepInstallMsi": {
      "id": "SoftwareRecipeStepInstallMsi",
      "description": "Installs an MSI file.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "flags": {
          "description": "The flags to use when installing the MSI defaults to [\"\/i\"] (i.e. the install flag).",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedExitCodes": {
          "description": "Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "SoftwareRecipeStepInstallDpkg": {
      "id": "SoftwareRecipeStepInstallDpkg",
      "description": "Installs a deb via dpkg.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        }
      }
    },
    "SoftwareRecipeStepInstallRpm": {
      "id": "SoftwareRecipeStepInstallRpm",
      "description": "Installs an rpm file via the rpm utility.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        }
      }
    },
    "SoftwareRecipeStepExecFile": {
      "id": "SoftwareRecipeStepExecFile",
      "description": "Executes an artifact or local file.",
      "type": "object",
      "properties": {
        "artifactId": {
          "description": "The id of the relevant artifact in the recipe.",
          "type": "string"
        },
        "localPath": {
          "description": "The absolute path of the file on the local filesystem.",
          "type": "string"
        },
        "args": {
          "description": "Arguments to be passed to the provided executable.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedExitCodes": {
          "description": "Defaults to [0]. A list of possible return values that the program can return to indicate a success.",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "SoftwareRecipeStepRunScript": {
      "id": "SoftwareRecipeStepRunScript",
      "description": "Runs a script through an interpreter.",
      "type": "object",
      "properties": {
        "script": {
          "description": "The shell script to be executed.",
          "type": "string"
        },
        "args": {
          "description": "Arguments to be passed to the provided script.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedExitCodes": {
          "description": "Return codes that indicate that the software installed or updated successfully. Behaviour defaults to [0]",
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "interpreter": {
          "description": "The script interpreter to use to run the script. If no interpreter is specified the script will be executed directly, which will likely only succeed for scripts with shebang lines. [Wikipedia shebang](https:\/\/en.wikipedia.org\/wiki\/Shebang_(Unix)).",
          "type": "string",
          "enumDescriptions": [
            "Default value for ScriptType.",
            "Indicates that the script will be run with \/bin\/sh on Linux and cmd on windows.",
            "Indicates that the script will be run with powershell."
          ],
          "enum": [
            "INTERPRETER_UNSPECIFIED",
            "SHELL",
            "POWERSHELL"
          ]
        }
      }
    },
    "ListGuestPoliciesResponse": {
      "id": "ListGuestPoliciesResponse",
      "description": "A response message for listing GuestPolicies.",
      "type": "object",
      "properties": {
        "guestPolicies": {
          "description": "The list of GuestPolicies.",
          "type": "array",
          "items": {
            "$ref": "GuestPolicy"
          }
        },
        "nextPageToken": {
          "description": "A pagination token that can be used to get the next page of GuestPolicies.",
          "type": "string"
        }
      }
    },
    "LookupEffectiveGuestPoliciesRequest": {
      "id": "LookupEffectiveGuestPoliciesRequest",
      "description": "A request message for getting the policies assigned to the instance.",
      "type": "object",
      "properties": {
        "instanceIdToken": {
          "description": "This is the GCE instance identity token described in https:\/\/cloud.google.com\/compute\/docs\/instances\/verifying-instance-identity where the audience is 'osconfig.googleapis.com' and the format is 'full'. If this is not provided, the request credentials will be used to authorize the request.",
          "type": "string"
        },
        "osShortName": {
          "description": "Short name of the OS running on the instance. The OS Config agent will only provide this field for targeting if OS Inventory is enabled for that instance.",
          "type": "string"
        },
        "osVersion": {
          "description": "Version of the OS running on the instance. The OS Config agent will only provide this field for targeting if OS Inventory is enabled for that instance.",
          "type": "string"
        },
        "osArchitecture": {
          "description": "Architecture of OS running on the instance. The OS Config agent will only provide this field for targeting if OS Inventory is enabled for that instance.",
          "type": "string"
        }
      }
    },
    "LookupEffectiveGuestPoliciesResponse": {
      "id": "LookupEffectiveGuestPoliciesResponse",
      "description": "Response with policy configs assigned to the instance.",
      "type": "object",
      "properties": {
        "packages": {
          "description": "List of package configurations assigned to the VM",
          "type": "array",
          "items": {
            "$ref": "LookupEffectiveGuestPoliciesResponseSourcedPackage"
          }
        },
        "packageRepositories": {
          "description": "List of package repository configurations assigned to the VM.",
          "type": "array",
          "items": {
            "$ref": "LookupEffectiveGuestPoliciesResponseSourcedPackageRepository"
          }
        },
        "softwareRecipes": {
          "description": "List of recipes assigned to the VM",
          "type": "array",
          "items": {
            "$ref": "LookupEffectiveGuestPoliciesResponseSourcedSoftwareRecipe"
          }
        }
      }
    },
    "LookupEffectiveGuestPoliciesResponseSourcedPackage": {
      "id": "LookupEffectiveGuestPoliciesResponseSourcedPackage",
      "description": "A GuestPolicy package including its source.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the GuestPolicy providing this config.",
          "type": "string"
        },
        "package": {
          "description": "A software package to configure on the VM.",
          "$ref": "Package"
        }
      }
    },
    "LookupEffectiveGuestPoliciesResponseSourcedPackageRepository": {
      "id": "LookupEffectiveGuestPoliciesResponseSourcedPackageRepository",
      "description": "A GuestPolicy package repository including its source.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the GuestPolicy providing this config.",
          "type": "string"
        },
        "packageRepository": {
          "description": "A software package repository to configure on the VM.",
          "$ref": "PackageRepository"
        }
      }
    },
    "LookupEffectiveGuestPoliciesResponseSourcedSoftwareRecipe": {
      "id": "LookupEffectiveGuestPoliciesResponseSourcedSoftwareRecipe",
      "description": "A GuestPolicy recipe including its source.",
      "type": "object",
      "properties": {
        "source": {
          "description": "Name of the GuestPolicy providing this config.",
          "type": "string"
        },
        "softwareRecipe": {
          "description": "A software recipe to configure on the VM.",
          "$ref": "SoftwareRecipe"
        }
      }
    }
  },
  "resources": {
    "projects": {
      "resources": {
        "patchJobs": {
          "methods": {
            "execute": {
              "id": "osconfig.projects.patchJobs.execute",
              "path": "v1alpha2/{+parent}/patchJobs:execute",
              "flatPath": "v1alpha2/projects/{projectsId}/patchJobs:execute",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The project in which to run this patch in the form `projects\/*`",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "ExecutePatchJobRequest"
              },
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Patch GCE instances by creating and running a PatchJob."
            },
            "get": {
              "id": "osconfig.projects.patchJobs.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/patchJobs/{patchJobsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Name of the patch in the form `projects\/*\/patchJobs\/*`",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/patchJobs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get the patch job. This can be used to track the progress of an ongoing patch job or review the details of completed jobs."
            },
            "cancel": {
              "id": "osconfig.projects.patchJobs.cancel",
              "path": "v1alpha2/{+name}:cancel",
              "flatPath": "v1alpha2/projects/{projectsId}/patchJobs/{patchJobsId}:cancel",
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Name of the patch in the form `projects\/*\/patchJobs\/*`",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/patchJobs\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "CancelPatchJobRequest"
              },
              "response": {
                "$ref": "PatchJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Cancel a patch job. The patch job must be active. Canceled patch jobs cannot be restarted."
            },
            "list": {
              "id": "osconfig.projects.patchJobs.list",
              "path": "v1alpha2/{+parent}/patchJobs",
              "flatPath": "v1alpha2/projects/{projectsId}/patchJobs",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "In the form of `projects\/*`",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of instance status to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional. A pagination token returned from a previous call that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "If provided, this field specifies the criteria that must be met by patch jobs to be included in the response. Currently, filtering is only available on the patch_deployment field.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListPatchJobsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a page of patch jobs."
            }
          }
          ,
          "resources": {
            "instanceDetails": {
              "methods": {
                "list": {
                  "id": "osconfig.projects.patchJobs.instanceDetails.list",
                  "path": "v1alpha2/{+parent}/instanceDetails",
                  "flatPath": "v1alpha2/projects/{projectsId}/patchJobs/{patchJobsId}/instanceDetails",
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "description": "In the form of `projects\/*\/patchJobs\/*`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/patchJobs\/[^\/]+$",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "The maximum number of instance details records to return.",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. A pagination token returned from a previous call that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "A filter expression that filters results listed in the response. Supports filtering results by instance zone, name, state, or failure_reason.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListPatchJobInstanceDetailsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get a page of instances' details for a given patch job."
                }
              }
            }
          }
        },
        "zones": {
          "resources": {
            "instances": {
              "methods": {
                "reportPatchJobInstanceDetails": {
                  "id": "osconfig.projects.zones.instances.reportPatchJobInstanceDetails",
                  "path": "v1alpha2/{+resource}:reportPatchJobInstanceDetails",
                  "flatPath": "v1alpha2/projects/{projectsId}/zones/{zonesId}/instances/{instancesId}:reportPatchJobInstanceDetails",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "The instance reporting its status in the form `projects\/*\/zones\/*\/instances\/*`",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/zones\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "ReportPatchJobInstanceDetailsRequest"
                  },
                  "response": {
                    "$ref": "ReportPatchJobInstanceDetailsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Deprecated: Should use AgentEndpoint API going forward. Will be removed in v1beta. Endpoint used by the agent to report back its state during a patch job. This endpoint will also return the patch job's state and configurations that the agent needs to know in order to run or stop patching. This endpoint is only used by the agent. Using it in other ways may affect the state of the active patch job and prevent the patches from being correctly applied to this instance."
                },
                "lookupGuestPolicies": {
                  "id": "osconfig.projects.zones.instances.lookupGuestPolicies",
                  "path": "v1alpha2/{+instance}:lookupGuestPolicies",
                  "flatPath": "v1alpha2/projects/{projectsId}/zones/{zonesId}/instances/{instancesId}:lookupGuestPolicies",
                  "httpMethod": "POST",
                  "parameters": {
                    "instance": {
                      "description": "The GCE VM instance whose policies are being looked up.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects\/[^\/]+\/zones\/[^\/]+\/instances\/[^\/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "instance"
                  ],
                  "request": {
                    "$ref": "LookupEffectiveGuestPoliciesRequest"
                  },
                  "response": {
                    "$ref": "LookupEffectiveGuestPoliciesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lookup the guest policies that are assigned to a GCE VM instance. This lookup will merge all policies that are assigned to the instance. This is usually called by the agent running on the instance, but it can also be called by users to see what configs are assigned to this instance."
                }
              }
            }
          }
        },
        "patchDeployments": {
          "methods": {
            "create": {
              "id": "osconfig.projects.patchDeployments.create",
              "path": "v1alpha2/{+parent}/patchDeployments",
              "flatPath": "v1alpha2/projects/{projectsId}/patchDeployments",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The project to apply this patch deployment to in the form `projects\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "patchDeploymentId": {
                  "description": "Required. The logical name of the patch deployment in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "PatchDeployment"
              },
              "response": {
                "$ref": "PatchDeployment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create an OS Config Patch Deployment."
            },
            "get": {
              "id": "osconfig.projects.patchDeployments.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the patch deployment in the form `projects\/*\/patchDeployments\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/patchDeployments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "PatchDeployment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get an OS Config Patch Deployment."
            },
            "list": {
              "id": "osconfig.projects.patchDeployments.list",
              "path": "v1alpha2/{+parent}/patchDeployments",
              "flatPath": "v1alpha2/projects/{projectsId}/patchDeployments",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the parent in the form `projects\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "Optional. The maximum number of patch deployments to return. Default is 100.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "Optional. A pagination token returned from a previous call to ListPatchDeployments that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListPatchDeploymentsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a page of OS Config Patch Deployments."
            },
            "delete": {
              "id": "osconfig.projects.patchDeployments.delete",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/patchDeployments/{patchDeploymentsId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "Required. The resource name of the patch deployment in the form `projects\/*\/patchDeployments\/*`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/patchDeployments\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete an OS Config Patch Deployment."
            }
          }
        },
        "guestPolicies": {
          "methods": {
            "create": {
              "id": "osconfig.projects.guestPolicies.create",
              "path": "v1alpha2/{+parent}/guestPolicies",
              "flatPath": "v1alpha2/projects/{projectsId}/guestPolicies",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "guestPolicyId": {
                  "description": "Required. The logical name of the Guest Policy in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create an OS Config Guest Policy."
            },
            "get": {
              "id": "osconfig.projects.guestPolicies.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource name of the GuestPolicy.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get an OS Config GuestPolicy."
            },
            "list": {
              "id": "osconfig.projects.guestPolicies.list",
              "path": "v1alpha2/{+parent}/guestPolicies",
              "flatPath": "v1alpha2/projects/{projectsId}/guestPolicies",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of GuestPolicies to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListGuestPolicies that indicates where this listing should continue from. This field is optional.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListGuestPoliciesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a page of OS Config GuestPolicies."
            },
            "patch": {
              "id": "osconfig.projects.guestPolicies.patch",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Unique name of the resource in this project using the form: `projects\/{project_id}\/guestPolicies\/{guest_policy_id}`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Field mask that controls which fields of the GuestPolicy should be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Update an OS Config GuestPolicy."
            },
            "delete": {
              "id": "osconfig.projects.guestPolicies.delete",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/projects/{projectsId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The resource name of the GuestPolicy.",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete an OS Config GuestPolicy."
            }
          }
        }
      }
    },
    "organizations": {
      "resources": {
        "guestPolicies": {
          "methods": {
            "create": {
              "id": "osconfig.organizations.guestPolicies.create",
              "path": "v1alpha2/{+parent}/guestPolicies",
              "flatPath": "v1alpha2/organizations/{organizationsId}/guestPolicies",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+$",
                  "type": "string"
                },
                "guestPolicyId": {
                  "description": "Required. The logical name of the Guest Policy in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create an OS Config Guest Policy."
            },
            "get": {
              "id": "osconfig.organizations.guestPolicies.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/organizations/{organizationsId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource name of the GuestPolicy.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get an OS Config GuestPolicy."
            },
            "list": {
              "id": "osconfig.organizations.guestPolicies.list",
              "path": "v1alpha2/{+parent}/guestPolicies",
              "flatPath": "v1alpha2/organizations/{organizationsId}/guestPolicies",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of GuestPolicies to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListGuestPolicies that indicates where this listing should continue from. This field is optional.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListGuestPoliciesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a page of OS Config GuestPolicies."
            },
            "patch": {
              "id": "osconfig.organizations.guestPolicies.patch",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/organizations/{organizationsId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Unique name of the resource in this project using the form: `projects\/{project_id}\/guestPolicies\/{guest_policy_id}`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Field mask that controls which fields of the GuestPolicy should be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Update an OS Config GuestPolicy."
            },
            "delete": {
              "id": "osconfig.organizations.guestPolicies.delete",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/organizations/{organizationsId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The resource name of the GuestPolicy.",
                  "location": "path",
                  "required": true,
                  "pattern": "^organizations\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete an OS Config GuestPolicy."
            }
          }
        }
      }
    },
    "folders": {
      "resources": {
        "guestPolicies": {
          "methods": {
            "create": {
              "id": "osconfig.folders.guestPolicies.create",
              "path": "v1alpha2/{+parent}/guestPolicies",
              "flatPath": "v1alpha2/folders/{foldersId}/guestPolicies",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+$",
                  "type": "string"
                },
                "guestPolicyId": {
                  "description": "Required. The logical name of the Guest Policy in the project with the following restrictions: * Must contain only lowercase letters, numbers, and hyphens. * Must start with a letter. * Must be between 1-63 characters. * Must end with a number or a letter. * Must be unique within the project.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Create an OS Config Guest Policy."
            },
            "get": {
              "id": "osconfig.folders.guestPolicies.get",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/folders/{foldersId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "description": "The resource name of the GuestPolicy.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get an OS Config GuestPolicy."
            },
            "list": {
              "id": "osconfig.folders.guestPolicies.list",
              "path": "v1alpha2/{+parent}/guestPolicies",
              "flatPath": "v1alpha2/folders/{foldersId}/guestPolicies",
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "description": "The resource name of the parent.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "description": "The maximum number of GuestPolicies to return.",
                  "location": "query",
                  "type": "integer",
                  "format": "int32"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListGuestPolicies that indicates where this listing should continue from. This field is optional.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListGuestPoliciesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Get a page of OS Config GuestPolicies."
            },
            "patch": {
              "id": "osconfig.folders.guestPolicies.patch",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/folders/{foldersId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "description": "Unique name of the resource in this project using the form: `projects\/{project_id}\/guestPolicies\/{guest_policy_id}`.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "description": "Field mask that controls which fields of the GuestPolicy should be updated.",
                  "location": "query",
                  "type": "string",
                  "format": "google-fieldmask"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GuestPolicy"
              },
              "response": {
                "$ref": "GuestPolicy"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Update an OS Config GuestPolicy."
            },
            "delete": {
              "id": "osconfig.folders.guestPolicies.delete",
              "path": "v1alpha2/{+name}",
              "flatPath": "v1alpha2/folders/{foldersId}/guestPolicies/{guestPoliciesId}",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "description": "The resource name of the GuestPolicy.",
                  "location": "path",
                  "required": true,
                  "pattern": "^folders\/[^\/]+\/guestPolicies\/[^\/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Delete an OS Config GuestPolicy."
            }
          }
        }
      }
    }
  },
  "basePath": ""
}